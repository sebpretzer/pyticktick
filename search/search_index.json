{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"pyticktick","text":"<p><code>pyticktick</code> is the modern (unofficial) Python library for interacting with TickTick. <code>pyticktick</code> supports both the official and unofficial APIs, provides elegant retry logic, and catches data errors early with <code>pydantic</code>.</p> <p>Make sure you have <code>pyticktick</code> installed, then you can get all your projects and tasks:</p> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client(v2_username=\"username\", v2_password=\"password\")\nresp = client.get_batch_v2()\n\nprint(\"My Projects:\")\nfor project in resp.project_profiles:\n    print(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n\nprint(\"My Tasks:\")\nfor task in resp.sync_task_bean.update:\n    print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>To see more, you can check out all of the recipes from the cookbook.</p> Disclaimer <p>This project is not affiliated with TickTick, and parts of the API accessed by the client are not officially supported. It may even go against their Terms of Service. See Which API should I use? for more information.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#020","title":"0.2.0","text":"<ul> <li>Add missing fields to <code>pyticktick.models.v2.TaskV2</code> #86</li> <li>Fix integration test warnings #85</li> <li>Fix unit test warnings #84</li> <li>Add <code>BaseModelV2</code> for all V2 models to inherit from #83</li> <li>Add models in <code>pyticktick.models.v2.models</code> to <code>pyticktick.models.v2</code> #82</li> <li>Fix <code>created_campaign</code> in <code>pyticktick.models.v2.UserProfileV2</code> #79</li> <li>Fix empty string conversion for <code>pyticktick.models.v2.TaskV2</code> #78</li> <li>Fix typos in <code>pyticktick.models.v2.GetClosedV2</code> #77</li> <li>Add support for 2FA #72</li> <li>Fix changelog extractor for release github action #42</li> </ul>"},{"location":"CHANGELOG/#010","title":"0.1.0","text":"<ul> <li>Refactor V1 model names to be more consistent with V2 model names #40</li> <li>Isolate generic Pydantic types that are used in both V1 and V2 APIs #39</li> </ul>"},{"location":"CHANGELOG/#003","title":"0.0.3","text":"<ul> <li>Switch Github Actions to use <code>uv</code> managed python installs #38</li> <li>Cleaned up type hints via upgrading to ruff 0.12.0 #33</li> <li>Fixed grammar in docs with help from Claude #28</li> <li>Added guides on how to authenticate the client #26</li> </ul>"},{"location":"CHANGELOG/#002","title":"0.0.2","text":"<ul> <li>Re-release of <code>0.0.1</code>, since <code>0.0.1</code> was already created during testing. #3</li> </ul>"},{"location":"CHANGELOG/#001","title":"0.0.1","text":"<ul> <li>Initial release of the <code>pyticktick</code> library.</li> </ul>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at [INSERT CONTACT METHOD]. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>There are several ways to contribute to <code>pyticktick</code>, based on your level of commitment. Please read the Code of Conduct before contributing.</p>"},{"location":"CONTRIBUTING/#opening-an-issue","title":"Opening an Issue","text":"<p>For any of the following issue types, you can open a new issue and follow along with the corresponding template.</p>"},{"location":"CONTRIBUTING/#reporting-a-bug","title":"Reporting a Bug","text":"<p>You can report a bug by using the bug report template on the <code>pyticktick</code> repository. Please make sure to do the following:</p> <ol> <li>Check that there is no existing issue for the bug you are reporting</li> <li>Ensure the bug is reproducible, and you have provided a minimal code example, following this guide</li> <li>Provide any applicable logs</li> </ol>"},{"location":"CONTRIBUTING/#feature-request","title":"Feature Request","text":"<p>You can request a feature by using the feature request template on the <code>pyticktick</code> repository. Please make sure to do the following:</p> <ol> <li>Check that there is no existing issue for the feature you are requesting</li> <li>Ensure the feature is not already implemented in the latest version of <code>pyticktick</code>, or in the repository codebase</li> <li>Provide any example code or pseudocode to help demonstrate the feature</li> <li>Provide the endpoint, and any relevant parameters / responses (if applicable)</li> </ol>"},{"location":"CONTRIBUTING/#documentation-improvement","title":"Documentation Improvement","text":"<p>You can request to improve the documentation by using the documentation improvement template on the <code>pyticktick</code> repository. Please make sure to do the following:</p> <ol> <li>Check that there is no existing issue for the documentation improvement you are requesting</li> <li>Provide a link to the relevant documentation page (if applicable)</li> </ol>"},{"location":"CONTRIBUTING/#contributing-to-the-documentation","title":"Contributing to the Documentation","text":"<p>In order to contribute to the documentation, please go through the issue tracker to find an issue that you can work on. If you don't find an issue, you can create a new one.</p> <p>Fork the repository and create a new branch for your changes. When you have the forked repository on your workspace, you can set up your local environment and run the documentation server locally.</p> <p>This documentation attempts to follow the approach of Di\u00e1taxis. Please ensure that you bucket your changes into the appropriate section of the documentation, depending on the question you are answering. You may find that your documentation changes can be split into multiple buckets.</p> <p>When you are ready to submit your changes, you can open a pull request.</p>"},{"location":"CONTRIBUTING/#contributing-to-the-codebase","title":"Contributing to the Codebase","text":"<p>In order to contribute to the codebase, please go through the issue tracker to find an issue that you can work on. If you don't find an issue, you can create a bug report or feature request.</p> <p>Fork the repository and create a new branch for your changes. When you have the forked repository on your workspace, you can set up your local environment. You should try your best to follow the codebase conventions when making your changes. Once you are done editing, it's time to test your changes locally.</p> <p>Once all tests pass on your machine, you can open a pull request.</p>"},{"location":"CONTRIBUTING/#opening-a-pull-request","title":"Opening a Pull Request","text":"<p>To open a pull request, you can follow GitHub's guide. Please adhere to the following guidelines:</p> <ul> <li>Title<ul> <li>Do not use the auto-generated title, re-word your title to be more descriptive</li> <li>Keep it concise and clear</li> </ul> </li> <li>Description<ul> <li>Link to the issue you were addressing</li> <li>Add any relevant context to your pull request to help reviewers understand the changes you made</li> </ul> </li> <li>Make sure your branch is rebased against the latest commit of the <code>main</code> branch.</li> <li>Make sure all tests have already passed on your machine.</li> </ul>"},{"location":"explanations/code_conventions/","title":"Code Conventions","text":"<p>The library follows a set of conventions in order to ensure a consistent and predictable interface for all users. User-facing code should follow these conventions. This mainly applies to the Pydantic models, and the client structure.</p>"},{"location":"explanations/code_conventions/#pydantic-models","title":"Pydantic Models","text":""},{"location":"explanations/code_conventions/#when-to-use-pydantic-models","title":"When to Use Pydantic Models","text":"<p>The library attempts to use Pydantic models for all data entering or exiting its scope. This ensures that the library can validate and enforce data consistency on its own terms, rather than relying on external validation mechanisms. This means that all TickTick API request parameters and responses use Pydantic models. The library also relies on Pydantic to validate its settings.</p> <p>If you want to learn more about the benefits of using Pydantic models, check out the Pydantic documentation.</p>"},{"location":"explanations/code_conventions/#model-organization","title":"Model Organization","text":"<p>All models should be isolated to the <code>pyticktick/models</code> directory. This is somewhat of a standard practice, and you will notice it across other libraries as well.</p> <p>Models are split between the <code>V1</code> and <code>V2</code> APIs to ensure isolation. Within each API version, the models are split yet again into parameters and responses. At that point, they are grouped based on their purpose and object-types they manipulate.</p> <p>If there are any types that should be shared across multiple models, they should be placed in a shared file, still within the API version directory.</p> <p>You can see the general structure below:</p> <pre><code>pyticktick/models\n\u251c\u2500\u2500 v1\n\u2502   \u251c\u2500\u2500 parameters\n\u2502   \u2502   \u251c\u2500\u2500 project.py\n\u2502   \u2502   \u251c\u2500\u2500 task.py\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 responses\n\u2502       \u251c\u2500\u2500 project.py\n\u2502       \u251c\u2500\u2500 task.py\n\u2502       \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 v2\n    \u251c\u2500\u2500 parameters\n    \u2502   \u251c\u2500\u2500 project.py\n    \u2502   \u251c\u2500\u2500 task.py\n    \u2502   \u251c\u2500\u2500 tag.py\n    \u2502   \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 responses\n    \u2502   \u251c\u2500\u2500 project.py\n    \u2502   \u251c\u2500\u2500 task.py\n    \u2502   \u251c\u2500\u2500 tag.py\n    \u2502   \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 models.py\n    \u2514\u2500\u2500 types.py\n</code></pre>"},{"location":"explanations/code_conventions/#naming-models","title":"Naming Models","text":"<p>Parameter models attempt to follow the naming convention of request method, followed by endpoint name / TickTick object type, followed by API version. The rule does not have to be rigid, but should be descriptive enough to understand the purpose of the model. Here are some examples:</p> <ul> <li><code>UpdateProjectV1()</code></li> <li><code>PostBatchProjectV2()</code></li> <li><code>GetClosedV2()</code></li> </ul> <p>Response models attempt to follow the naming convention of endpoint name / TickTick object type, followed by \"resp\", followed by API version. Here are some examples:</p> <ul> <li><code>TaskRespV1()</code></li> <li><code>BatchTagRespV2()</code></li> <li><code>UserSignOnV2()</code></li> </ul>"},{"location":"explanations/code_conventions/#client-structure","title":"Client Structure","text":"<p>The majority of the library's functionality is encapsulated within the <code>Client</code> class. This class is responsible for managing the connection to the TickTick API, handling authentication, and providing a high-level interface for interacting with the API.</p>"},{"location":"explanations/code_conventions/#settings","title":"Settings","text":"<p>The <code>Client</code> class is a subclass of the <code>Settings</code> class. This is what handles all the authentication and configuration for the client. There are two separate APIs, so authentication is handled differently for each. All attributes relating to one of the APIs are prefixed with <code>v1_</code> and <code>v2_</code> respectively. Helper functions for managing the authentication process should also have <code>v1_</code> and <code>v2_</code> prefixes.</p>"},{"location":"explanations/code_conventions/#function-naming","title":"Function Naming","text":"<p>Functions are organized by API version. Similar to how models are named, functions attempt to follow the naming convention of request method, followed by endpoint, followed by API version.</p>"},{"location":"explanations/code_conventions/#function-inputs-and-outputs","title":"Function Inputs and Outputs","text":"<p>Path parameters are given their own argument names in functions, whereas query parameters are passed in as a singular data object. The path parameters mostly only apply to the V1 API, as the V2 API mainly utilizes query parameters.</p> <p>The client tries to be flexible by allowing query parameters to be passed in as a Pydantic model or dictionary representation of that model. If a dictionary is passed in, the function will do the validation on behalf of the user.</p> <p>Any function that calls an API should return a response model.</p>"},{"location":"explanations/comparison_of_similar_libraries/","title":"Comparison of Similar Libraries","text":"<p>There are a few Python libraries that provide similar functionality to <code>pyticktick</code>:</p> <ol> <li>ticktick-py</li> <li>dida365</li> <li>didatodolist</li> <li>tickthon</li> </ol> <p>These libraries are all designed independently to interact with the TickTick API. <code>pyticktick</code> is another library that overlaps with these other libraries, making it the target of this xkcd joke:</p> Relevant xkcd #927 <p>The other libraries came first, and were inspiration for <code>pyticktick</code>. So by all means, use them if they better suit your needs. They have been around for longer, so are probably more bug-free. <code>pyticktick</code> does take advantage of learnings in those libraries, and this explanation attempts to make a helpful comparison of the other libraries to <code>pyticktick</code>.</p> Out of Date Comparisons! <p>The hope is that this document will serve as a reference for users who are considering using the right library for their needs. It is a best attempt at providing a comprehensive comparison, but it may not be up to date, as the other libraries may add functionality. You can see the last time this document was updated at the very bottom.</p>"},{"location":"explanations/comparison_of_similar_libraries/#high-level-comparison","title":"High-Level Comparison","text":"<p>At a high level, this is a breakdown of the features and capabilities of each library:</p> Feature pyticktick ticktick-py dida365 didatodolist tickthon V1 Support V2 Support V1 / V2 Isolation Pydantic Support Retry Support Async Support TickTick Support DIDA365 Support <p>Note</p> <p>This chart does not provide the full picture, and a lot of the provided features are more nuanced than a binary supported or not.</p>"},{"location":"explanations/comparison_of_similar_libraries/#v1-support","title":"V1 Support","text":"<p>The TickTick V1 API has a handful of endpoints that are supported. TickTick provides a spec to work off of. While it may seem like some libraries are missing features, they may just be supporting the V2 API, since there is a lot of overlap.</p> Components pyticktick ticktick-py dida365 didatodolist tickthon Get Task by ID Create Task Update Task Complete Task Delete Task Get Projects Get Project by ID Get Project With Data Create Project Update Project Delete Project"},{"location":"explanations/comparison_of_similar_libraries/#v2-support","title":"V2 Support","text":"<p>The TickTick V2 API is undocumented, so the descriptions below may not be fully accurate. There may also be unknown endpoints that are not documented here.</p> Components pyticktick ticktick-py dida365 didatodolist tickthon Get Active Data Endpoint Get Completed Tasks Endpoint Get User Setting Endpoints Post Project Endpoints Post Task Endpoints Post Tag Endpoints Post Pomodoro Endpoints Post Habits Endpoints Post Countdown Endpoints 2FA Support Why no support for pomodoro, habits, countdown, etc? <p>The essential features of TickTick are the projects, tasks, and tags components. These are fully supported in <code>pyticktick</code>. The other features are not essential to everyone, but might be important to you. If you need support for these features, please open an issue on the GitHub repository.</p>"},{"location":"explanations/comparison_of_similar_libraries/#v1-v2-isolation","title":"V1 / V2 Isolation","text":"<p><code>pyticktick</code> is the only library that supports both V1 and V2 endpoints in a way that they can be used independently. <code>ticktick-py</code> has limited support for V1 endpoints, but its entangled with V2 endpoints. To see why <code>pyticktick</code> built isolated functionality for V1 and V2 endpoints, you should read why <code>pyticktick</code> supports two apis.</p>"},{"location":"explanations/comparison_of_similar_libraries/#pydantic-support","title":"Pydantic Support","text":"<p><code>pyticktick</code> and <code>dida365</code> both support Pydantic models for their data structures. This allows for easier data validation and stronger guarantees about the data being sent to and from the TickTick API. <code>pyticktick</code> is the only library to support this for the V2 endpoint.</p>"},{"location":"explanations/comparison_of_similar_libraries/#retry-support","title":"Retry support","text":"<p><code>pyticktick</code> and <code>dida365</code> both support retrying when the V1 endpoint is overloaded with too many requests. <code>ticktick-py</code> is the only library to support retries for both V1 and V2 endpoints. This was not implemented in <code>pyticktick</code> since it was impossible to determine which V2 calls were failing due to rate limits versus other errors.</p>"},{"location":"explanations/comparison_of_similar_libraries/#async-support","title":"Async Support","text":"<p><code>dida365</code> is the only library to support asynchronous operations, although it does not support synchronous operations, that must be handled manually.</p>"},{"location":"explanations/comparison_of_similar_libraries/#ticktick-vs-dida365","title":"TickTick vs DIDA365","text":"<p>TickTick and DIDA365 are the same application, but DIDA365 is the Chinese version. They share similar API endpoints, but with different URLs. The names of the libraries match the names of the applications they support, with the exception of <code>dida365</code>, which has the ability to support both <code>TickTick</code> and <code>DIDA365</code> endpoints.</p>"},{"location":"explanations/comparison_of_similar_libraries/#what-makes-pyticktick-worth-using","title":"What Makes <code>pyticktick</code> Worth Using?","text":"<p><code>pyticktick</code> has been designed to provide the best experience to developers with:</p> <ol> <li>An emphasis on user experience, providing flexibility where it can (V1 / V2 Support), and providing rigidity where it should (Pydantic Support).</li> <li>A consistent interface that is easy to use and understand.</li> <li>Thorough documentation, to make learning as easy as possible.</li> </ol>"},{"location":"explanations/forbidding_extra_fields_in_api_models/","title":"Forbidding Extra Fields in API Models","text":""},{"location":"explanations/forbidding_extra_fields_in_api_models/#which-models-forbid-extra-fields","title":"Which Models Forbid Extra Fields?","text":"<p>The V2 API models in <code>pyticktick.models.v2</code> forbid extra fields. This means that any unexpected fields in the JSON data will raise a <code>pydantic.ValidationError</code> of type extra_forbidden. For V1 models, we allow extra fields on response models (<code>pyticktick.models.v1.response</code>) but not on request parameter models (<code>pyticktick.models.v1.parameters</code>).</p>"},{"location":"explanations/forbidding_extra_fields_in_api_models/#why-forbid-extra-fields","title":"Why Forbid Extra Fields?","text":"<p>We forbid extra fields to ensure that the models are robust. On the response side, we have no knowledge of when TickTick will update their API, so we must be alerted to any changes and update our models accordingly. This means that our response models must be more strict than Pydantic's default.</p> <p>On the request side, we do not want users accidentally attempting to add any fields that are irrelevant to the API. By default, Pydantic will just ignore any extra fields. This silent error handling can mislead users into thinking their extra fields are being accepted by the API.</p>"},{"location":"explanations/forbidding_extra_fields_in_api_models/#what-if-the-api-changes","title":"What if the API Changes?","text":"<p>If the V2 API changes, we will need to update our models. If there is any lag between the API update and the model update, the models will throw a validation error. We have an escape hatch to override this behavior, at least on the response side.</p>"},{"location":"explanations/forbidding_extra_fields_in_api_models/#why-ignore-extra-fields-in-v1-response-models","title":"Why Ignore Extra Fields in V1 Response Models?","text":"<p>TickTick provides documentation for the V1 API, so we should remain as faithful as possible to their API. Unfortunately, their documentation is not fully up to date. Extra undocumented fields appear in the API responses, so we just ignore them to most closely represent their API.</p>"},{"location":"explanations/ticktick_api/checklists_vs_subtasks/","title":"Checklist vs Subtasks","text":"<p>TickTick supports both checklists (called check items) and subtasks (called multilevel tasks). These have very similar functionalities, and it can be difficult to determine when to use one over the other.</p> Difference between a checklist and subtasks:"},{"location":"explanations/ticktick_api/checklists_vs_subtasks/#what-are-the-differences-between-checklists-and-subtasks","title":"What Are the Differences Between Checklists and Subtasks?","text":""},{"location":"explanations/ticktick_api/checklists_vs_subtasks/#features","title":"Features","text":"<p>Subtasks are fully-featured task objects, so they have all the bells and whistles of a task. On the other hand, checklists are not task objects, and are much more limited in functionality. They don't have much more than the ability to have a basic due date, and be able to be sorted.</p> <p>Subtasks can be nested up to 5 levels deep, allowing for a more detailed organization of the separate tasks. Checklists just have the single level.</p>"},{"location":"explanations/ticktick_api/checklists_vs_subtasks/#discovery","title":"Discovery","text":"<p>You can see in the example above how subtasks are treated as tasks, and take up real estate in the task list. Depending on your filter, they can be displayed by themselves separated from the parent task.</p> <p>Subtasks also add to the overall task count. A task with three subtasks will have a task count of four whereas a checklist with three items will have a task count of one.</p>"},{"location":"explanations/ticktick_api/checklists_vs_subtasks/#when-to-use-checklists-vs-subtasks","title":"When to Use Checklists vs Subtasks?","text":"<p>It is up to you to decide when to use checklists vs subtasks. <code>r/ticktick</code> is a good resource for anecdotes and tips on how to use TickTick, like this breakdown of checklists vs subtasks.</p> <p>If you need some guidance, checklists are probably suited for tasks that should be completed in a single period of time or work. Subtasks are more disjointed, and therefore lend themselves to being more useful for complex tasks that cannot be completed in a single period.</p>"},{"location":"explanations/ticktick_api/kinds_of_tasks/","title":"Kinds of Tasks","text":"<p>There are three kinds of tasks in TickTick, which are encapsulated in the <code>pyticktick.models.v2.Kind</code> type:</p> <pre><code>Kind = Literal[\"TEXT\", \"NOTE\", \"CHECKLIST\"]\n</code></pre> <ol> <li>Standard Tasks (<code>TEXT</code>)</li> <li>Notes (<code>NOTE</code>)</li> <li>Checklists (<code>CHECKLIST</code>)</li> </ol>"},{"location":"explanations/ticktick_api/kinds_of_tasks/#standard-tasks","title":"Standard Tasks","text":"<p>If you have used TickTick already, standard tasks should be relatively familiar. This is the default kind of task, and probably the most common kind of task in your TickTick account. They have a title, maybe some content, a due date, etc. They are extremely flexible, and can do most of what you require. You can visit TickTick's documentation for more information.</p> <p>In certain cases, the standard task is not flexible enough, and that is where Notes and Checklists come in.</p>"},{"location":"explanations/ticktick_api/kinds_of_tasks/#notes","title":"Notes","text":"<p>Notes are a lightweight way to capture thoughts, ideas, etc. By keeping these notes in TickTick, they are tightly integrated with your task system, which can be beneficial. They also can have reminders, so that you do not lose track of them. If you are making a task, you can convert it to a note after the fact, which can be helpful. If you want to learn more, you can check out TickTick's documentation.</p>"},{"location":"explanations/ticktick_api/kinds_of_tasks/#checklists","title":"Checklists","text":"<p>TickTick sometimes refers to these as a task with \"check items\". These are tasks that have a list of items that need to be completed. They are useful when you have a complex task that should be broken down into smaller tasks. You can learn a bit more with TickTick's documentation.</p> <p>Checklist vs Subtasks</p> <p>TickTick has the ability to move tasks under other tasks, making them subtasks. This is different from a checklist. To understand the difference, you can go to Checklists vs Subtasks.</p>"},{"location":"explanations/ticktick_api/two_apis/","title":"The Two TickTick APIs","text":""},{"location":"explanations/ticktick_api/two_apis/#overview","title":"Overview","text":"<p>You may notice throughout this documentation that there are two different APIs that are referenced and supported. This is because TickTick has provided two different interfaces that users can, in theory, interact with. The first, API V1, is the official API that TickTick has provided to developers. The second, API V2, is an unofficial API that has been reverse-engineered by the community, and can be observed by inspecting network requests made by the TickTick web app.</p>"},{"location":"explanations/ticktick_api/two_apis/#api-v1","title":"API V1","text":"<p>The official API, formally known as the TickTick Open API, is a RESTful API for managing user tasks, and lists. You can learn more from their official documentation. Given that there are two APIs, and this API's URL starts with <code>api.ticktick.com/open/v1/</code>, we will refer to this as API V1.</p>"},{"location":"explanations/ticktick_api/two_apis/#api-v2","title":"API V2","text":"<p>The unofficial API does not have a formal name, but we refer to it as API V2, given the URL starts with <code>api.ticktick.com/api/v2/</code>. This API is undocumented, so the information provided in this documentation is based on other projects' efforts to reverse-engineer the API, as well as our own observations, and may not be entirely accurate. This is the API that the TickTick web app uses to communicate with the TickTick servers, so anything you can do in the web app, you can do with this API.</p>"},{"location":"explanations/ticktick_api/two_apis/#why-support-two-apis","title":"Why support two APIs?","text":"<p>The goal is to provide the best experience possible for developers using this library. The official API is well-documented, and is the one that TickTick has provided. However, the unofficial API is more robust, and provides significantly more functionality than the official API. API V1 is limited to managing lists and tasks alone (not including the inbox list). API V2, on the other hand, provides access to all of the features that the TickTick web app has, including tags, sublists, subtasks, and more. This is why this library supports both APIs.</p>"},{"location":"explanations/ticktick_api/two_apis/#which-api-should-i-use","title":"Which API should I use?","text":"<p>TickTick has not mentioned the API V2 anywhere on their website, but it provides a better experience for developers. Given that TickTick has not given explicit permission to use it, it may go against their Terms of Service. This was discussed in lazeroffmichael/ticktick-py#38 if you want to see other developers' opinions on the matter. This library's recommendation is to use the official API where possible, and only use the unofficial API when necessary. The library client is designed to be flexible, so you can do whatever you feel comfortable with.</p>"},{"location":"guides/installation/","title":"Installation","text":""},{"location":"guides/installation/#pypi","title":"PyPI","text":"<p><code>pyticktick</code> is available on PyPI.</p> <p>It can be installed with <code>pip</code>:</p> <pre><code>pip install pyticktick\n</code></pre> <p>It can be installed with <code>uv</code>:</p> <pre><code>uv add pyticktick\n</code></pre> <p>Or you can install it with any other package manager that supports PyPI.</p>"},{"location":"guides/installation/#github","title":"GitHub","text":"<p>Certain package managers also support installation from GitHub. You can install <code>pyticktick</code> from GitHub with <code>pip</code>:</p> <pre><code>pip install git+https://github.com/sebpretzer/pyticktick.git@main\n</code></pre> <p>Or with <code>uv</code>:</p> <pre><code>uv add \"pyticktick @ git+https://github.com/sebpretzer/pyticktick\"\n</code></pre>"},{"location":"guides/cookbook/project_groups/add_a_new_project_to_a_project_group/","title":"Add a New Project to a Project Group","text":"<p>Let's assume we want to create a new project with the following properties:</p> <ul> <li>Name: Test Project</li> <li>Color:  <code>rgb(108, 213, 123)</code></li> <li>View Type: List</li> <li>List Type: Task List</li> </ul> <p>We want to add this project to a project group with ID <code>6822056a27de221753d62eec</code>, and name <code>Project Group 1</code>.</p> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nproject = client.post_project_v2(\n    data={\n        \"add\": [\n            {\n                \"name\": \"Test Project\",\n                \"color\": \"rgb(108, 213, 123)\",\n                \"view_mode\": \"list\",\n                \"kind\": \"TASK\",\n                \"group_id\": \"6822056a27de221753d62eec\",\n            },\n        ],\n    },\n)\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"7n5icwsb\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, CreateProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        add=[\n            CreateProjectV2(\n                name=\"Test Project\",\n                color=\"rgb(108, 213, 123)\",\n                view_mode=\"list\",\n                kind=\"TASK\",\n                group_id=\"6822056a27de221753d62eec\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"7n5icwsb\"\n    }\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/add_an_existing_project_to_a_project_group/","title":"Add an Existing Project to a Project Group","text":"<p>Let's assume we want to take the existing project that we created in the add a new project to a project group recipe and add it to a new project group.</p> <p>The project ID to update is <code>682221078f082a6819e4f03b</code>.</p> <p>We want to add this to the project group <code>Project Group 2</code> with ID <code>682222ae27de221753d63014</code>.</p> <p>This is what the update would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nproject = None\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.id == \"682221078f082a6819e4f03b\":\n        project = p\n        break\n\nif project is None:\n    msg = \"Project not found\"\n    raise ValueError(msg)\n\nresp = client.post_project_v2(\n    data={\n        \"update\": [\n            {\n                \"id\": project.id,\n                \"name\": project.name,\n                \"color\": project.color,\n                \"view_mode\": project.view_mode,\n                \"kind\": project.kind,\n                \"sort_order\": project.sort_order,\n                \"group_id\": \"682222ae27de221753d63014\",\n            },\n        ],\n    },\n)\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"4tw3d7ub\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, UpdateProjectV2\n\nclient = Client()\nproject = None\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.id == \"682221078f082a6819e4f03b\":\n        project = p\n        break\n\nif project is None:\n    msg = \"Project not found\"\n    raise ValueError(msg)\n\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        update=[\n            UpdateProjectV2(\n                id=project.id,\n                name=project.name,\n                color=project.color,\n                view_mode=project.view_mode,\n                kind=project.kind,\n                sort_order=project.sort_order,\n                group_id=\"682222ae27de221753d63014\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"4tw3d7ub\"\n    }\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/create_a_project_group/","title":"Create a Project Group","text":"<p>Let's assume we want to create a new project group named <code>Test Project Group</code>:</p> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_project_group_v2(data={\"add\": [{\"name\": \"Test Project Group\"}]})\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6821f8618f08de9a850d65ce\": \"g5zxj65x\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import CreateProjectGroupV2, PostBatchProjectGroupV2\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(\n        add=[CreateProjectGroupV2(name=\"Test Project Group\")],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6821f8618f08de9a850d65ce\": \"g5zxj65x\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/project_groups/delete_a_project_group/","title":"Delete a Project Group","text":"<p>Let's assume we want to delete the project group from the create project group recipe and the update project group recipe, which had the project group id <code>6821f8618f08de9a850d65ce</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V2 - dictV2 - model <pre><code>from pyticktick import Client\n\nclient = Client()\nresp = client.post_project_group_v2(data={\"delete\": [\"6821f8618f08de9a850d65ce\"]})\n</code></pre> <p>This will not return anything of value, just an empty <code>BatchRespV2</code> object.</p> <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectGroupV2\n\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(delete=[\"6821f8618f08de9a850d65ce\"]),\n)\n</code></pre> <p>This will not return anything of value, just an empty <code>BatchRespV2</code> object.</p>"},{"location":"guides/cookbook/project_groups/get_a_project_group_by_id/","title":"Get a Project Group by ID","text":"<p>Let's assume we want to get a project group with the project group ID <code>6822056f27de221753d62ef0</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V2 <pre><code>import json\nfrom pyticktick import Client\n\nresp = client.get_batch_v2()\nif resp.project_groups is None:\n    print(\"No project groups found.\")\nelse:\n    for pg in resp.project_groups:\n        if pg.id == \"6822056f27de221753d62ef0\":\n            print(json.dumps(pg.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"etag\": \"y8vuqi2b\",\n    \"id\": \"6822056f27de221753d62ef0\",\n    \"name\": \"Project Group 2\",\n    \"sort_option\": null,\n    \"view_mode\": null,\n    \"deleted\": 0,\n    \"show_all\": true,\n    \"sort_order\": -8658654068736,\n    \"sort_type\": \"\",\n    \"team_id\": null,\n    \"timeline\": null,\n    \"user_id\": 126406863\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/get_a_project_group_by_name/","title":"Get a Project Group by Name","text":"<p>Let's assume we want to get a project group with the project group name <code>Project Group 2</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V2 <pre><code>import json\nfrom pyticktick import Client\n\nresp = client.get_batch_v2()\nif resp.project_groups is None:\n    print(\"No project groups found.\")\nelse:\n    for pg in resp.project_groups:\n        if pg.name == \"Project Group 2\":\n            print(json.dumps(pg.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"etag\": \"y8vuqi2b\",\n    \"id\": \"6822056f27de221753d62ef0\",\n    \"name\": \"Project Group 2\",\n    \"sort_option\": null,\n    \"view_mode\": null,\n    \"deleted\": 0,\n    \"show_all\": true,\n    \"sort_order\": -8658654068736,\n    \"sort_type\": \"\",\n    \"team_id\": null,\n    \"timeline\": null,\n    \"user_id\": 126406863\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/get_all_project_groups/","title":"Get All Project Groups","text":"<p>Let's assume we want to get all projects groups from the TickTick account. This is what the current projects look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nif resp.project_groups is None:\n    print(\"No project groups found.\")\nelse:\n    for pg in resp.project_groups:\n        print(json.dumps(pg.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"etag\": \"khvuytut\",\n    \"id\": \"6822056a27de221753d62eec\",\n    \"name\": \"Project Group 1\",\n    \"sort_option\": null,\n    \"view_mode\": null,\n    \"deleted\": 0,\n    \"show_all\": true,\n    \"sort_order\": -8796093022208,\n    \"sort_type\": \"\",\n    \"team_id\": null,\n    \"timeline\": null,\n    \"user_id\": 126406863\n}\n{\n    \"etag\": \"8eamrfe8\",\n    \"id\": \"6822057727de221753d62ef4\",\n    \"name\": \"Project Group 3\",\n    \"sort_option\": null,\n    \"view_mode\": null,\n    \"deleted\": 0,\n    \"show_all\": true,\n    \"sort_order\": -8521215115264,\n    \"sort_type\": \"\",\n    \"team_id\": null,\n    \"timeline\": null,\n    \"user_id\": 126406863\n}\n{\n    \"etag\": \"y8vuqi2b\",\n    \"id\": \"6822056f27de221753d62ef0\",\n    \"name\": \"Project Group 2\",\n    \"sort_option\": null,\n    \"view_mode\": null,\n    \"deleted\": 0,\n    \"show_all\": true,\n    \"sort_order\": -8658654068736,\n    \"sort_type\": \"\",\n    \"team_id\": null,\n    \"timeline\": null,\n    \"user_id\": 126406863\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/remove_a_project_from_a_project_group/","title":"Remove a Project From a Project Group","text":"<p>Let's assume we want to take the existing project that we used in the add a new project to a project group recipe and add an existing project to a group recipe and remove it's from the project group.</p> <p>The project ID to update is <code>682221078f082a6819e4f03b</code>.</p> <p>This is what the update would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> <p>Warning</p> <p>The <code>group_id</code> is set to <code>\"NONE\"</code> to remove the project from the group, rather than the standard <code>None</code> Python value.</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nproject = None\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.id == \"682221078f082a6819e4f03b\":\n        project = p\n        break\n\nif project is None:\n    msg = \"Project not found\"\n    raise ValueError(msg)\n\nresp = client.post_project_v2(\n    data={\n        \"update\": [\n            {\n                \"id\": project.id,\n                \"name\": project.name,\n                \"color\": project.color,\n                \"view_mode\": project.view_mode,\n                \"kind\": project.kind,\n                \"sort_order\": project.sort_order,\n                \"group_id\": \"NONE\",\n            },\n        ],\n    },\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"4tw3d7ub\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, UpdateProjectV2\n\nclient = Client()\nproject = None\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.id == \"682221078f082a6819e4f03b\":\n        project = p\n        break\n\nif project is None:\n    msg = \"Project not found\"\n    raise ValueError(msg)\n\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        update=[\n            UpdateProjectV2(\n                id=project.id,\n                name=project.name,\n                color=project.color,\n                view_mode=project.view_mode,\n                kind=project.kind,\n                sort_order=project.sort_order,\n                group_id=\"NONE\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"682221078f082a6819e4f03b\": \"4tw3d7ub\"\n    }\n}\n</code></pre>"},{"location":"guides/cookbook/project_groups/update_a_project_group/","title":"Update a Project Group","text":"<p>Let's assume we want to update the project group from the create project group recipe with a new name: <code>Updated Test Project Group</code>.</p> <p>It had a project group ID of <code>6821f8618f08de9a850d65ce</code>.</p> <p>This is what the update would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data={\"update\": [{\"id\": \"6821f8618f08de9a850d65ce\", \"name\": \"Updated Test Project Group\"}]}\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6821f8618f08de9a850d65ce\": \"0b43ssbf\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectGroupV2, UpdateProjectGroupV2\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(\n        update=[\n            UpdateProjectGroupV2(\n                id=\"6821f8618f08de9a850d65ce\",\n                name=\"Updated Test Project Group\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6821f8618f08de9a850d65ce\": \"0b43ssbf\"\n    }\n}\n</code></pre>"},{"location":"guides/cookbook/projects/create_a_project/","title":"Create a Project","text":"<p>Let's assume we want to create a new project with the following properties:</p> <ul> <li>Name: Test Project</li> <li>Color:  <code>rgb(108, 213, 123)</code></li> <li>View Type: List</li> <li>List Type: Task List</li> </ul> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V1 - dictV1 - modelV2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nproject = client.create_project_v1(\n    data={\n        \"name\": \"Test Project\",\n        \"color\": \"rgb(108, 213, 123)\",\n        \"view_mode\": \"list\",\n        \"kind\": \"TASK\",\n    },\n)\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681ce1d98f0870ba1dd77ebe\",\n    \"name\": \"Test Project\",\n    \"color\": \"#6cd57b\",\n    \"sort_order\": 0,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v1 import CreateProjectV1\n\nclient = Client()\nproject = client.create_project_v1(\n    data=CreateProjectV1(\n        name=\"Test Project\",\n        color=\"rgb(108, 213, 123)\",\n        view_mode=\"list\",\n        kind=\"TASK\",\n    ),\n)\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681ce1d98f0870ba1dd77ebe\",\n    \"name\": \"Test Project\",\n    \"color\": \"#6cd57b\",\n    \"sort_order\": 0,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_project_v2(\n    data={\n        \"add\": [\n            {\n                \"name\": \"Test Project\",\n                \"color\": \"rgb(108, 213, 123)\",\n                \"view_mode\": \"list\",\n                \"kind\": \"TASK\",\n            },\n        ],\n    },\n)\n\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"681ce1d98f0870ba1dd77ebe\": \"totogen5\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, CreateProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        add=[\n            CreateProjectV2(\n                name=\"Test Project\",\n                color=\"rgb(108, 213, 123)\",\n                view_mode=\"list\",\n                kind=\"TASK\",\n            ),\n        ],\n    ),\n)\n\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"681ce1d98f0870ba1dd77ebe\": \"totogen5\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/projects/delete_a_project/","title":"Delete a Project","text":"<p>Let's assume we want to delete the project from the create project recipe and the update project recipe, which had the project id <code>681ce1d98f0870ba1dd77ebe</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V1V2 - dictV2 - model <pre><code>from pyticktick import Client\n\nclient = Client()\nclient.delete_project_v1(project_id=\"681ce1d98f0870ba1dd77ebe\")\n</code></pre> <p>This will not return anything.</p> <pre><code>from pyticktick import Client\n\nclient = Client()\nresp = client.post_project_v2(data={\"delete\": [\"681ce1d98f0870ba1dd77ebe\"]})\n</code></pre> <p>This will not return anything of value, just an empty <code>BatchRespV2</code> object.</p> <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(delete=[\"681ce1d98f0870ba1dd77ebe\"]),\n)\n</code></pre> <p>This will not return anything of value, just an empty <code>BatchRespV2</code> object.</p>"},{"location":"guides/cookbook/projects/get_a_project_by_id/","title":"Get a Project by ID","text":"<p>Let's assume we want to get a project with the project ID <code>681d63f18f0892430630d16b</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nproject = client.get_project_v1(project_id=\"681d63f18f0892430630d16b\")\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"name\": \"Project 1\",\n    \"color\": \"#FF6161\",\n    \"sort_order\": -3298534883328,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.id == \"681d63f18f0892430630d16b\":\n        print(json.dumps(p.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"color\": \"#ff6161\",\n    \"etag\": \"s83jq7d8\",\n    \"group_id\": null,\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:10:16.671000Z\",\n    \"name\": \"Project 1\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": -3298534883328,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n</code></pre>"},{"location":"guides/cookbook/projects/get_a_project_by_name/","title":"Get a Project by Name","text":"<p>Let's assume we want to get a project with the name <code>Project 1</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nprojects = client.get_projects_v1()\nfor p in projects:\n    if p.name == \"Project 1\":\n        print(json.dumps(p.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"name\": \"Project 1\",\n    \"color\": \"#FF6161\",\n    \"sort_order\": -3298534883328,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    if p.name == \"Project 1\":\n        print(json.dumps(p.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"color\": \"#ff6161\",\n    \"etag\": \"s83jq7d8\",\n    \"group_id\": null,\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:10:16.671000Z\",\n    \"name\": \"Project 1\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": -3298534883328,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n</code></pre>"},{"location":"guides/cookbook/projects/get_all_projects/","title":"Get All Projects","text":"<p>Let's assume we want to get all projects from the TickTick account. This is what the current projects look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nprojects = client.get_projects_v1()\nfor p in projects:\n    print(json.dumps(p.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"name\": \"Project 1\",\n    \"color\": \"#FF6161\",\n    \"sort_order\": -3298534883328,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n{\n    \"id\": \"681d63fe8f0892430630d22b\",\n    \"name\": \"Project 2\",\n    \"color\": \"#FFAC38\",\n    \"sort_order\": -2199023255552,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"NOTE\"\n}\n{\n    \"id\": \"681d64028f0892430630d286\",\n    \"name\": \"Project 3\",\n    \"color\": \"#FFD324\",\n    \"sort_order\": 0,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"kanban\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n{\n    \"id\": \"681d640f8f0892430630d337\",\n    \"name\": \"Project 4\",\n    \"color\": \"#35D870\",\n    \"sort_order\": 1191137596757,\n    \"closed\": null,\n    \"group_id\": \"681d642627de226ddc24b291\",\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n{\n    \"id\": \"681d641f8f0892430630d4c4\",\n    \"name\": \"Project 5\",\n    \"color\": \"#4CA1FF\",\n    \"sort_order\": 1282763565738,\n    \"closed\": null,\n    \"group_id\": \"681d642627de226ddc24b291\",\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor p in resp.project_profiles:\n    print(json.dumps(p.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"color\": \"#ff6161\",\n    \"etag\": \"s83jq7d8\",\n    \"group_id\": null,\n    \"id\": \"681d63f18f0892430630d16b\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:10:16.671000Z\",\n    \"name\": \"Project 1\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": -3298534883328,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n{\n    \"color\": \"#ffac38\",\n    \"etag\": \"y9swo1kx\",\n    \"group_id\": null,\n    \"id\": \"681d63fe8f0892430630d22b\",\n    \"in_all\": true,\n    \"kind\": \"NOTE\",\n    \"modified_time\": \"2025-05-09T02:11:52.881000Z\",\n    \"name\": \"Project 2\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": -2199023255552,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n{\n    \"color\": \"#ffd324\",\n    \"etag\": \"k0b2mdfj\",\n    \"group_id\": null,\n    \"id\": \"681d64028f0892430630d286\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:11:47.739000Z\",\n    \"name\": \"Project 3\",\n    \"sort_option\": null,\n    \"view_mode\": \"kanban\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": 0,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n{\n    \"color\": \"#35d870\",\n    \"etag\": \"b8c5nspw\",\n    \"group_id\": \"681d642627de226ddc24b291\",\n    \"id\": \"681d640f8f0892430630d337\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:11:42.352000Z\",\n    \"name\": \"Project 4\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": 1191137596757,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n{\n    \"color\": \"#4ca1ff\",\n    \"etag\": \"svu9l4di\",\n    \"group_id\": \"681d642627de226ddc24b291\",\n    \"id\": \"681d641f8f0892430630d4c4\",\n    \"in_all\": true,\n    \"kind\": \"TASK\",\n    \"modified_time\": \"2025-05-09T02:10:55.986000Z\",\n    \"name\": \"Project 5\",\n    \"sort_option\": null,\n    \"view_mode\": \"list\",\n    \"barcode_need_audit\": false,\n    \"is_owner\": true,\n    \"sort_order\": 1282763565738,\n    \"sort_type\": null,\n    \"user_count\": 1,\n    \"closed\": null,\n    \"muted\": false,\n    \"transferred\": null,\n    \"notification_options\": null,\n    \"team_id\": null,\n    \"permission\": null,\n    \"timeline\": null,\n    \"need_audit\": true,\n    \"open_to_team\": false,\n    \"team_member_permission\": null,\n    \"source\": 1,\n    \"show_type\": null,\n    \"reminder_type\": null\n}\n</code></pre>"},{"location":"guides/cookbook/projects/update_a_project/","title":"Update a Project","text":"<p>Let's assume we want to update the project from the create project recipe with the following properties:</p> <ul> <li>Name: Updated Test Project</li> <li>Color:  <code>rgb(220, 66, 51)</code></li> <li>View Type: Kanban</li> <li>List Type: Note List</li> </ul> <p>It's project ID is <code>681ce1d98f0870ba1dd77ebe</code>.</p> <p>This is what the update would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V1 - dictV1 - modelV2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nproject = client.update_project_v1(\n    project_id=\"681ce1d98f0870ba1dd77ebe\",\n    data={\n        \"name\": \"Updated Test Project\",\n        \"color\": \"rgb(220, 66, 51)\",\n        \"view_mode\": \"kanban\",\n        \"kind\": \"NOTE\",\n    },\n)\n\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681ce1d98f0870ba1dd77ebe\",\n    \"name\": \"Updated Test Project\",\n    \"color\": \"#dc4233\",\n    \"sort_order\": 0,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"kanban\",\n    \"permission\": null,\n    \"kind\": \"NOTE\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v1 import UpdateProjectV1\n\nclient = Client()\nproject = client.update_project_v1(\n    project_id=\"681ce1d98f0870ba1dd77ebe\",\n    data=UpdateProjectV1(\n        name=\"Updated Test Project\",\n        color=\"rgb(220, 66, 51)\",\n        view_mode=\"kanban\",\n        kind=\"NOTE\",\n    ),\n)\n\nprint(json.dumps(project.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"681ce1d98f0870ba1dd77ebe\",\n    \"name\": \"Updated Test Project\",\n    \"color\": \"#dc4233\",\n    \"sort_order\": 0,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"kanban\",\n    \"permission\": null,\n    \"kind\": \"NOTE\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_project_v2(\n    data={\n        \"update\": [\n            {\n                \"id\": \"681ce1d98f0870ba1dd77ebe\",\n                \"name\": \"Updated Test Project\",\n                \"color\": \"rgb(220, 66, 51)\",\n                \"view_mode\": \"kanban\",\n                \"kind\": \"NOTE\",\n            },\n        ],\n    },\n)\n\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"681e23d68f083fe2c3a7c560\": \"pm7kzed4\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, UpdateProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        update=[\n            UpdateProjectV2(\n                id=\"681ce1d98f0870ba1dd77ebe\",\n                name=\"Updated Test Project\",\n                color=\"rgb(220, 66, 51)\",\n                view_mode=\"kanban\",\n                kind=\"NOTE\",\n            ),\n        ],\n    ),\n)\n\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"681e23d68f083fe2c3a7c560\": \"pm7kzed4\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/settings/authenticate_client_via_dotenv/","title":"Authenticate Client via Dotenv","text":"<p>For our V1 authentication requirements, assume our client id is <code>7p3Hw9YMqnfxaIvKc4</code> and our client secret is <code>Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!</code>. Let's also assume we have a token of <code>a5b2c3a7-9385-47e4-80b8-a445f842e403</code> and an expires at <code>1781373801</code>.</p> How do I get my client id and secret? <p>Please refer to the Register a V1 App guide to learn how to obtain your client id and secret.</p> How do I get my token? <p>Please refer to the Generate a V1 Token guide to learn how to obtain your token.</p> <p>For our V2 authentication requirements, assume our username is <code>computer_wiz_02@python.org</code> and our password is <code>password123</code>.</p> V1 OnlyV2 OnlyBoth V1 and V2 <p>First, make a Dotenv (<code>.env</code>) file in your project directory with the following content:</p> .env<pre><code>PYTICKTICK_V1_CLIENT_ID=7p3Hw9YMqnfxaIvKc4\nPYTICKTICK_V1_CLIENT_SECRET=Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\nPYTICKTICK_V1_TOKEN_VALUE=a5b2c3a7-9385-47e4-80b8-a445f842e403\nPYTICKTICK_V1_TOKEN_EXPIRATION=1781373801\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client(_env_file=\".env\")\n</code></pre> <p>No V2 Access</p> <p>This client will not be able to use V2 functions without authenticating with V2 credentials.</p> <p>First, make a Dotenv (<code>.env</code>) file in your project directory with the following content:</p> .env<pre><code>PYTICKTICK_V2_USERNAME=computer_wiz_02@python.org\nPYTICKTICK_V2_PASSWORD=password123\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client(_env_file=\".env\")\n</code></pre> <p>No V1 Access</p> <p>This client will not be able to use V1 functions without authenticating with V1 credentials.</p> <p>First, make a Dotenv (<code>.env</code>) file in your project directory with the following content:</p> .env<pre><code>PYTICKTICK_V1_CLIENT_ID=7p3Hw9YMqnfxaIvKc4\nPYTICKTICK_V1_CLIENT_SECRET=Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\nPYTICKTICK_V1_TOKEN_VALUE=a5b2c3a7-9385-47e4-80b8-a445f842e403\nPYTICKTICK_V1_TOKEN_EXPIRATION=1781373801\nPYTICKTICK_V2_USERNAME=computer_wiz_02@python.org\nPYTICKTICK_V2_PASSWORD=password123\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client(_env_file=\".env\")\n</code></pre> <p>To see more on env file support, please refer to Pydantic Settings' Dotenv (.env) support.</p>"},{"location":"guides/cookbook/settings/authenticate_client_via_env_vars/","title":"Authenticate Client via Env Vars","text":"<p>For our V1 authentication requirements, assume our client id is <code>7p3Hw9YMqnfxaIvKc4</code> and our client secret is <code>Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!</code>. Let's also assume we have a token of <code>a5b2c3a7-9385-47e4-80b8-a445f842e403</code> and an expires at <code>1781373801</code>.</p> How do I get my client id and secret? <p>Please refer to the Register a V1 App guide to learn how to obtain your client id and secret.</p> How do I get my token? <p>Please refer to the Generate a V1 Token guide to learn how to obtain your token.</p> <p>For our V2 authentication requirements, assume our username is <code>computer_wiz_02@python.org</code> and our password is <code>password123</code>.</p> V1 OnlyV2 OnlyBoth V1 and V2 <p>First, export the following environment variables:</p> <pre><code>export PYTICKTICK_V1_CLIENT_ID=7p3Hw9YMqnfxaIvKc4\nexport PYTICKTICK_V1_CLIENT_SECRET=Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\nexport PYTICKTICK_V1_TOKEN_VALUE=a5b2c3a7-9385-47e4-80b8-a445f842e403\nexport PYTICKTICK_V1_TOKEN_EXPIRATION=1781373801\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client()\n</code></pre> <p>No V2 Access</p> <p>This client will not be able to use V2 functions without authenticating with V2 credentials.</p> <p>First, export the following environment variables:</p> <pre><code>export PYTICKTICK_V2_USERNAME=computer_wiz_02@python.org\nexport PYTICKTICK_V2_PASSWORD=password123\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client()\n</code></pre> <p>No V1 Access</p> <p>This client will not be able to use V1 functions without authenticating with V1 credentials.</p> <p>First, export the following environment variables:</p> <pre><code>export PYTICKTICK_V1_CLIENT_ID=7p3Hw9YMqnfxaIvKc4\nexport PYTICKTICK_V1_CLIENT_SECRET=Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\nexport PYTICKTICK_V1_TOKEN_VALUE=a5b2c3a7-9385-47e4-80b8-a445f842e403\nexport PYTICKTICK_V1_TOKEN_EXPIRATION=1781373801\nexport PYTICKTICK_V2_USERNAME=computer_wiz_02@python.org\nexport PYTICKTICK_V2_PASSWORD=password123\n</code></pre> <p>Then, you can create the client like this:</p> <pre><code>from pyticktick import Client\n\nclient = Client()\n</code></pre>"},{"location":"guides/cookbook/settings/authenticate_client_via_python/","title":"Authenticate Client via Python","text":"<p>For our V1 authentication requirements, assume our client id is <code>7p3Hw9YMqnfxaIvKc4</code> and our client secret is <code>Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!</code>. Let's also assume we have a token of <code>a5b2c3a7-9385-47e4-80b8-a445f842e403</code> and an expires at <code>1781373801</code>.</p> How do I get my client id and secret? <p>Please refer to the Register a V1 App guide to learn how to obtain your client id and secret.</p> How do I get my token? <p>Please refer to the Generate a V1 Token guide to learn how to obtain your token.</p> <p>For our V2 authentication requirements, assume our username is <code>computer_wiz_02@python.org</code> and our password is <code>password123</code>.</p> V1 OnlyV2 OnlyBoth V1 and V2 <pre><code>from pyticktick import Client\n\nclient = Client(\n    v1_client_id=\"7p3Hw9YMqnfxaIvKc4\",\n    v1_client_secret=\"Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\",\n    v1_token={\n        \"value\": \"a5b2c3a7-9385-47e4-80b8-a445f842e403\",\n        \"expiration\": 1781373801,\n    },\n)\n</code></pre> <p>No V2 Access</p> <p>This client will not be able to use V2 functions without authenticating with V2 credentials.</p> <pre><code>from pyticktick import Client\n\nclient = Client(\n    v2_username=\"computer_wiz_02@python.org\",\n    v2_password=\"password123\",\n)\n</code></pre> <p>No V1 Access</p> <p>This client will not be able to use V1 functions without authenticating with V1 credentials.</p> <pre><code>from pyticktick import Client\n\nclient = Client(\n    v1_client_id=\"7p3Hw9YMqnfxaIvKc4\",\n    v1_client_secret=\"Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\",\n    v1_token={\n        \"value\": \"a5b2c3a7-9385-47e4-80b8-a445f842e403\",\n        \"expiration\": 1781373801,\n    },\n    v2_username=\"computer_wiz_02@python.org\",\n    v2_password=\"password123\",\n)\n</code></pre>"},{"location":"guides/cookbook/settings/authenticate_client_with_2fa/","title":"Authenticate Client with 2-Factor Authentication (2FA)","text":"<p>For our V1 authentication requirements, assume our client id is <code>7p3Hw9YMqnfxaIvKc4</code> and our client secret is <code>Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!</code>. Let's also assume we have a token of <code>a5b2c3a7-9385-47e4-80b8-a445f842e403</code> and an expires at <code>1781373801</code>.</p> <p>2FA Authentication</p> <p>2FA is only used for V2 authentication. If you are using V1, you do not need to worry about 2FA.</p> <p>For our V2 authentication requirements, assume our username is <code>computer_wiz_02@python.org</code> and our password is <code>password123</code>. Let's assume that 2FA is enabled for this account, and the 2FA secret is <code>5SY29FY0VXU5XBEJCJH3Z4KYNQ7G915S</code>.</p> V2 with 2FABoth V1 and V2 with 2FA <pre><code>from pyticktick import Client\n\nclient = Client(\n    v2_username=\"computer_wiz_02@python.org\",\n    v2_password=\"password123\",\n    v2_totp_secret=\"5SY29FY0VXU5XBEJCJH3Z4KYNQ7G915S\",\n)\n</code></pre> <pre><code>from pyticktick import Client\n\nclient = Client(\n    v1_client_id=\"7p3Hw9YMqnfxaIvKc4\",\n    v1_client_secret=\"Qxm^^3h(7ZK994U8M%/g!YFo2VEPs*k!\",\n    v1_token={\n        \"value\": \"a5b2c3a7-9385-47e4-80b8-a445f842e403\",\n        \"expiration\": 1781373801,\n    },\n    v2_username=\"computer_wiz_02@python.org\",\n    v2_password=\"password123\",\n    v2_totp_secret=\"5SY29FY0VXU5XBEJCJH3Z4KYNQ7G915S\",\n)\n</code></pre>"},{"location":"guides/cookbook/tags/add_a_parent_tag_to_a_new_tag/","title":"Add a Parent Tag to a New Tag","text":"<p>Let's assume we want to create a new tag, similar to the one in the create tag recipe, but we want to add a parent tag (<code>parent_tag</code>) to it during creation. We want the new tag to have the name <code>test_tag_new</code> and the color  <code>rgb(100, 216, 180)</code>.</p> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_tag_v2(\n    data={\n        \"add\": [\n            {\n                \"label\": \"test_tag_new\",\n                \"color\": \"rgb(100, 216, 180)\",\n                \"parent\": \"parent_tag\",\n            },\n        ],\n    },\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag_new\": \"tp4ij6kx\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, CreateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        add=[\n            CreateTagV2(\n                label=\"test_tag_new\",\n                color=\"rgb(100, 216, 180)\",\n                parent=\"parent_tag\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag_new\": \"tp4ij6kx\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tags/add_a_parent_tag_to_an_existing_tag/","title":"Add a Parent Tag to an Existing Tag","text":"<p>Let's assume we want to add a parent tag to the tag <code>test_tag</code> from the create tag recipe. We now want it to have the parent tag <code>parent_tag</code>.</p> <p>This is what the action would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\ntag = None\nfor t in resp.tags:\n    if t.name == \"test_tag\":\n        tag = t\n        break\n\nif tag is None:\n    msg = \"Tag not found\"\n    raise ValueError(msg)\n\nresp = client.post_tag_v2(\n    data={\"update\": [{\"label\": tag.label, \"parent\": \"parent_tag\", \"color\": tag.color}]},\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"gkz3g2rx\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, UpdateTagV2\n\nclient = Client()\nresp = client.get_batch_v2()\ntag = None\nfor t in resp.tags:\n    if t.name == \"test_tag\":\n        tag = t\n        break\n\nif tag is None:\n    msg = \"Tag not found\"\n    raise ValueError(msg)\n\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        update=[UpdateTagV2(label=tag.label, parent=\"parent_tag\", color=tag.color)],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"gkz3g2rx\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tags/create_a_tag/","title":"Create a Tag","text":"<p>Let's assume we want to create a new tag with the following properties:</p> <ul> <li>Name: test_tag</li> <li>Color:  <code>rgb(100, 216, 180)</code></li> </ul> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_tag_v2(\n    data={\"add\": [{\"label\": \"test_tag\", \"color\": \"rgb(100, 216, 180)\"}]},\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"l1y6w0zu\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, CreateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        add=[CreateTagV2(label=\"test_tag\", color=\"rgb(100, 216, 180)\")],\n    )\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"l1y6w0zu\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tags/delete_a_tag/","title":"Delete a Tag","text":"<p>Let's assume we want to delete the tag <code>test_tag</code> from the create tag recipe.</p> <p>This is what the deletion would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>from pyticktick import Client\n\nclient = Client()\nresp = client.delete_tag_v2(data={\"name\": \"test_tag\"})\n</code></pre> <p>This will not return anything.</p> <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import DeleteTagV2\n\nclient = Client()\nclient.delete_tag_v2(data=DeleteTagV2(name=\"test_tag\"))\n</code></pre> <p>This will not return anything.</p>"},{"location":"guides/cookbook/tags/get_a_tag_by_name/","title":"Get a Tag by Name","text":"<p>Let's assume we want to get a tag with the name <code>test_tag_2</code>, like the one found in the get all tags recipe:</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor t in resp.tags:\n    if t.name == \"test_tag_2\":\n        print(json.dumps(t.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"color\": \"#35d870\",\n    \"etag\": \"z0hmmvwz\",\n    \"label\": \"test_tag_2\",\n    \"name\": \"test_tag_2\",\n    \"parent\": null,\n    \"raw_name\": \"test_tag_2\",\n    \"sort_option\": {\n        \"group_by\": \"tag\",\n        \"order_by\": \"dueDate\"\n    },\n    \"sort_type\": \"tag\",\n    \"sort_order\": 0,\n    \"timeline\": {\n        \"range\": null,\n        \"sort_type\": null,\n        \"sort_option\": {\n            \"group_by\": \"tag\",\n            \"order_by\": \"sortOrder\"\n        }\n    },\n    \"type\": 1\n}\n</code></pre>"},{"location":"guides/cookbook/tags/get_all_tags/","title":"Get All Tags","text":"<p>Let's assume we want to get all tags from the TickTick account. This is what the current tags look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor t in resp.tags:\n    print(json.dumps(t.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"color\": \"#ffac38\",\n    \"etag\": \"wtwmruse\",\n    \"label\": \"child_tag_1\",\n    \"name\": \"child_tag_1\",\n    \"parent\": \"test_tag_2\",\n    \"raw_name\": \"child_tag_1\",\n    \"sort_option\": null,\n    \"sort_type\": \"project\",\n    \"sort_order\": 549755813888,\n    \"timeline\": null,\n    \"type\": 1\n}\n{\n    \"color\": \"#e6ea49\",\n    \"etag\": \"cb4av5ds\",\n    \"label\": \"child_tag_2\",\n    \"name\": \"child_tag_2\",\n    \"parent\": \"test_tag_2\",\n    \"raw_name\": \"child_tag_2\",\n    \"sort_option\": null,\n    \"sort_type\": \"project\",\n    \"sort_order\": 824633720832,\n    \"timeline\": null,\n    \"type\": 1\n}\n{\n    \"color\": \"#ff6161\",\n    \"etag\": \"1ff4zj17\",\n    \"label\": \"test_tag_1\",\n    \"name\": \"test_tag_1\",\n    \"parent\": null,\n    \"raw_name\": \"test_tag_1\",\n    \"sort_option\": null,\n    \"sort_type\": \"project\",\n    \"sort_order\": -1099511627776,\n    \"timeline\": null,\n    \"type\": 1\n}\n{\n    \"color\": \"#35d870\",\n    \"etag\": \"z0hmmvwz\",\n    \"label\": \"test_tag_2\",\n    \"name\": \"test_tag_2\",\n    \"parent\": null,\n    \"raw_name\": \"test_tag_2\",\n    \"sort_option\": {\n        \"group_by\": \"tag\",\n        \"order_by\": \"dueDate\"\n    },\n    \"sort_type\": \"tag\",\n    \"sort_order\": 0,\n    \"timeline\": {\n        \"range\": null,\n        \"sort_type\": null,\n        \"sort_option\": {\n            \"group_by\": \"tag\",\n            \"order_by\": \"sortOrder\"\n        }\n    },\n    \"type\": 1\n}\n{\n    \"color\": \"#4ca1ff\",\n    \"etag\": \"nsij31jo\",\n    \"label\": \"test_tag_3\",\n    \"name\": \"test_tag_3\",\n    \"parent\": null,\n    \"raw_name\": \"test_tag_3\",\n    \"sort_option\": null,\n    \"sort_type\": \"project\",\n    \"sort_order\": 1099511627776,\n    \"timeline\": null,\n    \"type\": 1\n}\n</code></pre>"},{"location":"guides/cookbook/tags/remove_a_parent_tag/","title":"Remove a Parent Tag","text":"<p>Let's assume we want to remove the parent tag <code>parent_tag</code> from the tag <code>test_tag</code>, undoing the work we did in the add a parent tag to an existing tag recipe.</p> <p>This is what the removal would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\ntag = None\nfor t in resp.tags:\n    if t.name == \"test_tag\":\n        tag = t\n        break\n\nif tag is None:\n    msg = \"Tag not found\"\n    raise ValueError(msg)\n\nresp = client.post_tag_v2(\n    data={\"update\": [{\"label\": tag.label, \"parent\": \"\", \"color\": tag.color}]},\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"l1y6w0zu\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, UpdateTagV2\n\nclient = Client()\nresp = client.get_batch_v2()\ntag = None\nfor t in resp.tags:\n    if t.name == \"test_tag\":\n        tag = t\n        break\n\nif tag is None:\n    msg = \"Tag not found\"\n    raise ValueError(msg)\n\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        update=[UpdateTagV2(label=tag.label, parent=\"\", color=tag.color)],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"l2i9kz8b\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tags/rename_a_tag/","title":"Rename a Tag","text":"<p>Let's assume we want to rename the tag <code>test_tag</code> from the create tag recipe. We now want it to have the name <code>updated_test_tag</code>.</p> <p>This is what the renaming would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.put_rename_tag_v2(data={\"name\": \"test_tag\", \"new_name\": \"updated_test_tag\"})\n</code></pre> <p>will not return anything if successful.</p> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import RenameTagV2\n\nclient = Client()\nclient.put_rename_tag_v2(\n    data=RenameTagV2(\n        name=\"test_tag\",\n        new_name=\"updated_test_tag\",\n    ),\n)\n</code></pre> <p>This will not return anything if successful.</p> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tags/update_a_tag/","title":"Update a Tag","text":"<p>Let's assume we want to update the tag <code>test_tag</code> from the create tag recipe. We now want it to have a new color:  <code>rgb(237, 108, 103)</code>.</p> What about renaming tags? <p>The <code>post_tag_v2</code> function does not support renaming tags, unlike most other <code>post_XXX_v2</code> functions. To see how this is done, check out the rename tag recipe.</p> <p>This is what the update would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_tag_v2(\n    data={\"update\": [{\"label\": \"test_tag\", \"color\": \"rgb(237, 108, 103)\"}]},\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"txtbko2d\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, UpdateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        update=[UpdateTagV2(label=\"test_tag\", color=\"rgb(237, 108, 103)\")],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"txtbko2d\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tasks/create_a_basic_task/","title":"Create a Basic Task","text":"<p>Let's assume we want to create a new task with the following properties:</p> <ul> <li>Name: <code>Test Task</code></li> <li>Description: <code>This is the content of the task</code></li> <li>Due Date: <code>2024-10-01</code> at <code>10:00 AM</code></li> <li>Alarm: At the time of the due date</li> <li>Time zone: <code>Chicago</code></li> </ul> <p>This will be created under the project with ID <code>683217b48f08892e6997ef03</code>, called <code>Test Project</code>.</p> <p>This is what the creation would look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V1 - dictV1 - modelV2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\ntask = client.create_task_v1(\n    data={\n        \"title\": \"Test Task\",\n        \"content\": \"This is the content of the task\",\n        \"due_date\": \"2024-10-01T10:00:00+0000\",\n        \"reminders\": [\"TRIGGER:PT0S\"],\n        \"time_zone\": \"America/Chicago\",\n        \"project_id\": \"683217b48f08892e6997ef03\",\n    },\n)\nprint(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"68336a02ec201a48c7aadedf\",\n    \"project_id\": \"683217b48f08892e6997ef03\",\n    \"title\": \"Test Task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"This is the content of the task\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-01T10:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:PT0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": -8796093022208,\n    \"start_date\": \"2024-10-01T10:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v1 import CreateTaskV1\n\nclient = Client()\ntask = client.create_task_v1(\n    data=CreateTaskV1(\n        title=\"Test Task\",\n        content=\"This is the content of the task\",\n        due_date=\"2024-10-01T10:00:00+0000\",\n        reminders=[\"TRIGGER:PT0S\"],\n        time_zone=\"America/Chicago\",\n        project_id=\"683217b48f08892e6997ef03\",\n    ),\n)\nprint(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"68336a02ec201a48c7aadedf\",\n    \"project_id\": \"683217b48f08892e6997ef03\",\n    \"title\": \"Test Task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"This is the content of the task\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-01T10:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:PT0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": -8796093022208,\n    \"start_date\": \"2024-10-01T10:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_task_v2(\n    data={\n        \"add\": [\n            {\n                \"title\": \"Test Task\",\n                \"content\": \"This is the content of the task\",\n                \"due_date\": \"2024-10-01T10:00:00\",\n                \"reminders\": [{\"trigger\": \"TRIGGER:PT0S\"}],\n                \"time_zone\": \"America/Chicago\",\n                \"project_id\": \"683217b48f08892e6997ef03\",\n                \"kind\": \"TEXT\",\n            },\n        ],\n    },\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"68336a02ec201a48c7aadedf\": \"m2mvkd31\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import CreateTaskReminderV2, CreateTaskV2, PostBatchTaskV2\n\nclient = Client()\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        add=[\n            CreateTaskV2(\n                title=\"Test Task\",\n                content=\"This is the content of the task\",\n                due_date=\"2024-10-01T10:00:00\",\n                reminders=[CreateTaskReminderV2(trigger=\"TRIGGER:PT0S\")],\n                time_zone=\"America/Chicago\",\n                project_id=\"683217b48f08892e6997ef03\",\n                kind=\"TEXT\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"68336a02ec201a48c7aadedf\": \"m2mvkd31\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/cookbook/tasks/delete_a_task/","title":"Delete a Task","text":"<p>Let's assume we want to delete the task from the create a basic task recipe and the update a basic task recipe. This had the ID <code>68336a02ec201a48c7aadedf</code> and the project ID <code>683217b48f08892e6997ef03</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V1V2 - dictV2 - model <pre><code>from pyticktick import Client\n\nclient = Client()\nclient.delete_task_v1(\n    project_id=\"683217b48f08892e6997ef03\",\n    task_id=\"68336a02ec201a48c7aadedf\",\n)\n</code></pre> <p>This will not return anything.</p> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.post_task_v2(\n    data={\n        \"delete\": [\n            {\n                \"project_id\": \"683217b48f08892e6997ef03\",\n                \"task_id\": \"68336a02ec201a48c7aadedf\",\n            },\n        ],\n    },\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {}\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTaskV2, DeleteTaskV2\n\nclient = Client()\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        delete=[\n            DeleteTaskV2(\n                project_id=\"683217b48f08892e6997ef03\",\n                task_id=\"68336a02ec201a48c7aadedf\",\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {}\n}\n</code></pre>"},{"location":"guides/cookbook/tasks/get_a_task_by_id/","title":"Get a Task by ID","text":"<p>Let's assume we want to get a task with the ID <code>6834aabbec201a7f471a2e80</code>, one of the tasks in the Get All Tasks recipe.</p> <p>This is what the <code>pyticktick</code> code looks like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\ntask = client.get_task_v1(\n    project_id=\"6834a28d8f08df73a73c46a8\",\n    task_id=\"6834aabbec201a7f471a2e80\",\n)\nprint(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>Note</p> <p>This approach expects that you already know the project ID as well: <code>6834a28d8f08df73a73c46a8</code>.</p> <p>will return:</p> <pre><code>{\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 5\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"sort_order\": 3298534883328,\n    \"start_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor task in resp.sync_task_bean.update:\n    if task.id == \"6834aabbec201a7f471a2e80\":\n        print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"created_time\": \"2025-05-26T17:54:03Z\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00Z\",\n    \"etag\": \"umaki4zx\",\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:54:08Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"repeat_from\": 2,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2025-01-02T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 5\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 3298534883328\n}\n</code></pre>"},{"location":"guides/cookbook/tasks/get_a_task_by_name/","title":"Get a Task by Name","text":"<p>Let's assume we want to get the task with the name <code>\"Task 5\"</code>, one of the tasks in the Get All Tasks recipe.</p> <p>This is what the <code>pyticktick</code> code looks like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nprojects = client.get_projects_v1()\nfor project in projects:\n    data = client.get_project_with_data_v1(project_id=project.id)\n    for task in data.tasks:\n        if task.title == \"Task 5\":\n            print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 5\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"sort_order\": 3298534883328,\n    \"start_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor task in resp.sync_task_bean.update:\n    if task.title == \"Task 5\":\n        print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"created_time\": \"2025-05-26T17:54:03Z\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00Z\",\n    \"etag\": \"umaki4zx\",\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:54:08Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"repeat_from\": 2,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2025-01-02T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 5\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 3298534883328\n}\n</code></pre>"},{"location":"guides/cookbook/tasks/get_all_tasks/","title":"Get All Tasks","text":"<p>Let's assume we want to get all tasks from the TickTick account. This is what the current tasks look like in the TickTick app:</p> <p>This is what the <code>pyticktick</code> equivalent would look like:</p> V1V2 <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nprojects = client.get_projects_v1()\nfor project in projects:\n    data = client.get_project_with_data_v1(project_id=project.id)\n    for task in data.tasks:\n        print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 5\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"sort_order\": 3298534883328,\n    \"start_date\": \"2025-01-02T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834aaa4ec201a7f471a2e6f\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 4\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": null,\n    \"due_date\": \"2024-12-24T06:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1\",\n    \"sort_order\": 2199023255552,\n    \"start_date\": \"2024-12-24T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834aa69ec201a7f471a2de4\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 3\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"Description for task 3\",\n    \"desc\": null,\n    \"due_date\": \"2024-11-01T05:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:-P0DT15H0M0S\",\n        \"TRIGGER:-P1DT15H0M0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": 1099511627776,\n    \"start_date\": \"2024-11-01T05:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834aa23ec201a7f471a2db7\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 1\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"Description for task 1\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-01T16:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:PT0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2024-10-01T16:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834aa45ec201a7f471a2dcc\",\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"title\": \"Task 2 \",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"Description for task 2\",\n    \"desc\": null,\n    \"due_date\": null,\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": 0,\n    \"start_date\": null,\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834aadcec201a7f471a2e9a\",\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"title\": \"Task 6 \",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": \"This is the description for a checklist task\",\n    \"due_date\": \"2025-01-07T06:00:00.000+0000\",\n    \"items\": [\n        {\n            \"id\": \"6834aae9ec201a7f471a2ea8\",\n            \"title\": \"Checklist item 1\",\n            \"status\": false,\n            \"completed_time\": null,\n            \"is_all_day\": false,\n            \"sort_order\": 0,\n            \"start_date\": null,\n            \"time_zone\": \"America/Chicago\"\n        },\n        {\n            \"id\": \"6834aaefec201a7f471a2ead\",\n            \"title\": \"Checklist item 2\",\n            \"status\": false,\n            \"completed_time\": null,\n            \"is_all_day\": false,\n            \"sort_order\": 1099511627776,\n            \"start_date\": null,\n            \"time_zone\": \"America/Chicago\"\n        },\n        {\n            \"id\": \"6834aaf8ec201a7f471a2eba\",\n            \"title\": \"Checklist item 3\",\n            \"status\": false,\n            \"completed_time\": null,\n            \"is_all_day\": false,\n            \"sort_order\": 2199023255552,\n            \"start_date\": null,\n            \"time_zone\": \"America/Chicago\"\n        },\n        {\n            \"id\": \"6834aafbec201a7f471a2ebe\",\n            \"title\": \"Checklist item 4\",\n            \"status\": false,\n            \"completed_time\": null,\n            \"is_all_day\": false,\n            \"sort_order\": 3298534883328,\n            \"start_date\": null,\n            \"time_zone\": \"America/Chicago\"\n        },\n        {\n            \"id\": \"6834aafeec201a7f471a2ec2\",\n            \"title\": \"Checklist item 5\",\n            \"status\": false,\n            \"completed_time\": null,\n            \"is_all_day\": false,\n            \"sort_order\": 4398046511104,\n            \"start_date\": null,\n            \"time_zone\": \"America/Chicago\"\n        }\n    ],\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:-P6DT15H0M0S\"\n    ],\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;WKST=SU\",\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2025-01-07T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834b5bbec201a7f471a2efa\",\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"title\": \"Task 8\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"This is a note task\",\n    \"desc\": \"\",\n    \"due_date\": \"2024-12-12T06:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": 1099511627776,\n    \"start_date\": \"2024-12-12T06:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834ab3dec201a7f471a2ed5\",\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"title\": \"Task 7\",\n    \"is_all_day\": true,\n    \"completed_time\": null,\n    \"content\": \"This is task 7\",\n    \"desc\": null,\n    \"due_date\": \"2024-06-12T05:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": \"RRULE:FREQ=MONTHLY;INTERVAL=2;TT_SKIP=WEEKEND\",\n    \"sort_order\": 0,\n    \"start_date\": \"2024-06-12T05:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n{\n    \"id\": \"6834b5e3ec201a7f471a2f12\",\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"title\": \"Task 9\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"This is a high priority task\",\n    \"desc\": null,\n    \"due_date\": null,\n    \"items\": null,\n    \"priority\": 5,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": 2199023255552,\n    \"start_date\": null,\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\nresp = client.get_batch_v2()\nfor task in resp.sync_task_bean.update:\n    print(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"created_time\": \"2025-05-26T17:54:36Z\",\n    \"desc\": \"This is the description for a checklist task\",\n    \"due_date\": \"2025-01-07T06:00:00Z\",\n    \"etag\": \"i08y7lxi\",\n    \"id\": \"6834aadcec201a7f471a2e9a\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [\n        {\n            \"completed_time\": null,\n            \"id\": \"6834aae9ec201a7f471a2ea8\",\n            \"is_all_day\": false,\n            \"sort_order\": 0,\n            \"start_date\": null,\n            \"status\": 0,\n            \"time_zone\": \"America/Chicago\",\n            \"title\": \"Checklist item 1\",\n            \"snooze_reminder_time\": null\n        },\n        {\n            \"completed_time\": null,\n            \"id\": \"6834aaefec201a7f471a2ead\",\n            \"is_all_day\": false,\n            \"sort_order\": 1099511627776,\n            \"start_date\": null,\n            \"status\": 0,\n            \"time_zone\": \"America/Chicago\",\n            \"title\": \"Checklist item 2\",\n            \"snooze_reminder_time\": null\n        },\n        {\n            \"completed_time\": null,\n            \"id\": \"6834aaf8ec201a7f471a2eba\",\n            \"is_all_day\": false,\n            \"sort_order\": 2199023255552,\n            \"start_date\": null,\n            \"status\": 0,\n            \"time_zone\": \"America/Chicago\",\n            \"title\": \"Checklist item 3\",\n            \"snooze_reminder_time\": null\n        },\n        {\n            \"completed_time\": null,\n            \"id\": \"6834aafbec201a7f471a2ebe\",\n            \"is_all_day\": false,\n            \"sort_order\": 3298534883328,\n            \"start_date\": null,\n            \"status\": 0,\n            \"time_zone\": \"America/Chicago\",\n            \"title\": \"Checklist item 4\",\n            \"snooze_reminder_time\": null\n        },\n        {\n            \"completed_time\": null,\n            \"id\": \"6834aafeec201a7f471a2ec2\",\n            \"is_all_day\": false,\n            \"sort_order\": 4398046511104,\n            \"start_date\": null,\n            \"status\": 0,\n            \"time_zone\": \"America/Chicago\",\n            \"title\": \"Checklist item 5\",\n            \"snooze_reminder_time\": null\n        }\n    ],\n    \"kind\": \"CHECKLIST\",\n    \"modified_time\": \"2025-05-26T17:56:19Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"reminder\": null,\n    \"reminders\": [\n        {\n            \"id\": \"6834aad3ec201a7f471a2e96\",\n            \"trigger\": \"TRIGGER:-P6DT15H0M0S\"\n        }\n    ],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;WKST=SU\",\n    \"repeat_from\": 1,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2025-01-07T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [\n        \"tag_2\"\n    ],\n    \"title\": \"Task 6 \",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": -1099511627776\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"This is a note task\",\n    \"created_time\": \"2025-05-26T18:40:59Z\",\n    \"desc\": \"\",\n    \"due_date\": \"2024-12-12T06:00:00Z\",\n    \"etag\": \"sffsnp5r\",\n    \"id\": \"6834b5bbec201a7f471a2efa\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"NOTE\",\n    \"modified_time\": \"2025-05-26T18:41:48Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": null,\n    \"repeat_from\": 1,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2024-12-12T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [\n        \"tag_1\",\n        \"tag_2\"\n    ],\n    \"title\": \"Task 8\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 1099511627776\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"This is task 7\",\n    \"created_time\": \"2025-05-26T17:56:13Z\",\n    \"desc\": null,\n    \"due_date\": \"2024-06-12T05:00:00Z\",\n    \"etag\": \"ouzd254o\",\n    \"id\": \"6834ab3dec201a7f471a2ed5\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:56:16Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=MONTHLY;INTERVAL=2;TT_SKIP=WEEKEND\",\n    \"repeat_from\": 1,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2024-06-12T05:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 7\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 0\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"This is a high priority task\",\n    \"created_time\": \"2025-05-26T18:41:39Z\",\n    \"desc\": null,\n    \"due_date\": null,\n    \"etag\": \"e5agjrg5\",\n    \"id\": \"6834b5e3ec201a7f471a2f12\",\n    \"is_all_day\": null,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T18:41:46Z\",\n    \"parent_id\": null,\n    \"priority\": 5,\n    \"progress\": 0,\n    \"project_id\": \"6834a2938f08df73a73c4766\",\n    \"reminder\": \"\",\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": null,\n    \"repeat_from\": null,\n    \"repeat_task_id\": null,\n    \"start_date\": null,\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 9\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 2199023255552\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"created_time\": \"2025-05-26T17:54:03Z\",\n    \"desc\": null,\n    \"due_date\": \"2025-01-02T06:00:00Z\",\n    \"etag\": \"umaki4zx\",\n    \"id\": \"6834aabbec201a7f471a2e80\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:54:08Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=WE,MO,TU,TH,FR\",\n    \"repeat_from\": 2,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2025-01-02T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 5\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 3298534883328\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"created_time\": \"2025-05-26T17:53:40Z\",\n    \"desc\": null,\n    \"due_date\": \"2024-12-24T06:00:00Z\",\n    \"etag\": \"3h9y1quj\",\n    \"id\": \"6834aaa4ec201a7f471a2e6f\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:53:50.197000Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": null,\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": \"RRULE:FREQ=WEEKLY;INTERVAL=1\",\n    \"repeat_from\": 2,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2024-12-24T06:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 4\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 2199023255552\n}\n{\n    \"child_ids\": [],\n    \"completed_time\": null,\n    \"content\": \"Description for task 3\",\n    \"created_time\": \"2025-05-26T17:52:41Z\",\n    \"desc\": null,\n    \"due_date\": \"2024-11-01T05:00:00Z\",\n    \"etag\": \"kfzwfwax\",\n    \"id\": \"6834aa69ec201a7f471a2de4\",\n    \"is_all_day\": true,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:53:50.191000Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": null,\n    \"reminders\": [\n        {\n            \"id\": \"6834aa64ec201a7f471a2de0\",\n            \"trigger\": \"TRIGGER:-P0DT15H0M0S\"\n        },\n        {\n            \"id\": \"6834aa64ec201a7f471a2de1\",\n            \"trigger\": \"TRIGGER:-P1DT15H0M0S\"\n        }\n    ],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": null,\n    \"repeat_from\": null,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2024-11-01T05:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 3\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 1099511627776\n}\n{\n    \"child_ids\": [],\n    \"completed_time\": null,\n    \"content\": \"Description for task 1\",\n    \"created_time\": \"2025-05-26T17:51:31Z\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-01T16:00:00Z\",\n    \"etag\": \"qn45qq76\",\n    \"id\": \"6834aa23ec201a7f471a2db7\",\n    \"is_all_day\": false,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:52:11.446000Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": \"TRIGGER:PT0S\",\n    \"reminders\": [\n        {\n            \"id\": \"6834aa1cec201a7f471a2db4\",\n            \"trigger\": \"TRIGGER:PT0S\"\n        }\n    ],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": null,\n    \"repeat_from\": null,\n    \"repeat_task_id\": null,\n    \"start_date\": \"2024-10-01T16:00:00Z\",\n    \"status\": 0,\n    \"tags\": [],\n    \"title\": \"Task 1\",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": -1099511627776\n}\n{\n    \"child_ids\": null,\n    \"completed_time\": null,\n    \"content\": \"Description for task 2\",\n    \"created_time\": \"2025-05-26T17:52:05Z\",\n    \"desc\": null,\n    \"due_date\": null,\n    \"etag\": \"qder45zu\",\n    \"id\": \"6834aa45ec201a7f471a2dcc\",\n    \"is_all_day\": null,\n    \"is_floating\": false,\n    \"items\": [],\n    \"kind\": \"TEXT\",\n    \"modified_time\": \"2025-05-26T17:52:11.449000Z\",\n    \"parent_id\": null,\n    \"priority\": 0,\n    \"progress\": 0,\n    \"project_id\": \"6834a28d8f08df73a73c46a8\",\n    \"reminder\": \"\",\n    \"reminders\": [],\n    \"repeat_first_date\": null,\n    \"repeat_flag\": null,\n    \"repeat_from\": null,\n    \"repeat_task_id\": null,\n    \"start_date\": null,\n    \"status\": 0,\n    \"tags\": [\n        \"tag_1\"\n    ],\n    \"title\": \"Task 2 \",\n    \"time_zone\": \"America/Chicago\",\n    \"attachments\": [],\n    \"annoying_alert\": null,\n    \"column_id\": null,\n    \"comment_count\": null,\n    \"completed_user_id\": null,\n    \"creator\": 126406863,\n    \"deleted\": 0,\n    \"ex_date\": [],\n    \"img_mode\": null,\n    \"focus_summaries\": [],\n    \"sort_order\": 0\n}\n</code></pre>"},{"location":"guides/cookbook/tasks/update_a_basic_task/","title":"Update a Basic Task","text":"<p>Let's assume we want to update the task from the create a basic task recipe with the following properties:</p> <ul> <li>Name: <code>Update Test Task</code></li> <li>Description: <code>We now have updated task details</code></li> <li>Due Date: <code>2024-10-02</code> at <code>11:00 AM</code></li> <li>Alarm: At the time of the due date</li> <li>Time zone: <code>Chicago</code></li> </ul> <p>This will be updated under the same project with ID <code>683217b48f08892e6997ef03</code>, called <code>Test Project</code>.</p> <p>This is what the <code>pyticktick</code> code would look like:</p> V1 - dictV1 - modelV2 - dictV2 - model <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\ntask = client.update_task_v1(\n    task_id=\"68336a02ec201a48c7aadedf\",\n    data={\n        \"id\": \"68336a02ec201a48c7aadedf\",\n        \"title\": \"Update Test Task\",\n        \"content\": \"We now have updated task details\",\n        \"due_date\": \"2024-10-02T11:00:00+0000\",\n        \"reminders\": [\"TRIGGER:PT0S\"],\n        \"time_zone\": \"America/Chicago\",\n        \"project_id\": \"683217b48f08892e6997ef03\",\n    },\n)\nprint(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"68336a02ec201a48c7aadedf\",\n    \"project_id\": \"683217b48f08892e6997ef03\",\n    \"title\": \"Update Test Task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"We now have updated task details\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-02T11:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:PT0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2024-10-02T11:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v1 import UpdateTaskV1\n\nclient = Client()\ntask = client.update_task_v1(\n    task_id=\"68336a02ec201a48c7aadedf\",\n    data=UpdateTaskV1(\n        id=\"68336a02ec201a48c7aadedf\",\n        title=\"Update Test Task\",\n        content=\"We now have updated task details\",\n        due_date=\"2024-10-02T11:00:00+0000\",\n        reminders=[\"TRIGGER:PT0S\"],\n        time_zone=\"America/Chicago\",\n        project_id=\"683217b48f08892e6997ef03\",\n    ),\n)\nprint(json.dumps(task.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id\": \"68336a02ec201a48c7aadedf\",\n    \"project_id\": \"683217b48f08892e6997ef03\",\n    \"title\": \"Update Test Task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"We now have updated task details\",\n    \"desc\": null,\n    \"due_date\": \"2024-10-02T11:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": [\n        \"TRIGGER:PT0S\"\n    ],\n    \"repeat_flag\": null,\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2024-10-02T11:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\"\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\n\nclient = Client()\n\ndata = client.get_batch_v2()\nfor task in data.sync_task_bean.update:\n    if task.id == \"68336a02ec201a48c7aadedf\":\n        break\n\nresp = client.post_task_v2(\n    data={\n        \"update\": [\n            {\n                \"id\": task.id,\n                \"title\": \"Update Test Task\",\n                \"content\": \"We now have updated task details\",\n                \"due_date\": \"2024-10-02T11:00:00+0000\",\n                \"reminders\": [\n                    {\n                        \"id\": reminder.id,\n                        \"trigger\": reminder.trigger,\n                    }\n                    for reminder in task.reminders\n                ],\n                \"time_zone\": task.time_zone,\n                \"project_id\": task.project_id,\n            },\n        ],\n    },\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"68336a02ec201a48c7aadedf\": \"zyu8w113\"\n    }\n}\n</code></pre> <pre><code>import json\nfrom pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTaskV2, UpdateTaskReminderV2, UpdateTaskV2\n\nclient = Client()\n\ndata = client.get_batch_v2()\nfor task in data.sync_task_bean.update:\n    if task.id == \"68336a02ec201a48c7aadedf\":\n        break\n\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        update=[\n            UpdateTaskV2(\n                id=task.id,\n                title=\"Update Test Task\",\n                content=\"We now have updated task details\",\n                due_date=\"2024-10-02T11:00:00+0000\",\n                reminders=[\n                    UpdateTaskReminderV2(\n                        id=reminder.id,\n                        trigger=reminder.trigger,\n                    )\n                    for reminder in task.reminders\n                ],\n                time_zone=task.time_zone,\n                project_id=task.project_id,\n            ),\n        ],\n    ),\n)\nprint(json.dumps(resp.model_dump(mode=\"json\"), indent=4))\n</code></pre> <p>will return:</p> <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"68336a02ec201a48c7aadedf\": \"zyu8w113\"\n    }\n}\n</code></pre> <p>Here is the end result in the TickTick app:</p>"},{"location":"guides/development/release_process/","title":"Release Process","text":"<p>Releasing a new version of the project involves a few steps to ensure that the code is ready for release. The release process itself is automated through GitHub Actions, assuming the requirements are met.</p>"},{"location":"guides/development/release_process/#update-the-version","title":"Update the Version","text":"<p>The package version in <code>pyproject.toml</code> in the <code>main</code> branch must be a higher version than the last release of pyticktick. To update the version, you can manually update the <code>version</code> field in the <code>pyproject.toml</code> file, or run <code>uv version &lt;new_version&gt;</code>.</p>"},{"location":"guides/development/release_process/#versioning-scheme","title":"Versioning Scheme","text":"<p><code>pyticktick</code> follows the PyPA versioning scheme, which is derived from Semantic Versioning. The version number is composed of three parts: <code>MAJOR.MINOR.PATCH</code>, where:</p> <ol> <li><code>MAJOR</code> version when you make incompatible API changes</li> <li><code>MINOR</code> version when you add functionality in a backward compatible manner</li> <li><code>PATCH</code> version when you make backward compatible bug fixes</li> </ol> <p>No pre-release or post-release tags are used in the version number.</p>"},{"location":"guides/development/release_process/#update-the-changelog","title":"Update the Changelog","text":"<p>The changelog is tracked in the <code>CHANGELOG.md</code> file. The changelog must be manually updated, with the format:</p> docs/CHANGELOG.md<pre><code>...\n## MAJOR.MINOR.PATCH\n\n- Words describing the changes ([#123]((https://github.com/sebpretzer/pyticktick/pull/123)))\n\n## MAJOR.MINOR.PATCH-1\n...\n</code></pre> <p>The relevant section of the changelog is extracted by the GitHub Action as part of the release.</p>"},{"location":"guides/development/release_process/#trigger-the-release","title":"Trigger the Release","text":"<p>To trigger the release, you need to go to the publish workflow. Select <code>Run workflow</code> from the <code>main</code> branch.</p> <p>Wait for the workflow to finish. The workflow will automatically:</p> <ol> <li>Build the package</li> <li>Create a new release on GitHub</li> <li>Upload the package to PyPI</li> </ol>"},{"location":"guides/development/running_tests_locally/","title":"Running Tests Locally","text":"Have you set up your local environment? <p>Make sure your local environment is set up by following the steps in the Setting Up the Local Environment guide.</p> <p>There are two sets of tests that you can run locally: unit tests and integration tests. They are run separately, because the integration tests take a lot longer to run, and require credentials.</p>"},{"location":"guides/development/running_tests_locally/#running-unit-tests","title":"Running Unit Tests","text":"<p>To run the unit tests, run the following command:</p> <pre><code>make test-unit\n</code></pre> <p>This command will run the unit tests and generate a coverage report in your terminal. You can also view the coverage report in your browser by opening the html report:</p> <pre><code>open htmlcov/index.html\n</code></pre>"},{"location":"guides/development/running_tests_locally/#running-integration-tests","title":"Running Integration Tests","text":"<p>Before running the integration tests, you need to set up your environment variables. You can do this by creating a <code>.env</code> file in the root of the repo and adding the following environment variables:</p> .env<pre><code>PYTICKTICK_V1_CLIENT_ID=\"YOUR_CLIENT_ID\"\nPYTICKTICK_V1_CLIENT_SECRET=\"YOUR_CLIENT_SECRET\"\nPYTICKTICK_V1_TOKEN_VALUE=\"YOUR_TOKEN_UUID\"\nPYTICKTICK_V1_TOKEN_EXPIRATION=1111111111\nPYTICKTICK_V2_USERNAME=\"YOUR_USERNAME\"\nPYTICKTICK_V2_PASSWORD=\"YOUR_PASSWORD\"\n</code></pre> <p>If you don't want to create a <code>.env</code> file, you can set the same environment variables in your session before running the tests.</p> <p>To run the integration tests, run the following command:</p> <pre><code>make test-integration\n</code></pre> <p>This command will run the integration tests and generate a coverage report in your terminal. You can also view the coverage report in your browser by opening the html report:</p> <pre><code>open htmlcov/index.html\n</code></pre>"},{"location":"guides/development/running_the_documentation_server_locally/","title":"Running the Documentation Server Locally","text":"Have you set up your local environment? <p>Make sure your local environment is set up by following the steps in the Setting Up the Local Environment guide.</p> <p>By running the mkdocs documentation locally, you can create a dev server that updates itself as the documentation and code changes. This allows for better visualization of what the endstate will look like.</p> <p>To run the mkdocs dev server, you simply have to run:</p> <pre><code>make mkdocs-dev\n</code></pre> <p>This will then serve the documentation at <code>http://127.0.0.1:8000/</code>.</p> <p>If you make changes to any files in <code>docs/</code> or <code>pyticktick/</code>, you should see the documentation refresh, it may just take a second to rebuild.</p>"},{"location":"guides/development/setup_local_environment/","title":"Setting Up the Local Environment","text":"<p>First, clone the repo. Then, we can install the dependencies.</p>"},{"location":"guides/development/setup_local_environment/#install-uv-optional","title":"Install <code>uv</code> (optional)","text":"<p>This package uses <code>uv</code> to manage the virtual environment and dependencies. If you already have <code>uv</code> installed, you can skip this step.</p> <p>To install <code>uv</code>, run the following command:</p> <pre><code>make install-uv\n</code></pre> <p>You can also install it using their installation guide if you prefer.</p>"},{"location":"guides/development/setup_local_environment/#install-dependencies","title":"Install Dependencies","text":"<p>To install the dependencies, run the following command:</p> <pre><code>make install\n</code></pre> <p>This will install all the dependencies needed to run the code, scripts, tests, and build the documentation.</p> <p>It will also install pre-commit hooks to ensure code quality. These hooks will run automatically as part of CI, so if you do not want to use them during development, you can disable them by running <code>--no-verify</code> during commit.</p>"},{"location":"guides/settings/overriding_models_that_forbid_extra_fields/","title":"Overriding Models That Forbid Extra Fields","text":"<p>When getting back response data from an API call, if you get an <code>extra_forbidden</code> error message like:</p> <pre><code>pydantic_core._pydantic_core.ValidationError: 1 validation error for RespModel\nextra_field\n    Extra inputs are not permitted [type=extra_forbidden, input_value='extra_value', input_type=str]\n</code></pre> <p>it may be due to the TickTick API adding new fields that are not yet supported by the response model (<code>RespModel</code>).</p> <p>In this case, you can override the model behavior and allow extra fields. This can be done by setting <code>override_forbid_extra</code> to <code>True</code> in the client configuration:</p> <pre><code>from pyticktick import Client\n\nclient = Client(override_forbid_extra=True)\n</code></pre> <p>You can see alternative ways to set <code>override_forbid_extra</code> in the Settings reference.</p> <p>Note</p> <p>This feature does not work in all cases, only when TickTick updates their API and this library has not yet been updated to support the new fields. If you encounter this error, it may be failing due to other reasons.</p> <p>To see why this feature was built in this way, you can see the explanation in Forbidding Extra Fields in API Models.</p> <p>If this does happen to you, please open an issue on the GitHub repository so this can be addressed.</p>"},{"location":"guides/ticktick_api/generate_v1_token/","title":"Generate a V1 Token","text":""},{"location":"guides/ticktick_api/generate_v1_token/#introduction","title":"Introduction","text":"Have you registered your app? <p>You cannot generate a V1 token until you have registered your app and received your client ID, client secret, and OAuth redirect URL. You can find the guide to do this here.</p> <p>To generate a V1 token, you will need to have your client ID, client secret, and OAuth redirect URL in hand. This guide will walk you through the script <code>scripts/generate_v1_token.py</code>, which will generate a V1 token for you. If you just want to generate a V1 token without using the script, you can skip down to the Code TLDR section.</p> <p>At the end of this guide, you will have a V1 token (in the form of a UUID) and an expiration time (in the form of a unix seconds timestamp). Both of these are useful when making requests to the V1 API.</p>"},{"location":"guides/ticktick_api/generate_v1_token/#run-the-script","title":"Run the Script","text":"Have you set up your local environment? <p>Make sure your local environment is set up by following the steps in the Setting Up the Local Environment guide.</p> <p>To run <code>scripts/generate_v1_token.py</code>, run the following command:</p> <pre><code>make generate-v1-token\n</code></pre>"},{"location":"guides/ticktick_api/generate_v1_token/#enter-your-credentials","title":"Enter Your Credentials","text":"<p>This will prompt you to enter your client ID, client secret, and OAuth redirect URL:</p> <pre><code>Enter your client_id: YOUR_CLIENT_ID\nEnter your client_secret: YOUR_CLIENT_SECRET\nEnter your OAuth redirect URL: http://127.0.0.1:8080/\n</code></pre>"},{"location":"guides/ticktick_api/generate_v1_token/#open-the-url","title":"Open the URL","text":"<p>A URL will be printed to the console. You can either copy paste this URL into your browser or hit enter to open the URL in your default browser.</p> <pre><code>Request URL:\n\n https://ticktick.com/oauth/authorize?client_id=YOUR_CLIENT_ID&amp;scope=tasks%3Aread+tasks%3Awrite&amp;state=None&amp;response_type=code\n\nOpen the browser to signon to the V1 API? [Y/n]: Y\n</code></pre> <p>This will take you to the TickTick login page. Log in with your account and click \"Allow\" to grant access to your app:</p>"},{"location":"guides/ticktick_api/generate_v1_token/#copy-the-code","title":"Copy the Code","text":"<p>Do not close the browser window. You will be redirected to a (possibly non-functioning) page with a code. Copy the entire URL and paste it back into the console:</p> <pre><code>What is the URL you were redirected to?: http://127.0.0.1:8080/?code=jAyEtF&amp;state=None\n</code></pre>"},{"location":"guides/ticktick_api/generate_v1_token/#get-your-token","title":"Get Your Token","text":"<p>The Python process should have your token stored in memory. There are a few ways to get the token at this point. You can either send the token and expiration time to your clipboard, or print it to the console, or save it to a file. The script will prompt you for your choice in that respective order, and whichever you choose will skip the following prompts:</p> <pre><code>Do you want the token to be copied to the clipboard? [Y/n]:\n...\nDo you want to print the token and its expiration? [Y/n]:\n...\nEnter the file path to save the token and expiration:\n</code></pre> <p>Then follow any additional prompts to complete the process.</p>"},{"location":"guides/ticktick_api/generate_v1_token/#code-tldr-optional","title":"Code TLDR (Optional)","text":"<p>The actual code required to generate a V1 token is quite simple:</p> <pre><code>from pyticktick import Settings\n\nclient_id = \"YOUR_CLIENT_ID\"\nclient_secret = \"YOUR_CLIENT_SECRET\"\nredirect_url = \"http://127.0.0.1:8080/\"\n\ntoken = Settings.v1_signon(client_id, client_secret, redirect_url)\ntoken_value = token.access_token\ntoken_expiration = token.expires_in + int(time())\n</code></pre> <p>Then just make sure you follow the same steps laid out in Open the URL and Copy the Code sections. Then the rest will be up to you to decide how you want to handle the token.</p>"},{"location":"guides/ticktick_api/register_v1_app/","title":"Register a V1 App","text":"<p>This guide will walk you through the process of registering an app for the V1 API. Once registered, you will receive a client ID, client secret, and be able to set an OAuth redirect URL. These credentials are required to generate a V1 token.</p> <p>First, head to the Manage Apps page and log in with your TickTick account.</p> <p>Once logged in, click the \"New App\" button.</p> <p>The only requirement is that you name your app, but you can also provide a description if you wish. Once you have filled in the required fields, click the \"Add\" button.</p> <p>You will now see your app listed on the \"Manage Apps\" page. Click \"Edit\" to view your credentials.</p> <p>This is where you will see your client ID, client secret, and set your OAuth redirect URL. By default, the OAuth redirect URL is set to:</p> <pre><code>http://127.0.0.1:8080/\n</code></pre> <p>You can change this to any URL you wish. However, if you change the URL, you will need to set the <code>v1_oauth_redirect_url</code> parameter when generating a V1 token. Don't forget to click the \"Save\" button after making any changes.</p>"},{"location":"reference/logger/","title":"Logger","text":""},{"location":"reference/logger/#pyticktick.logger","title":"pyticktick.logger","text":"<p>Logging workound to use Loguru in conjunction with the standard logging module.</p> <p>Warning</p> <p>Users are not expected to use the module directly, this is for internal use only. It is being documented for transparency and to provide context in case users encounter any issues.</p> <p>This module contains a workaround when a function expects the standard logging module but you want to use Loguru. This is done by creating a custom logging handler that sends logs to Loguru. This is intended to be used in rare cases, such as with tenacity. You should use <code>from loguru import logger</code> for all other logging needs.</p> <p>This module was taken from Delgan/loguru#969 (comment) and is endorsed as the best current workaround by the author of Loguru.</p> <p>Example</p> <pre><code>from loguru import logger\nfrom pyticktick.logger import _logger\n\nlogger.info(\"This is a Loguru message\")\n_logger.info(\"This is a standard logging message that will be sent to Loguru\")\n</code></pre>"},{"location":"reference/pydantic/","title":"Pydantic","text":""},{"location":"reference/pydantic/#pyticktick.pydantic","title":"pyticktick.pydantic","text":"<p>Custom Pydantic utilities that are not currently supported by Pydantic libraries.</p> <p>Warning</p> <p>Users are not expected to use the module directly, this is for internal use only. It is being documented for transparency and to provide context in case users encounter any issues.</p> <p>Functions:</p> Name Description <code>update_model_config</code> <p>Dynamically update a Pydantic model config, including nested submodels.</p> <code>_check_field_for_submodel</code> <p>Check if a field is a Pydantic model and attempt to update its config if it is.</p>"},{"location":"reference/pydantic/#pyticktick.pydantic.update_model_config","title":"update_model_config","text":"<pre><code>update_model_config(\n    model: type[BaseModel], **config_kwargs: Any\n) -&gt; None\n</code></pre> <p>Dynamically update a Pydantic model config, including nested submodels.</p> <p>This function updates the input <code>model.model_config</code>, and forces a rebuild with the updated config. In general, that process only works for the top-level model, it does not work for nested submodels. This function works in tandem with <code>_check_field_for_submodel</code> to recursively update the config of nested Pydantic submodels.</p> <p>This takes inspiration from pydantic/pydantic#2518, which built a similar function for Pydantic V1. pydantic/pydantic#2652 is a feature request to add the functionality present here to the core of Pydantic V2.</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>type[BaseModel]</code> <p>The Pydantic model to update.</p> required <code>**config_kwargs</code> <code>Any</code> <p>The key-value pairs to update the model config with, should be only values found in <code>pydantic.ConfigDict</code>.</p> <code>{}</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>If no config key-value pairs are provided.</p> Source code in <code>src/pyticktick/pydantic.py</code> <pre><code>def update_model_config(model: type[BaseModel], **config_kwargs: Any) -&gt; None:  # noqa: ANN401\n    \"\"\"Dynamically update a Pydantic model config, including nested submodels.\n\n    This function updates the input `model.model_config`, and forces a rebuild with the\n    updated config. In general, that process only works for the top-level model, it does\n    not work for nested submodels. This function works in tandem with\n    [`_check_field_for_submodel`](pydantic.md#pyticktick.pydantic._check_field_for_submodel)\n    to recursively update the config of nested Pydantic submodels.\n\n    This takes inspiration from [pydantic/pydantic#2518](https://github.com/pydantic/pydantic/discussions/2518),\n    which built a similar function for Pydantic V1. [pydantic/pydantic#2652](https://github.com/pydantic/pydantic/discussions/2652)\n    is a feature request to add the functionality present here to the core of Pydantic\n    V2.\n\n    Args:\n        model (type[BaseModel]): The Pydantic model to update.\n        **config_kwargs (Any): The key-value pairs to update the model config with,\n            should be only values found in [`pydantic.ConfigDict`](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict).\n\n    Raises:\n        ValueError: If no config key-value pairs are provided.\n    \"\"\"\n    if len(config_kwargs) == 0:\n        msg = \"`update_model_config()` requires at least 1 Model Config key-value pair argument\"  # noqa: E501\n        raise ValueError(msg)\n\n    for field in model.__pydantic_fields__.values():\n        _check_field_for_submodel(field.annotation, **config_kwargs)\n\n    model.model_config.update(ConfigDict(**config_kwargs))  # type: ignore[typeddict-item]\n    model.model_rebuild(force=True)\n</code></pre>"},{"location":"reference/pydantic/#pyticktick.pydantic._check_field_for_submodel","title":"_check_field_for_submodel","text":"<pre><code>_check_field_for_submodel(\n    annotation: type[Any] | None, **config_kwargs: Any\n) -&gt; None\n</code></pre> <p>Check if a field is a Pydantic model and attempt to update its config if it is.</p> <p>This function checks if the input <code>annotation</code> is a Pydantic model and calls <code>update_model_config</code> on it, if it is.</p> <p>This function is used internally by Pyticktick to ensure that all nested submodels have the same config as the top-level model.</p> <p>Parameters:</p> Name Type Description Default <code>annotation</code> <code>Optional[type[Any]]</code> <p>The Pydantic.FieldInfo annotation to check.</p> required <code>**config_kwargs</code> <code>Any</code> <p>The key-value pairs to update the model config with, should be only values found in <code>pydantic.ConfigDict</code>.</p> <code>{}</code> Source code in <code>src/pyticktick/pydantic.py</code> <pre><code>def _check_field_for_submodel(\n    annotation: type[Any] | None,\n    **config_kwargs: Any,  # noqa: ANN401\n) -&gt; None:\n    \"\"\"Check if a field is a Pydantic model and attempt to update its config if it is.\n\n    This function checks if the input `annotation` is a Pydantic model and calls\n    [`update_model_config`](pydantic.md#pyticktick.pydantic.update_model_config)\n    on it, if it is.\n\n    This function is used internally by Pyticktick to ensure that all nested submodels\n    have the same config as the top-level model.\n\n    Args:\n        annotation (Optional[type[Any]]): The [Pydantic.FieldInfo](https://docs.pydantic.dev/latest/api/fields/#pydantic.fields.FieldInfo)\n            annotation to check.\n        **config_kwargs (Any): The key-value pairs to update the model config with,\n            should be only values found in [`pydantic.ConfigDict`](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict).\n    \"\"\"\n    if annotation is None:\n        return\n    if isinstance(annotation, types.GenericAlias):\n        _origin = annotation.__origin__\n        _args = annotation.__args__\n        if _origin is list and issubclass(_args[0], BaseModel):\n            update_model_config(_args[0], **config_kwargs)\n        elif _origin is dict and issubclass(_args[1], BaseModel):\n            update_model_config(_args[1], **config_kwargs)\n    elif _is_union(annotation):\n        for _arg in annotation.__args__:\n            _check_field_for_submodel(_arg, **config_kwargs)\n    elif issubclass(annotation, BaseModel):\n        update_model_config(annotation, **config_kwargs)\n</code></pre>"},{"location":"reference/retry/","title":"Retry","text":""},{"location":"reference/retry/#pyticktick.retry","title":"pyticktick.retry","text":"<p>Retry decorators for the TickTick API.</p> <p>This module contains the retry decorator for the TickTick API. This uses tenacity to provide the retry mechanism. Currently, this only retries for V1 API errors, and specifically for the <code>exceed_query_limit</code> error message. No other retriable errors are known as of now, but this can be expanded in the future.</p> <p>Example</p> <pre><code>from pyticktick.retry import retry_api_v1\n\n\n@retry_api_v1(attempts=10, min_wait=4, max_wait=20)\ndef my_function():\n    pass\n</code></pre> <p>Functions:</p> Name Description <code>retry_api_v1</code> <p>Retry decorator for the V1 API.</p>"},{"location":"reference/retry/#pyticktick.retry.retry_api_v1","title":"retry_api_v1","text":"<pre><code>retry_api_v1(\n    attempts: int = 10,\n    min_wait: float = 4,\n    max_wait: float = 20,\n) -&gt; Callable[[WrappedFn], WrappedFn]\n</code></pre> <p>Retry decorator for the V1 API.</p> <p>This decorator retries the function if the error message is <code>exceed_query_limit</code>. The defaults have been set via trial and error, and may need to be adjusted depending on the use case.</p> <p>Parameters:</p> Name Type Description Default <code>attempts</code> <code>int</code> <p>The number of attempts to make. Defaults to 10.</p> <code>10</code> <code>min_wait</code> <code>float</code> <p>The minimum wait time between attempts. Defaults to 4.</p> <code>4</code> <code>max_wait</code> <code>float</code> <p>The maximum wait time between attempts. Defaults to 20.</p> <code>20</code> <p>Returns:</p> Type Description <code>Callable[[WrappedFn], WrappedFn]</code> <p>Callable[[WrappedFn], WrappedFn]: The tenacity retry decorator.</p> Source code in <code>src/pyticktick/retry.py</code> <pre><code>def retry_api_v1(\n    attempts: int = 10,\n    min_wait: float = 4,\n    max_wait: float = 20,\n) -&gt; Callable[[WrappedFn], WrappedFn]:\n    \"\"\"Retry decorator for the V1 API.\n\n    This decorator retries the function if the error message is `exceed_query_limit`.\n    The defaults have been set via trial and error, and may need to be adjusted\n    depending on the use case.\n\n    Args:\n        attempts (int): The number of attempts to make. Defaults to 10.\n        min_wait (float): The minimum wait time between attempts. Defaults to 4.\n        max_wait (float): The maximum wait time between attempts. Defaults to 20.\n\n    Returns:\n        Callable[[WrappedFn], WrappedFn]: The tenacity retry decorator.\n    \"\"\"\n    return retry(\n        retry=(\n            retry_if_exception_type(ValueError)\n            &amp; retry_if_exception_message(match=r\"^.*exceed\\_query\\_limit.*$\")\n        ),\n        stop=stop_after_attempt(attempts),\n        wait=wait_exponential(multiplier=1, min=min_wait, max=max_wait),\n        before_sleep=before_sleep_log(_logger, logging.INFO),\n    )\n</code></pre>"},{"location":"reference/settings/","title":"Settings","text":""},{"location":"reference/settings/#pyticktick.settings","title":"pyticktick.settings","text":"<p>Settings for the pyticktick client.</p> <p>This module contains the settings for the pyticktick client. The settings juggle the two TickTick APIs: V1 and V2. The V1 API is the official API, and the V2 API is an undocumented one. The settings are expected to be used in conjunction with the <code>pyticktick.client.Client</code> class, which manages the API requests.</p> <p>Classes:</p> Name Description <code>Settings</code> <p>Settings for the pyticktick client.</p> <code>TokenV1</code> <p>Model for the V1 API token.</p>"},{"location":"reference/settings/#pyticktick.settings.Settings","title":"Settings","text":"<p>               Bases: <code>BaseSettings</code></p> <p>Settings for the pyticktick client.</p> <p>The settings are used to sign on to the two TickTick APIs. The two APIs have two distinct sign on methods. The V1 API uses OAuth2, and is the official API, with official documentation. The V2 API uses a username and password, is an undocumented, and not officially supported by TickTick.</p> <p>Each API can be signed on to independently, so a user can use one or both, depending on their needs. It is recommended to create and save the V1 token, as it requires user input to sign on, and is not easily automated.</p> Load all settings <pre><code>from pyticktick import Settings\n\nsettings = Settings(\n    v1_client_id=\"client_id\",\n    v1_client_secret=\"client_secret\",\n    v1_token={\n        \"value\": \"fa371b10-8b95-442b-b4a5-11a9959d3590\",\n        \"expiration\": 1701701789,\n    },\n    v2_username=\"username\",\n    v2_password=\"password\",\n    override_forbid_extra=True,\n)\n</code></pre> Load only V1 API settings <pre><code>from pyticktick import Settings\n\nsettings = Settings(\n    v1_client_id=\"client_id\",\n    v1_client_secret=\"client_secret\",\n    v1_token={\n        \"value\": \"fa371b10-8b95-442b-b4a5-11a9959d3590\",\n        \"expiration\": 1701701789,\n    },\n)\n</code></pre> Load only V2 API settings <pre><code>from pyticktick import Settings\n\nsettings = Settings(\n    v2_username=\"username\",\n    v2_password=\"password\",\n)\n</code></pre> Load only V2 API settings when 2FA is enabled <pre><code>from pyticktick import Settings\n\nsettings = Settings(\n    v2_username=\"username\",\n    v2_password=\"password\",\n    v2_totp_secret=\"totp_secret\",\n)\n</code></pre> <p>This class is a subclass of <code>pydantic_settings.BaseSettings</code>, which allows for environment variable and secret file parsing.</p> Load settings from environment variables .bashrc<pre><code>export PYTICKTICK_V1_CLIENT_ID=\"client_id\"\nexport PYTICKTICK_V1_CLIENT_SECRET=\"client_secret\"\nexport PYTICKTICK_V1_TOKEN_VALUE=\"fa371b10-8b95-442b-b4a5-11a9959d3590\"\nexport PYTICKTICK_V1_TOKEN_EXPIRATION=\"1701701789\"\nexport PYTICKTICK_V2_USERNAME=\"username\"\nexport PYTICKTICK_V2_PASSWORD=\"password\"\nexport PYTICKTICK_OVERRIDE_FORBID_EXTRA=\"True\"\n</code></pre> <pre><code>from pyticktick import Settings\n\nsettings = Settings()\n</code></pre> Load settings from a secret file .env<pre><code>PYTICKTICK_V1_CLIENT_ID=\"client_id\"\nPYTICKTICK_V1_CLIENT_SECRET=\"client_secret\"\nPYTICKTICK_V1_TOKEN_VALUE=\"fa371b10-8b95-442b-b4a5-11a9959d3590\"\nPYTICKTICK_V1_TOKEN_EXPIRATION=\"1701701789\"\nPYTICKTICK_V2_USERNAME=\"username\"\nPYTICKTICK_V2_PASSWORD=\"password\"\nPYTICKTICK_OVERRIDE_FORBID_EXTRA=\"True\"\n</code></pre> <pre><code>from pyticktick import Settings\n\nsettings = Settings(_env_file=\".env\")\n</code></pre> <p>Attributes:</p> Name Type Description <code>v1_client_id</code> <code>Optional[str]</code> <p>The client ID for the V1 API.</p> <code>v1_client_secret</code> <code>Optional[SecretStr]</code> <p>The client secret for the V1 API.</p> <code>v1_token</code> <code>Optional[TokenV1]</code> <p>The OAuth2 token for the V1 API.</p> <code>v1_base_url</code> <code>HttpUrl</code> <p>The base URL for the V1 API. Defaults to <code>https://api.ticktick.com/open/v1/</code>.</p> <code>v1_oauth_redirect_url</code> <code>HttpUrl</code> <p>The URL to redirect to after authorization. Defaults to <code>http://127.0.0.1:8080/</code>.</p> <code>v2_username</code> <code>Optional[EmailStr]</code> <p>The username for the V2 API.</p> <code>v2_password</code> <code>Optional[SecretStr]</code> <p>The password for the V2 API.</p> <code>v2_totp_secret</code> <code>Optional[SecretStr]</code> <p>The TOTP secret for the V2 API, required for two-factor authentication.</p> <code>v2_token</code> <code>Optional[str]</code> <p>The cookie token for the V2 API.</p> <code>v2_base_url</code> <code>HttpUrl</code> <p>The base URL for the V2 API. Defaults to <code>https://api.ticktick.com/api/v2/</code>.</p> <code>override_forbid_extra</code> <code>bool</code> <p>Whether to override forbidding extra fields.</p> <p>Methods:</p> Name Description <code>v1_signon</code> <p>Generate an OAuth2 token for the V1 API.</p> <code>v2_signon</code> <p>Generate a cookie token for the undocumented V2 API.</p>"},{"location":"reference/settings/#pyticktick.settings.Settings.v1_headers","title":"v1_headers  <code>property</code>","text":"<pre><code>v1_headers: dict[str, str]\n</code></pre> <p>Get the headers dictionary for the V1 API.</p> <p>Provides the headers dictionary for the V1 API. This is used to authenticate requests to the V1 API. The headers change as frequently as the V1 token, and therefore change, but rarely.</p> <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: The headers dictionary for the V1 API.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the <code>v1_token</code> is not set.</p>"},{"location":"reference/settings/#pyticktick.settings.Settings.v2_cookies","title":"v2_cookies  <code>property</code>","text":"<pre><code>v2_cookies: dict[str, str]\n</code></pre> <p>Get the cookies dictionary for the V2 API.</p> <p>Provides the cookies dictionary for the V2 API. This is used to authenticate requests to the V2 API. The cookies are only valid for the length of the client, and will change for each new client.</p> <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: The cookies dictionary for the V2 API.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the <code>v2_token</code> is not set.</p>"},{"location":"reference/settings/#pyticktick.settings.Settings.v2_headers","title":"v2_headers  <code>property</code>","text":"<pre><code>v2_headers: dict[str, str]\n</code></pre> <p>Get the headers dictionary for the V2 API.</p> <p>Provides the headers dictionary for the V2 API. This is used to authenticate requests to the V2 API. The headers are static and do not change. They were taken from a web browser request to the TickTick website, and are meant to mimic a web browser request.</p> <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: The headers dictionary for the V2 API.</p>"},{"location":"reference/settings/#pyticktick.settings.Settings.v1_signon","title":"v1_signon  <code>classmethod</code>","text":"<pre><code>v1_signon(\n    client_id: str,\n    client_secret: str,\n    oauth_redirect_url: str,\n) -&gt; OAuthTokenV1\n</code></pre> <p>Generate an OAuth2 token for the V1 API.</p> <p>This method runs the OAuth2 sign on process for the V1 API. This is a multi-step process that requires user input, so its use is limited to interactive sessions.</p> V1 OAuth2 Sign On Process <p>The multi-step process is as follows:</p> <ol> <li>The user is redirected to the authorization URL, where they log in, and authorize the application.</li> <li>The user is redirected to a new URL, which contains a <code>code</code> parameter. This URL should be copied into the console, and the code extracted.</li> <li>The code is exchanged for an OAuth2 token. This token is then used for authentication moving forward.</li> </ol> <p>You can read the official documentation here.</p> <p>Parameters:</p> Name Type Description Default <code>client_id</code> <code>str</code> <p>The client ID for the application.</p> required <code>client_secret</code> <code>str</code> <p>The client secret for the application.</p> required <code>oauth_redirect_url</code> <code>str</code> <p>The URL to redirect to after authorization.</p> required <p>Returns:</p> Name Type Description <code>OAuthTokenV1</code> <code>OAuthTokenV1</code> <p>The OAuth2 token response model for the V1 API.</p> Source code in <code>src/pyticktick/settings.py</code> <pre><code>@classmethod\ndef v1_signon(\n    cls,\n    client_id: str,\n    client_secret: str,\n    oauth_redirect_url: str,\n) -&gt; OAuthTokenV1:\n    \"\"\"Generate an OAuth2 token for the V1 API.\n\n    This method runs the OAuth2 sign on process for the V1 API. This is a multi-step\n    process that requires user input, so its use is limited to interactive sessions.\n\n    ???+ note \"V1 OAuth2 Sign On Process\"\n        The multi-step process is as follows:\n\n        1. The user is redirected to the authorization URL, where they log in, and\n        authorize the application.\n        2. The user is redirected to a new URL, which contains a `code` parameter.\n        This URL should be copied into the console, and the code extracted.\n        3. The code is exchanged for an OAuth2 token. This token is then used for\n        authentication moving forward.\n\n        You can read the official documentation [here](https://developer.ticktick.com/docs/index.html#/openapi?id=authorization).\n\n    Args:\n        client_id (str): The client ID for the application.\n        client_secret (str): The client secret for the application.\n        oauth_redirect_url (str): The URL to redirect to after authorization.\n\n    Returns:\n        OAuthTokenV1: The OAuth2 token response model for the V1 API.\n    \"\"\"\n    resp = cls._v1_signon(client_id, client_secret, oauth_redirect_url)\n    return OAuthTokenV1.model_validate(resp)\n</code></pre>"},{"location":"reference/settings/#pyticktick.settings.Settings.v2_signon","title":"v2_signon  <code>classmethod</code>","text":"<pre><code>v2_signon(\n    username: str,\n    password: str,\n    totp_secret: str | None,\n    base_url: str,\n    headers: dict[str, str],\n) -&gt; UserSignOnV2\n</code></pre> <p>Generate a cookie token for the undocumented V2 API.</p> <p>This method uses a username and password to sign on to the V2 API. The sign on request returns a cookie token, which is then used for authentication moving forward. This API is undocumented and TickTick may change it at any time. This logic was mainly pulled lucasvtiradentes/ticktick-api-lvt:</p> <ol> <li>The headers and url base were taken from here.</li> <li>The url route was taken from here.</li> </ol> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>The username for the V2 API.</p> required <code>password</code> <code>str</code> <p>The password for the V2 API.</p> required <code>totp_secret</code> <code>str | None</code> <p>The TOTP secret for the V2 API, used for two-factor authentication. If the sign on request requires TOTP verification, this parameter must be provided. If the sign on request does not require TOTP verification, this parameter can be <code>None</code>.</p> required <code>base_url</code> <code>str</code> <p>The base URL for the V2 API.</p> required <code>headers</code> <code>dict[str, str]</code> <p>The headers dictionary for the V2 API.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the sign on request requires TOTP verification, but no TOTP was provided.</p> <p>Returns:</p> Name Type Description <code>UserSignOnV2</code> <code>UserSignOnV2</code> <p>The sign on response model for the V2 API.</p> Source code in <code>src/pyticktick/settings.py</code> <pre><code>@classmethod\ndef v2_signon(\n    cls,\n    username: str,\n    password: str,\n    totp_secret: str | None,\n    base_url: str,\n    headers: dict[str, str],\n) -&gt; UserSignOnV2:\n    \"\"\"Generate a cookie token for the undocumented V2 API.\n\n    This method uses a username and password to sign on to the V2 API. The sign on\n    request returns a cookie token, which is then used for authentication moving\n    forward. This API is undocumented and TickTick may change it at any time. This\n    logic was mainly pulled [lucasvtiradentes/ticktick-api-lvt](https://github.com/lucasvtiradentes/ticktick-api-lvt):\n\n    1. The headers and url base were taken from [here](https://github.com/lucasvtiradentes/ticktick-api-lvt/blob/2b121beacf8d93e4408e194dc7ea9b8ac9553988/src/configs.ts#L25-L26).\n    2. The url route was taken from [here](https://github.com/lucasvtiradentes/ticktick-api-lvt/blob/2b121beacf8d93e4408e194dc7ea9b8ac9553988/src/routes/auth/login.ts#L6).\n\n    Args:\n        username (str): The username for the V2 API.\n        password (str): The password for the V2 API.\n        totp_secret (str | None): The TOTP secret for the V2 API, used for\n            two-factor authentication. If the sign on request requires TOTP\n            verification, this parameter must be provided. If the sign on request\n            does not require TOTP verification, this parameter can be `None`.\n        base_url (str): The base URL for the V2 API.\n        headers (dict[str, str]): The headers dictionary for the V2 API.\n\n    Raises:\n        ValueError: If the sign on request requires TOTP verification, but no TOTP\n            was provided.\n\n    Returns:\n        UserSignOnV2: The sign on response model for the V2 API.\n    \"\"\"\n    resp = cls._v2_signon(\n        username=username,\n        password=password,\n        base_url=base_url,\n        headers=headers,\n    )\n    try:\n        totp_resp = UserSignOnWithTOTPV2.model_validate(resp)\n        if totp_secret is None:\n            msg = \"Sign on requires TOTP verification, but no TOTP was provided.\"\n            logger.error(msg)\n            raise ValueError(msg)\n        resp = cls._v2_mfa_verify(\n            totp_secret=totp_secret,\n            auth_id=totp_resp.auth_id,\n            base_url=base_url,\n            headers=headers,\n        )\n    except ValidationError:\n        pass\n\n    return UserSignOnV2.model_validate(resp)\n</code></pre>"},{"location":"reference/settings/#pyticktick.settings.TokenV1","title":"TokenV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for the V1 API token.</p> <p>The token is a standard UUID4 string, which seems to expire after about 6 months. The expiration is a Unix timestamp in seconds, which is validated to confirm that the token has not expired.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the V1 API token.\\n\\nThe token is a standard UUID4 string, which seems to [expire after about 6 months](https://github.com/lazeroffmichael/ticktick-py/blob/9ebc0c5b09c702de8a137a05dc5b8d8803f18f48/docs/index.md?plain=1#L148).\\nThe expiration is a Unix timestamp in seconds, which is validated to confirm that\\nthe token has not expired.\",\n  \"properties\": {\n    \"value\": {\n      \"description\": \"The UUID4 string token\",\n      \"format\": \"uuid4\",\n      \"title\": \"Value\",\n      \"type\": \"string\"\n    },\n    \"expiration\": {\n      \"description\": \"The Unix timestamp in seconds when the token expires.\",\n      \"title\": \"Expiration\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"value\",\n    \"expiration\"\n  ],\n  \"title\": \"TokenV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>value</code>                 (<code>UUID4</code>)             </li> <li> <code>expiration</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>_validate_expiration</code>                 \u2192                   <code>expiration</code> </li> </ul>"},{"location":"reference/settings/#pyticktick.settings.TokenV1.expiration","title":"expiration  <code>pydantic-field</code>","text":"<pre><code>expiration: int\n</code></pre> <p>The Unix timestamp in seconds when the token expires.</p>"},{"location":"reference/settings/#pyticktick.settings.TokenV1.value","title":"value  <code>pydantic-field</code>","text":"<pre><code>value: UUID4\n</code></pre> <p>The UUID4 string token</p>"},{"location":"reference/client/v1/","title":"Client (V1)","text":"<p>This reference documentation provides a comprehensive overview of all V1 endpoint methods available in the client. To see the V2 methods, please refer to the Client (V2) reference docs.</p> <p>Note</p> <p>This attempts to follow the TickTick API Reference as closely as possible. If functionality is missing, but you expect it to be there, it may be supported in the V2 client functions.</p>"},{"location":"reference/client/v1/#pyticktick.client.Client","title":"pyticktick.client.Client","text":"<p>               Bases: <code>Settings</code></p> <p>Client class for TickTick API.</p> <p>The client class provides methods to interact with both the V1 and V2 API endpoints. This can be used to get, create, update, and delete, projects, tasks, tags, and other objects in the TickTick application.</p> Authenticating the client <p>The client class requires the user to be authenticated. The user must login to the V1 and/or V2 API endpoints before using the client class:</p> <p><pre><code>from pyticktick import Client\n\nclient = Client(\n    v1_client_id=\"client_id\",\n    v1_client_secret=\"client_secret\",\n    v1_token={\n        \"value\": \"fa371b10-8b95-442b-b4a5-11a9959d3590\",\n        \"expiration\": 1701701789,\n    },\n    v2_username=\"username\",\n    v2_password=\"password\",\n)\n</code></pre> To see more details on how to authenticate, refer to <code>pyticktick.Settings</code>. The client class inherits the <code>Settings</code> class, so all the setting configurations will be available in the client class.</p> <p>Methods:</p> Name Description <code>get_project_v1</code> <p>Get a single project from the V1 API.</p> <code>get_projects_v1</code> <p>Get all projects from the V1 API.</p> <code>get_project_with_data_v1</code> <p>Get details of a single project from the V1 API.</p> <code>create_project_v1</code> <p>Create a project in the V1 API.</p> <code>update_project_v1</code> <p>Update a project in the V1 API.</p> <code>delete_project_v1</code> <p>Delete a project in the V1 API.</p> <code>get_task_v1</code> <p>Get a single task from the V1 API.</p> <code>create_task_v1</code> <p>Create a task in the V1 API.</p> <code>update_task_v1</code> <p>Update a task in the V1 API.</p> <code>complete_task_v1</code> <p>Complete a task in the V1 API.</p> <code>delete_task_v1</code> <p>Delete a task in the V1 API.</p>"},{"location":"reference/client/v1/#pyticktick.client.Client.get_project_v1","title":"get_project_v1","text":"<pre><code>get_project_v1(project_id: str) -&gt; ProjectRespV1\n</code></pre> <p>Get a single project from the V1 API.</p> <p>This method calls the <code>GET /project/{project_id}</code> V1 endpoint, where <code>project_id</code> is the identifier of the project. It is equivalent to <code>get_projects_v1</code> followed by filtering to the project with the given <code>project_id</code>.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nproject = client.get_project_v1(\"67ec23b18f08cf38dd957e10\")\nprint(project.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67ec23b18f08cf38dd957e10\",\n    \"name\": \"Project 1\",\n    \"color\": null,\n    \"sort_order\": -3298534883328,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre></p> <p>Args:     project_id (str): Identifier of the project to retrieve.</p> <p>Returns:</p> Name Type Description <code>ProjectRespV1</code> <code>ProjectRespV1</code> <p>Project object containing project details.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_project_v1(self, project_id: str) -&gt; ProjectRespV1:\n    \"\"\"Get a single project from the V1 API.\n\n    This method calls the [`GET /project/{project_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=get-project-by-id)\n    V1 endpoint, where `project_id` is the identifier of the project. It is\n    equivalent to `get_projects_v1` followed by filtering to the project with the\n    given `project_id`.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        project = client.get_project_v1(\"67ec23b18f08cf38dd957e10\")\n        print(project.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67ec23b18f08cf38dd957e10\",\n            \"name\": \"Project 1\",\n            \"color\": null,\n            \"sort_order\": -3298534883328,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        ```\n    Args:\n        project_id (str): Identifier of the project to retrieve.\n\n    Returns:\n        ProjectRespV1: Project object containing project details.\n    \"\"\"\n    resp = self._get_api_v1(f\"/project/{project_id}\")\n    return ProjectRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.get_projects_v1","title":"get_projects_v1","text":"<pre><code>get_projects_v1() -&gt; ProjectsRespV1\n</code></pre> <p>Get all projects from the V1 API.</p> <p>This method gets all the active projects from the <code>GET /project</code> V1 endpoint.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nprojects = client.get_projects_v1()\nfor project in projects:\n    print(project.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67ec23b18f08cf38dd957e10\",\n    \"name\": \"Project 1\",\n    \"color\": null,\n    \"sort_order\": -3298534883328,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n{\n    \"id\": \"67ec23b68f08cf38dd957ece\",\n    \"name\": \"Project 2\",\n    \"color\": null,\n    \"sort_order\": -2199023255552,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n{\n    \"id\": \"67ec23c28f08cf38dd957ff1\",\n    \"name\": \"Project 3\",\n    \"color\": null,\n    \"sort_order\": -1649267441664,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre></p> <p>Returns:</p> Name Type Description <code>ProjectsRespV1</code> <code>ProjectsRespV1</code> <p>List of projects from the V1 API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_projects_v1(self) -&gt; ProjectsRespV1:\n    \"\"\"Get all projects from the V1 API.\n\n    This method gets all the active projects from the [`GET /project`](https://developer.ticktick.com/docs/index.html#/openapi?id=get-user-project)\n    V1 endpoint.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        projects = client.get_projects_v1()\n        for project in projects:\n            print(project.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67ec23b18f08cf38dd957e10\",\n            \"name\": \"Project 1\",\n            \"color\": null,\n            \"sort_order\": -3298534883328,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        {\n            \"id\": \"67ec23b68f08cf38dd957ece\",\n            \"name\": \"Project 2\",\n            \"color\": null,\n            \"sort_order\": -2199023255552,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        {\n            \"id\": \"67ec23c28f08cf38dd957ff1\",\n            \"name\": \"Project 3\",\n            \"color\": null,\n            \"sort_order\": -1649267441664,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        ```\n\n    Returns:\n        ProjectsRespV1: List of projects from the V1 API.\n    \"\"\"\n    resp = self._get_api_v1(\"/project\")\n    return ProjectsRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.get_project_with_data_v1","title":"get_project_with_data_v1","text":"<pre><code>get_project_with_data_v1(\n    project_id: str,\n) -&gt; ProjectDataRespV1\n</code></pre> <p>Get details of a single project from the V1 API.</p> <p>This method calls the <code>GET /project/{project_id}/data</code> V1 endpoint, where <code>project_id</code> is the identifier of the project. It provides a superset of the information available in <code>get_project_v1</code>.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nproject_data = client.get_project_with_data_v1(\"67ec23b18f08cf38dd957e10\")\nprint(project_data.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"project\": {\n        \"id\": \"67ec23b18f08cf38dd957e10\",\n        \"name\": \"Project 1\",\n        \"color\": null,\n        \"sort_order\": -3298534883328,\n        \"closed\": null,\n        \"group_id\": null,\n        \"view_mode\": \"list\",\n        \"permission\": null,\n        \"kind\": \"TASK\"\n    },\n    \"tasks\": [\n        {\n            \"id\": \"67ec273212e1101e875f078b\",\n            \"project_id\": \"67ec23b18f08cf38dd957e10\",\n            \"title\": \"Task 1\",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"\",\n            \"desc\": null,\n            \"due_date\": null,\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -4398046511104,\n            \"start_date\": null,\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"etag\": \"k9r8mw9b\",\n            \"kind\": \"TEXT\"\n        },\n        {\n            \"id\": \"67ec273412e1101e875f0791\",\n            \"project_id\": \"67ec23b18f08cf38dd957e10\",\n            \"title\": \"Task 2 \",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"\",\n            \"desc\": null,\n            \"due_date\": null,\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -2199023255552,\n            \"start_date\": null,\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"etag\": \"1q51czxo\",\n            \"kind\": \"TEXT\"\n        },\n        {\n            \"id\": \"67ec273a12e1101e875f079e\",\n            \"project_id\": \"67ec23b18f08cf38dd957e10\",\n            \"title\": \"Task 3\",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"\",\n            \"desc\": null,\n            \"due_date\": null,\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -1099511627776,\n            \"start_date\": null,\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"etag\": \"pan652fb\",\n            \"kind\": \"TEXT\"\n        }\n    ],\n    \"columns\": []\n}\n</code></pre></p> <p>Args:     project_id (str): Identifier of the project to retrieve.</p> <p>Returns:</p> Name Type Description <code>ProjectDataRespV1</code> <code>ProjectDataRespV1</code> <p>Project data object containing project and task details.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_project_with_data_v1(self, project_id: str) -&gt; ProjectDataRespV1:\n    \"\"\"Get details of a single project from the V1 API.\n\n    This method calls the [`GET /project/{project_id}/data`](https://developer.ticktick.com/docs/index.html#/openapi?id=get-project-with-data)\n    V1 endpoint, where `project_id` is the identifier of the project. It provides a\n    superset of the information available in `get_project_v1`.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        project_data = client.get_project_with_data_v1(\"67ec23b18f08cf38dd957e10\")\n        print(project_data.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"project\": {\n                \"id\": \"67ec23b18f08cf38dd957e10\",\n                \"name\": \"Project 1\",\n                \"color\": null,\n                \"sort_order\": -3298534883328,\n                \"closed\": null,\n                \"group_id\": null,\n                \"view_mode\": \"list\",\n                \"permission\": null,\n                \"kind\": \"TASK\"\n            },\n            \"tasks\": [\n                {\n                    \"id\": \"67ec273212e1101e875f078b\",\n                    \"project_id\": \"67ec23b18f08cf38dd957e10\",\n                    \"title\": \"Task 1\",\n                    \"is_all_day\": false,\n                    \"completed_time\": null,\n                    \"content\": \"\",\n                    \"desc\": null,\n                    \"due_date\": null,\n                    \"items\": null,\n                    \"priority\": 0,\n                    \"reminders\": null,\n                    \"repeat_flag\": null,\n                    \"sort_order\": -4398046511104,\n                    \"start_date\": null,\n                    \"status\": false,\n                    \"time_zone\": \"America/Chicago\",\n                    \"etag\": \"k9r8mw9b\",\n                    \"kind\": \"TEXT\"\n                },\n                {\n                    \"id\": \"67ec273412e1101e875f0791\",\n                    \"project_id\": \"67ec23b18f08cf38dd957e10\",\n                    \"title\": \"Task 2 \",\n                    \"is_all_day\": false,\n                    \"completed_time\": null,\n                    \"content\": \"\",\n                    \"desc\": null,\n                    \"due_date\": null,\n                    \"items\": null,\n                    \"priority\": 0,\n                    \"reminders\": null,\n                    \"repeat_flag\": null,\n                    \"sort_order\": -2199023255552,\n                    \"start_date\": null,\n                    \"status\": false,\n                    \"time_zone\": \"America/Chicago\",\n                    \"etag\": \"1q51czxo\",\n                    \"kind\": \"TEXT\"\n                },\n                {\n                    \"id\": \"67ec273a12e1101e875f079e\",\n                    \"project_id\": \"67ec23b18f08cf38dd957e10\",\n                    \"title\": \"Task 3\",\n                    \"is_all_day\": false,\n                    \"completed_time\": null,\n                    \"content\": \"\",\n                    \"desc\": null,\n                    \"due_date\": null,\n                    \"items\": null,\n                    \"priority\": 0,\n                    \"reminders\": null,\n                    \"repeat_flag\": null,\n                    \"sort_order\": -1099511627776,\n                    \"start_date\": null,\n                    \"status\": false,\n                    \"time_zone\": \"America/Chicago\",\n                    \"etag\": \"pan652fb\",\n                    \"kind\": \"TEXT\"\n                }\n            ],\n            \"columns\": []\n        }\n        ```\n    Args:\n        project_id (str): Identifier of the project to retrieve.\n\n    Returns:\n        ProjectDataRespV1: Project data object containing project and task details.\n    \"\"\"\n    resp = self._get_api_v1(f\"/project/{project_id}/data\")\n    return ProjectDataRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.create_project_v1","title":"create_project_v1","text":"<pre><code>create_project_v1(\n    data: Union[CreateProjectV1, dict[str, Any]],\n) -&gt; ProjectRespV1\n</code></pre> <p>Create a project in the V1 API.</p> <p>This method creates a new project in the TickTick application using the <code>POST /project</code> V1 endpoint. The <code>data</code> parameter can be a <code>CreateProjectV1</code> model or a dictionary that matches the same structure. The method returns the created project as a <code>ProjectV1</code> model.</p> Example <pre><code>from pyticktick import Client\nfrom pyticktick.models.v1 import CreateProjectV1\n\nclient = Client()\nproject = client.create_project_v1(\n    data=CreateProjectV1(\n        name=\"Test Project\",\n        color=\"#002fa7\",\n        sort_order=50,\n        view_mode=\"list\",\n        kind=\"TASK\",\n    ),\n)\nprint(project.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67ec9d148f08723133663fd1\",\n    \"name\": \"Test Project\",\n    \"color\": \"#002fa7\",\n    \"sort_order\": 50,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[CreateProjectV1, dict[str, Any]]</code> <p>Data to create the project.</p> required <p>Returns:</p> Name Type Description <code>ProjectRespV1</code> <code>ProjectRespV1</code> <p>Created project.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def create_project_v1(\n    self,\n    data: Union[CreateProjectV1, dict[str, Any]],\n) -&gt; ProjectRespV1:\n    \"\"\"Create a project in the V1 API.\n\n    This method creates a new project in the TickTick application using the\n    [`POST /project`](https://developer.ticktick.com/docs/index.html#/openapi?id=create-project)\n    V1 endpoint. The `data` parameter can be a `CreateProjectV1` model or a\n    dictionary that matches the same structure. The method returns the created\n    project as a `ProjectV1` model.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v1 import CreateProjectV1\n\n        client = Client()\n        project = client.create_project_v1(\n            data=CreateProjectV1(\n                name=\"Test Project\",\n                color=\"#002fa7\",\n                sort_order=50,\n                view_mode=\"list\",\n                kind=\"TASK\",\n            ),\n        )\n        print(project.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67ec9d148f08723133663fd1\",\n            \"name\": \"Test Project\",\n            \"color\": \"#002fa7\",\n            \"sort_order\": 50,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        ```\n\n    Args:\n        data (Union[CreateProjectV1, dict[str, Any]]): Data to create the project.\n\n    Returns:\n        ProjectRespV1: Created project.\n    \"\"\"\n    if isinstance(data, dict):\n        data = CreateProjectV1.model_validate(data)\n    resp = self._post_api_v1(\"/project\", data=self._model_dump(data))\n    return ProjectRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.update_project_v1","title":"update_project_v1","text":"<pre><code>update_project_v1(\n    project_id: str,\n    data: Union[UpdateProjectV1, dict[str, Any]],\n) -&gt; ProjectRespV1\n</code></pre> <p>Update a project in the V1 API.</p> <p>This method updates an existing project in the TickTick application using the <code>POST /project/{project_id}</code> V1 endpoint. The <code>data</code> parameter can be an <code>UpdateProjectV1</code> model or a dictionary that matches the same structure. The method returns the updated project as a <code>ProjectV1</code> model.</p> Example <pre><code>from pyticktick import Client\nfrom pyticktick.models.v1 import UpdateProjectV1\n\nclient = Client()\nproject = client.update_project_v1(\n    project_id=\"67ec9d148f08723133663fd1\",\n    data=UpdateProjectV1(\n        name=\"Updated Project\",\n        color=\"#ee6c4d\",\n        sort_order=100,\n        view_mode=\"list\",\n        kind=\"TASK\",\n    ),\n)\nprint(project.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67ec9d148f08723133663fd1\",\n    \"name\": \"Updated Project\",\n    \"color\": \"#ee6c4d\",\n    \"sort_order\": 100,\n    \"closed\": null,\n    \"group_id\": null,\n    \"view_mode\": \"list\",\n    \"permission\": null,\n    \"kind\": \"TASK\"\n}\n</code></pre></p> <p>Args:     project_id (str): Identifier of the project to update.     data (Union[UpdateProjectV1, dict[str, Any]]): Data to update the project.</p> <p>Returns:</p> Name Type Description <code>ProjectRespV1</code> <code>ProjectRespV1</code> <p>Updated project.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def update_project_v1(\n    self,\n    project_id: str,\n    data: Union[UpdateProjectV1, dict[str, Any]],\n) -&gt; ProjectRespV1:\n    \"\"\"Update a project in the V1 API.\n\n    This method updates an existing project in the TickTick application using the\n    [`POST /project/{project_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=update-project)\n    V1 endpoint. The `data` parameter can be an `UpdateProjectV1` model or a\n    dictionary that matches the same structure. The method returns the updated\n    project as a `ProjectV1` model.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v1 import UpdateProjectV1\n\n        client = Client()\n        project = client.update_project_v1(\n            project_id=\"67ec9d148f08723133663fd1\",\n            data=UpdateProjectV1(\n                name=\"Updated Project\",\n                color=\"#ee6c4d\",\n                sort_order=100,\n                view_mode=\"list\",\n                kind=\"TASK\",\n            ),\n        )\n        print(project.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67ec9d148f08723133663fd1\",\n            \"name\": \"Updated Project\",\n            \"color\": \"#ee6c4d\",\n            \"sort_order\": 100,\n            \"closed\": null,\n            \"group_id\": null,\n            \"view_mode\": \"list\",\n            \"permission\": null,\n            \"kind\": \"TASK\"\n        }\n        ```\n    Args:\n        project_id (str): Identifier of the project to update.\n        data (Union[UpdateProjectV1, dict[str, Any]]): Data to update the project.\n\n    Returns:\n        ProjectRespV1: Updated project.\n    \"\"\"\n    if isinstance(data, dict):\n        data = UpdateProjectV1.model_validate(data)\n    resp = self._post_api_v1(f\"/project/{project_id}\", data=self._model_dump(data))\n    return ProjectRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.delete_project_v1","title":"delete_project_v1","text":"<pre><code>delete_project_v1(project_id: str) -&gt; None\n</code></pre> <p>Delete a project in the V1 API.</p> <p>This method deletes an existing project in the TickTick application using the <code>DELETE /project/{project_id}</code> V1 endpoint. The <code>project_id</code> parameter is the identifier of the project to delete.</p> Example <p><pre><code>from pyticktick import Client\n\nclient = Client()\nclient.delete_project_v1(\"67ec9d148f08723133663fd1\")\n</code></pre> This will return nothing if the project is successfully deleted.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>Identifier of the project to delete.</p> required Source code in <code>src/pyticktick/client.py</code> <pre><code>def delete_project_v1(self, project_id: str) -&gt; None:\n    \"\"\"Delete a project in the V1 API.\n\n    This method deletes an existing project in the TickTick application using the\n    [`DELETE /project/{project_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=delete-project)\n    V1 endpoint. The `project_id` parameter is the identifier of the project to\n    delete.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        client.delete_project_v1(\"67ec9d148f08723133663fd1\")\n        ```\n        This will return nothing if the project is successfully deleted.\n\n    Args:\n        project_id (str): Identifier of the project to delete.\n    \"\"\"\n    self._delete_api_v1(f\"/project/{project_id}\")\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.get_task_v1","title":"get_task_v1","text":"<pre><code>get_task_v1(project_id: str, task_id: str) -&gt; TaskRespV1\n</code></pre> <p>Get a single task from the V1 API.</p> <p>This method calls the <code>GET /project/{project_id}/task/{task_id}</code> V1 endpoint, where <code>project_id</code> and <code>task_id</code> are the identifiers of the project and task, respectively.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\ntask = client.get_task_v1(\n    project_id=\"67ec23b18f08cf38dd957e10\",\n    task_id=\"67ec273212e1101e875f078b\",\n)\nprint(task.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67ec273212e1101e875f078b\",\n    \"project_id\": \"67ec23b18f08cf38dd957e10\",\n    \"title\": \"Task 1\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"\",\n    \"desc\": null,\n    \"due_date\": null,\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": -4398046511104,\n    \"start_date\": null,\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\",\n    \"etag\": \"k9r8mw9b\",\n    \"kind\": \"TEXT\"\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>Identifier of the project containing the task.</p> required <code>task_id</code> <code>str</code> <p>Identifier of the task to retrieve.</p> required <p>Returns:</p> Name Type Description <code>TaskRespV1</code> <code>TaskRespV1</code> <p>The task object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_task_v1(self, project_id: str, task_id: str) -&gt; TaskRespV1:\n    \"\"\"Get a single task from the V1 API.\n\n    This method calls the [`GET /project/{project_id}/task/{task_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=get-task-by-project-id-and-task-id)\n    V1 endpoint, where `project_id` and `task_id` are the identifiers of the\n    project and task, respectively.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        task = client.get_task_v1(\n            project_id=\"67ec23b18f08cf38dd957e10\",\n            task_id=\"67ec273212e1101e875f078b\",\n        )\n        print(task.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67ec273212e1101e875f078b\",\n            \"project_id\": \"67ec23b18f08cf38dd957e10\",\n            \"title\": \"Task 1\",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"\",\n            \"desc\": null,\n            \"due_date\": null,\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -4398046511104,\n            \"start_date\": null,\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"etag\": \"k9r8mw9b\",\n            \"kind\": \"TEXT\"\n        }\n        ```\n\n    Args:\n        project_id (str): Identifier of the project containing the task.\n        task_id (str): Identifier of the task to retrieve.\n\n    Returns:\n        TaskRespV1: The task object retrieved from the API.\n    \"\"\"\n    resp = self._get_api_v1(f\"/project/{project_id}/task/{task_id}\")\n    return TaskRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.create_task_v1","title":"create_task_v1","text":"<pre><code>create_task_v1(\n    data: Union[CreateTaskV1, dict[str, Any]],\n) -&gt; TaskRespV1\n</code></pre> <p>Create a task in the V1 API.</p> <p>This method creates a new task in the TickTick application using the <code>POST /task</code> V1 endpoint. The <code>data</code> parameter can be a <code>CreateTaskV1</code> model or a dictionary that matches the same structure. The method returns the created task as a <code>TaskRespV1</code> model.</p> Example <pre><code>from pyticktick import Client\nfrom pyticktick.models.v1 import CreateTaskV1\n\nclient = Client()\ntask = client.create_task_v1(\n    data=CreateTaskV1(\n        project_id=\"67eca3918f08e7c706354740\",\n        title=\"Test Task\",\n        content=\"This is a test task.\",\n        start_date=\"2025-11-13T03:00:00+0000\",\n        due_date=\"2025-11-14T03:00:00+0000\",\n    ),\n)\nprint(task.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67eca3b78f08cf38dda26ca4\",\n    \"project_id\": \"67eca3918f08e7c706354740\",\n    \"title\": \"Test Task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"This is a test task.\",\n    \"desc\": null,\n    \"due_date\": \"2025-11-14T03:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2025-11-14T03:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\",\n    \"tags\": [],\n    \"etag\": \"8yp4pfmh\",\n    \"kind\": \"TEXT\"\n}\n</code></pre></p> <p>Args:     data (Union[CreateTaskV1, dict[str, Any]]): Data to create the task.</p> <p>Returns:</p> Name Type Description <code>TaskRespV1</code> <code>TaskRespV1</code> <p>Created task object.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def create_task_v1(self, data: Union[CreateTaskV1, dict[str, Any]]) -&gt; TaskRespV1:\n    \"\"\"Create a task in the V1 API.\n\n    This method creates a new task in the TickTick application using the [`POST /task`](https://developer.ticktick.com/docs/index.html#/openapi?id=create-task)\n    V1 endpoint. The `data` parameter can be a `CreateTaskV1` model or a dictionary\n    that matches the same structure. The method returns the created task as a\n    `TaskRespV1` model.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v1 import CreateTaskV1\n\n        client = Client()\n        task = client.create_task_v1(\n            data=CreateTaskV1(\n                project_id=\"67eca3918f08e7c706354740\",\n                title=\"Test Task\",\n                content=\"This is a test task.\",\n                start_date=\"2025-11-13T03:00:00+0000\",\n                due_date=\"2025-11-14T03:00:00+0000\",\n            ),\n        )\n        print(task.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67eca3b78f08cf38dda26ca4\",\n            \"project_id\": \"67eca3918f08e7c706354740\",\n            \"title\": \"Test Task\",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"This is a test task.\",\n            \"desc\": null,\n            \"due_date\": \"2025-11-14T03:00:00.000+0000\",\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -1099511627776,\n            \"start_date\": \"2025-11-14T03:00:00.000+0000\",\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"tags\": [],\n            \"etag\": \"8yp4pfmh\",\n            \"kind\": \"TEXT\"\n        }\n        ```\n    Args:\n        data (Union[CreateTaskV1, dict[str, Any]]): Data to create the task.\n\n    Returns:\n        TaskRespV1: Created task object.\n    \"\"\"\n    if isinstance(data, dict):\n        data = CreateTaskV1.model_validate(data)\n    resp = self._post_api_v1(\"/task\", self._model_dump(data))\n    return TaskRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.update_task_v1","title":"update_task_v1","text":"<pre><code>update_task_v1(\n    task_id: str, data: Union[UpdateTaskV1, dict[str, Any]]\n) -&gt; TaskRespV1\n</code></pre> <p>Update a task in the V1 API.</p> <p>This method updates an existing task in the TickTick application using the <code>POST /task/{task_id}</code> V1 endpoint. The <code>data</code> parameter can be an <code>UpdateTaskV1</code> model or a dictionary that matches the same structure. The method returns the updated task as a <code>TaskRespV1</code> model.</p> Example <pre><code>from pyticktick import Client\nfrom pyticktick.models.v1 import UpdateTaskV1\n\nclient = Client()\ntask = client.update_task_v1(\n    task_id=\"67eca3b78f08cf38dda26ca4\",\n    data=UpdateTaskV1(\n        id=\"67eca3b78f08cf38dda26ca4\",\n        project_id=\"67eca3918f08e7c706354740\",\n        title=\"Updated test task\",\n        content=\"This is a test task that has been updated.\",\n        start_date=\"2026-03-13T03:00:00+0000\",\n        due_date=\"2026-03-14T03:00:00+0000\",\n    ),\n)\nprint(task.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id\": \"67eca3b78f08cf38dda26ca4\",\n    \"project_id\": \"67eca3918f08e7c706354740\",\n    \"title\": \"Updated test task\",\n    \"is_all_day\": false,\n    \"completed_time\": null,\n    \"content\": \"This is a test task that has been updated.\",\n    \"desc\": null,\n    \"due_date\": \"2026-03-14T03:00:00.000+0000\",\n    \"items\": null,\n    \"priority\": 0,\n    \"reminders\": null,\n    \"repeat_flag\": null,\n    \"sort_order\": -1099511627776,\n    \"start_date\": \"2026-03-14T03:00:00.000+0000\",\n    \"status\": false,\n    \"time_zone\": \"America/Chicago\",\n    \"etag\": \"3x4xgnmn\",\n    \"kind\": \"TEXT\"\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>task_id</code> <code>str</code> <p>Identifier of the task to update.</p> required <code>data</code> <code>Union[UpdateTaskV1, dict[str, Any]]</code> <p>Data to update the task.</p> required <p>Returns:</p> Name Type Description <code>TaskRespV1</code> <code>TaskRespV1</code> <p>Updated task.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def update_task_v1(\n    self,\n    task_id: str,\n    data: Union[UpdateTaskV1, dict[str, Any]],\n) -&gt; TaskRespV1:\n    \"\"\"Update a task in the V1 API.\n\n    This method updates an existing task in the TickTick application using the\n    [`POST /task/{task_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=update-task)\n    V1 endpoint. The `data` parameter can be an `UpdateTaskV1` model or a dictionary\n    that matches the same structure. The method returns the updated task as a\n    `TaskRespV1` model.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v1 import UpdateTaskV1\n\n        client = Client()\n        task = client.update_task_v1(\n            task_id=\"67eca3b78f08cf38dda26ca4\",\n            data=UpdateTaskV1(\n                id=\"67eca3b78f08cf38dda26ca4\",\n                project_id=\"67eca3918f08e7c706354740\",\n                title=\"Updated test task\",\n                content=\"This is a test task that has been updated.\",\n                start_date=\"2026-03-13T03:00:00+0000\",\n                due_date=\"2026-03-14T03:00:00+0000\",\n            ),\n        )\n        print(task.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id\": \"67eca3b78f08cf38dda26ca4\",\n            \"project_id\": \"67eca3918f08e7c706354740\",\n            \"title\": \"Updated test task\",\n            \"is_all_day\": false,\n            \"completed_time\": null,\n            \"content\": \"This is a test task that has been updated.\",\n            \"desc\": null,\n            \"due_date\": \"2026-03-14T03:00:00.000+0000\",\n            \"items\": null,\n            \"priority\": 0,\n            \"reminders\": null,\n            \"repeat_flag\": null,\n            \"sort_order\": -1099511627776,\n            \"start_date\": \"2026-03-14T03:00:00.000+0000\",\n            \"status\": false,\n            \"time_zone\": \"America/Chicago\",\n            \"etag\": \"3x4xgnmn\",\n            \"kind\": \"TEXT\"\n        }\n        ```\n\n    Args:\n        task_id (str): Identifier of the task to update.\n        data (Union[UpdateTaskV1, dict[str, Any]]): Data to update the task.\n\n    Returns:\n        TaskRespV1: Updated task.\n    \"\"\"\n    if isinstance(data, dict):\n        data = UpdateTaskV1.model_validate(data)\n    resp = self._post_api_v1(f\"/task/{task_id}\", self._model_dump(data))\n    return TaskRespV1.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.complete_task_v1","title":"complete_task_v1","text":"<pre><code>complete_task_v1(project_id: str, task_id: str) -&gt; None\n</code></pre> <p>Complete a task in the V1 API.</p> <p>This method marks a task as completed in the TickTick application using the <code>POST /project/{project_id}/task/{task_id}/complete</code> V1 endpoint. The <code>project_id</code> and <code>task_id</code> parameters are the identifiers of the project and task to complete.</p> Example <p><pre><code>from pyticktick import Client\n\nclient = Client()\nclient.complete_task_v1(\n    project_id=\"67eca3918f08e7c706354740\",\n    task_id=\"67eca3b78f08cf38dda26ca4\",\n)\n</code></pre> This will return nothing if the task is successfully completed.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>Identifier of the project containing the task.</p> required <code>task_id</code> <code>str</code> <p>Identifier of the task to complete.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If there is an error in HTTP request or response, except when the response content is empty.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def complete_task_v1(self, project_id: str, task_id: str) -&gt; None:\n    \"\"\"Complete a task in the V1 API.\n\n    This method marks a task as completed in the TickTick application using the\n    [`POST /project/{project_id}/task/{task_id}/complete`](https://developer.ticktick.com/docs/index.html#/openapi?id=complete-task)\n    V1 endpoint. The `project_id` and `task_id` parameters are the identifiers of\n    the project and task to complete.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        client.complete_task_v1(\n            project_id=\"67eca3918f08e7c706354740\",\n            task_id=\"67eca3b78f08cf38dda26ca4\",\n        )\n        ```\n        This will return nothing if the task is successfully completed.\n\n    Args:\n        project_id (str): Identifier of the project containing the task.\n        task_id (str): Identifier of the task to complete.\n\n    Raises:\n        ValueError: If there is an error in HTTP request or response, except when\n            the response content is empty.\n    \"\"\"\n    try:\n        self._post_api_v1(f\"/project/{project_id}/task/{task_id}/complete\")\n    except ValueError as e:\n        if \"Response content is empty\" in str(e):\n            return\n        raise\n</code></pre>"},{"location":"reference/client/v1/#pyticktick.client.Client.delete_task_v1","title":"delete_task_v1","text":"<pre><code>delete_task_v1(project_id: str, task_id: str) -&gt; None\n</code></pre> <p>Delete a task in the V1 API.</p> <p>This method deletes an existing task in the TickTick application using the <code>DELETE /project/{project_id}/task/{task_id}</code> V1 endpoint. The <code>project_id</code> and <code>task_id</code> parameters are the identifiers of the project and task to delete.</p> Example <p><pre><code>from pyticktick import Client\n\nclient = Client()\nclient.delete_task_v1(\n    project_id=\"67eca3918f08e7c706354740\",\n    task_id=\"67eca3b78f08cf38dda26ca4\",\n)\n</code></pre> This will return nothing if the task is successfully deleted.</p> <p>Parameters:</p> Name Type Description Default <code>project_id</code> <code>str</code> <p>Identifier of the project containing the task.</p> required <code>task_id</code> <code>str</code> <p>Identifier of the task to delete.</p> required Source code in <code>src/pyticktick/client.py</code> <pre><code>def delete_task_v1(self, project_id: str, task_id: str) -&gt; None:\n    \"\"\"Delete a task in the V1 API.\n\n    This method deletes an existing task in the TickTick application using the\n    [`DELETE /project/{project_id}/task/{task_id}`](https://developer.ticktick.com/docs/index.html#/openapi?id=delete-task)\n    V1 endpoint. The `project_id` and `task_id` parameters are the identifiers of\n    the project and task to delete.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        client.delete_task_v1(\n            project_id=\"67eca3918f08e7c706354740\",\n            task_id=\"67eca3b78f08cf38dda26ca4\",\n        )\n        ```\n        This will return nothing if the task is successfully deleted.\n\n    Args:\n        project_id (str): Identifier of the project containing the task.\n        task_id (str): Identifier of the task to delete.\n    \"\"\"\n    self._delete_api_v1(f\"/project/{project_id}/task/{task_id}\")\n</code></pre>"},{"location":"reference/client/v2/","title":"Client (V2)","text":"<p>This reference documentation provides a comprehensive overview of all V2 endpoint methods available in the client. To see the V1 methods, please refer to the Client (V1) reference docs.</p> <p>Unofficial API</p> <p>This client accesses an unofficial TickTick API. It was created by reverse engineering the API. It may be incomplete or inaccurate. Use at your own risk.</p>"},{"location":"reference/client/v2/#pyticktick.client.Client","title":"pyticktick.client.Client","text":"<p>               Bases: <code>Settings</code></p> <p>Client class for TickTick API.</p> <p>The client class provides methods to interact with both the V1 and V2 API endpoints. This can be used to get, create, update, and delete, projects, tasks, tags, and other objects in the TickTick application.</p> Authenticating the client <p>The client class requires the user to be authenticated. The user must login to the V1 and/or V2 API endpoints before using the client class:</p> <p><pre><code>from pyticktick import Client\n\nclient = Client(\n    v1_client_id=\"client_id\",\n    v1_client_secret=\"client_secret\",\n    v1_token={\n        \"value\": \"fa371b10-8b95-442b-b4a5-11a9959d3590\",\n        \"expiration\": 1701701789,\n    },\n    v2_username=\"username\",\n    v2_password=\"password\",\n)\n</code></pre> To see more details on how to authenticate, refer to <code>pyticktick.Settings</code>. The client class inherits the <code>Settings</code> class, so all the setting configurations will be available in the client class.</p> <p>Methods:</p> Name Description <code>get_batch_v2</code> <p>Get all active objects for the current user from the V2 API.</p> <code>get_project_all_closed_v2</code> <p>Get all completed or abandoned tasks from the V2 API.</p> <code>post_project_v2</code> <p>Create, update, or delete projects in bulk against the V2 API.</p> <code>post_task_v2</code> <p>Create, update, or delete tasks in bulk against the V2 API.</p> <code>post_project_group_v2</code> <p>Create, update, or delete project groups in bulk against the V2 API.</p> <code>post_task_parent_v2</code> <p>Set or unset a task parent in bulk against the V2 API.</p> <code>post_tag_v2</code> <p>Create or update tags in bulk against the V2 API.</p> <code>put_rename_tag_v2</code> <p>Rename a tag in the V2 API.</p> <code>delete_tag_v2</code> <p>Delete a tag in the V2 API.</p> <code>get_profile_v2</code> <p>Get the user profile from the V2 API.</p> <code>get_status_v2</code> <p>Get the user status from the V2 API.</p> <code>get_statistics_v2</code> <p>Get user statistics from the V2 API.</p>"},{"location":"reference/client/v2/#pyticktick.client.Client.get_batch_v2","title":"get_batch_v2","text":"<pre><code>get_batch_v2() -&gt; GetBatchV2\n</code></pre> <p>Get all active objects for the current user from the V2 API.</p> <p>This method gets the status of all objects for the current user from the <code>GET /batch/check/0</code> V2 endpoint. This endpoint provides information about the status of all active objects, including projects, tasks, etc. The structure of the response is a little confusing. It seems like it was designed to be used as an Entity Bean, making it easy to sync back to TickTick.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nbatch = client.get_batch_v2()\nprint(batch.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"inbox_id\": \"inbox213928392\",\n    \"project_groups\": [...],\n    \"project_profiles\": [...],\n    \"sync_task_bean\": {\n        \"update\": [...],\n        \"add\": [],\n        \"delete\": [],\n        \"empty\": false,\n        \"tag_update\": []\n    },\n    \"tags\": [...],\n    \"check_point\": 2658743443697,\n    \"checks\": null,\n    \"filters\": [...],\n    \"sync_order_bean\": {\n        \"orderByType\": {}\n    },\n    \"sync_order_bean_v3\": {\n        \"order_by_type\": {\n        \"taskBy#dueDate|20250224_dueDate\": {\n            \"all\": {\n            \"changed\": [...],\n            \"deleted\": []\n            }\n        },\n        \"taskBy#dueDate|20250109_dueDate\": {\n            \"all\": {\n            \"changed\": [],\n            \"deleted\": [...]\n            }\n        }\n        }\n    },\n    \"sync_task_order_bean\": {\n        \"task_order_by_date\": {},\n        \"task_order_by_priority\": {},\n        \"task_order_by_project\": {}\n    },\n    \"remind_changes\": []\n}\n</code></pre> This response is so large, that it was trimmed down significantly. Anywhere you see <code>...</code>, it means there should have been more data.</p> <p>Returns:</p> Name Type Description <code>GetBatchV2</code> <code>GetBatchV2</code> <p>The batch object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_batch_v2(self) -&gt; GetBatchV2:\n    \"\"\"Get all active objects for the current user from the V2 API.\n\n    This method gets the status of all objects for the current user from the\n    `GET /batch/check/0` V2 endpoint. This endpoint provides information about\n    the status of all active objects, including projects, tasks, etc. The structure\n    of the response is a little confusing. It seems like it was designed to be used\n    as an [Entity Bean](https://en.wikipedia.org/wiki/Entity_Bean),\n    making it easy to sync back to TickTick.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        batch = client.get_batch_v2()\n        print(batch.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"inbox_id\": \"inbox213928392\",\n            \"project_groups\": [...],\n            \"project_profiles\": [...],\n            \"sync_task_bean\": {\n                \"update\": [...],\n                \"add\": [],\n                \"delete\": [],\n                \"empty\": false,\n                \"tag_update\": []\n            },\n            \"tags\": [...],\n            \"check_point\": 2658743443697,\n            \"checks\": null,\n            \"filters\": [...],\n            \"sync_order_bean\": {\n                \"orderByType\": {}\n            },\n            \"sync_order_bean_v3\": {\n                \"order_by_type\": {\n                \"taskBy#dueDate|20250224_dueDate\": {\n                    \"all\": {\n                    \"changed\": [...],\n                    \"deleted\": []\n                    }\n                },\n                \"taskBy#dueDate|20250109_dueDate\": {\n                    \"all\": {\n                    \"changed\": [],\n                    \"deleted\": [...]\n                    }\n                }\n                }\n            },\n            \"sync_task_order_bean\": {\n                \"task_order_by_date\": {},\n                \"task_order_by_priority\": {},\n                \"task_order_by_project\": {}\n            },\n            \"remind_changes\": []\n        }\n        ```\n        This response is so large, that it was trimmed down significantly. Anywhere\n        you see `...`, it means there should have been more data.\n\n    Returns:\n        GetBatchV2: The batch object retrieved from the API.\n    \"\"\"\n    resp = self._get_api_v2(\"/batch/check/0\")\n    if self.override_forbid_extra:\n        update_model_config(GetBatchV2, extra=\"allow\")\n    return GetBatchV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.get_project_all_closed_v2","title":"get_project_all_closed_v2","text":"<pre><code>get_project_all_closed_v2(\n    data: Union[GetClosedV2, dict[str, Any]],\n) -&gt; ClosedRespV2\n</code></pre> <p>Get all completed or abandoned tasks from the V2 API.</p> <p>This method gets all completed or abandoned tasks from the <code>GET /project/all/closed</code> V2 endpoint. Abandoned tasks are referred to as won't do tasks by TickTick. They have some documentation on them here.</p> Get all completed tasks <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import GetClosedV2\n\nclient = Client()\nresp = client.get_project_all_closed_v2(GetClosedV2(status=\"Completed\"))\n\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>[\n    {\n        \"child_ids\": null,\n        \"completed_time\": \"2020-04-25T15:25:22Z\",\n        \"content\": \"\",\n        \"created_time\": \"2020-03-23T15:02:17Z\",\n        \"desc\": \"\",\n        \"due_date\": \"2020-04-22T05:00:00Z\",\n        \"etag\": \"czt0y615\",\n        \"id\": \"680be962126b914e0ff59951\",\n        \"is_all_day\": true,\n        \"is_floating\": false,\n        \"items\": [],\n        \"kind\": \"TEXT\",\n        \"modified_time\": \"2025-04-15T15:15:35Z\",\n        \"parent_id\": null,\n        \"priority\": 0,\n        \"progress\": 0,\n        \"project_id\": \"inbox213928392\",\n        \"repeat_from\": 2,\n        \"reminder\": null,\n        \"reminders\": [],\n        \"repeat_flag\": null,\n        \"repeat_task_id\": \"67e022795985d10fd77abff8\",\n        \"start_date\": \"2020-04-21T05:00:00Z\",\n        \"status\": 2,\n        \"tags\": [...],\n        \"title\": \"Completed task\",\n        \"time_zone\": \"America/New_York\",\n        \"attachments\": [],\n        \"annoying_alert\": null,\n        \"column_id\": null,\n        \"comment_count\": 0,\n        \"completed_user_id\": 213928392,\n        \"creator\": 213928392,\n        \"sort_order\": -6917533425701748736\n    },\n    ...\n]\n</code></pre> You will notice that the <code>status</code> field is set to <code>2</code> for completed tasks.</p> Get all abandoned tasks <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import GetClosedV2\n\nclient = Client()\nresp = client.get_project_all_closed_v2(GetClosedV2(status=\"Abandoned\"))\n\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>[\n    {\n        \"child_ids\": null,\n        \"completed_time\": \"2025-04-15T15:15:35Z\",\n        \"content\": \"\",\n        \"created_time\": \"2025-03-23T15:02:17Z\",\n        \"desc\": \"\",\n        \"due_date\": \"2025-04-15T05:00:00Z\",\n        \"etag\": \"xkpljy8f\",\n        \"id\": \"67fe78173624110bff1cb96a\",\n        \"is_all_day\": true,\n        \"is_floating\": false,\n        \"items\": [],\n        \"kind\": \"TEXT\",\n        \"modified_time\": \"2025-04-08T15:00:26Z\",\n        \"parent_id\": null,\n        \"priority\": 0,\n        \"progress\": 0,\n        \"project_id\": \"676c6de2c447d18b6d0a8bac\",\n        \"repeat_from\": 2,\n        \"reminder\": null,\n        \"reminders\": [],\n        \"repeat_flag\": null,\n        \"repeat_task_id\": \"67e022795985d10fd77abff8\",\n        \"start_date\": \"2025-04-15T05:00:00Z\",\n        \"status\": -1,\n        \"tags\": [\"family\"],\n        \"title\": \"\u260e\ufe0f Call Mom\",\n        \"time_zone\": \"America/Chicago\",\n        \"attachments\": [],\n        \"annoying_alert\": null,\n        \"column_id\": null,\n        \"comment_count\": 0,\n        \"completed_user_id\": 125986193,\n        \"creator\": 125986193,\n        \"sort_order\": -6917533425701748736\n    }\n]\n</code></pre> You will notice that the <code>status</code> field is set to <code>-1</code> for abandoned tasks.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[GetClosedV2, dict[str, Any]]</code> <p>Data to get the completed / abandoned tasks.</p> required <p>Returns:</p> Name Type Description <code>ClosedRespV2</code> <code>ClosedRespV2</code> <p>The completed / abandoned tasks object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_project_all_closed_v2(\n    self,\n    data: Union[GetClosedV2, dict[str, Any]],\n) -&gt; ClosedRespV2:\n    \"\"\"Get all completed or abandoned tasks from the V2 API.\n\n    This method gets all completed or abandoned tasks from the\n    `GET /project/all/closed` V2 endpoint. Abandoned tasks are referred to as\n    _won't do_ tasks by TickTick. They have some documentation on them [here](https://help.ticktick.com/articles/7055782408586526720#won't-do).\n\n    ??? example \"Get all completed tasks\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import GetClosedV2\n\n        client = Client()\n        resp = client.get_project_all_closed_v2(GetClosedV2(status=\"Completed\"))\n\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        [\n            {\n                \"child_ids\": null,\n                \"completed_time\": \"2020-04-25T15:25:22Z\",\n                \"content\": \"\",\n                \"created_time\": \"2020-03-23T15:02:17Z\",\n                \"desc\": \"\",\n                \"due_date\": \"2020-04-22T05:00:00Z\",\n                \"etag\": \"czt0y615\",\n                \"id\": \"680be962126b914e0ff59951\",\n                \"is_all_day\": true,\n                \"is_floating\": false,\n                \"items\": [],\n                \"kind\": \"TEXT\",\n                \"modified_time\": \"2025-04-15T15:15:35Z\",\n                \"parent_id\": null,\n                \"priority\": 0,\n                \"progress\": 0,\n                \"project_id\": \"inbox213928392\",\n                \"repeat_from\": 2,\n                \"reminder\": null,\n                \"reminders\": [],\n                \"repeat_flag\": null,\n                \"repeat_task_id\": \"67e022795985d10fd77abff8\",\n                \"start_date\": \"2020-04-21T05:00:00Z\",\n                \"status\": 2,\n                \"tags\": [...],\n                \"title\": \"Completed task\",\n                \"time_zone\": \"America/New_York\",\n                \"attachments\": [],\n                \"annoying_alert\": null,\n                \"column_id\": null,\n                \"comment_count\": 0,\n                \"completed_user_id\": 213928392,\n                \"creator\": 213928392,\n                \"sort_order\": -6917533425701748736\n            },\n            ...\n        ]\n        ```\n        You will notice that the `status` field is set to `2` for completed tasks.\n\n    ??? example \"Get all abandoned tasks\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import GetClosedV2\n\n        client = Client()\n        resp = client.get_project_all_closed_v2(GetClosedV2(status=\"Abandoned\"))\n\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        [\n            {\n                \"child_ids\": null,\n                \"completed_time\": \"2025-04-15T15:15:35Z\",\n                \"content\": \"\",\n                \"created_time\": \"2025-03-23T15:02:17Z\",\n                \"desc\": \"\",\n                \"due_date\": \"2025-04-15T05:00:00Z\",\n                \"etag\": \"xkpljy8f\",\n                \"id\": \"67fe78173624110bff1cb96a\",\n                \"is_all_day\": true,\n                \"is_floating\": false,\n                \"items\": [],\n                \"kind\": \"TEXT\",\n                \"modified_time\": \"2025-04-08T15:00:26Z\",\n                \"parent_id\": null,\n                \"priority\": 0,\n                \"progress\": 0,\n                \"project_id\": \"676c6de2c447d18b6d0a8bac\",\n                \"repeat_from\": 2,\n                \"reminder\": null,\n                \"reminders\": [],\n                \"repeat_flag\": null,\n                \"repeat_task_id\": \"67e022795985d10fd77abff8\",\n                \"start_date\": \"2025-04-15T05:00:00Z\",\n                \"status\": -1,\n                \"tags\": [\"family\"],\n                \"title\": \"\\u260e\\ufe0f Call Mom\",\n                \"time_zone\": \"America/Chicago\",\n                \"attachments\": [],\n                \"annoying_alert\": null,\n                \"column_id\": null,\n                \"comment_count\": 0,\n                \"completed_user_id\": 125986193,\n                \"creator\": 125986193,\n                \"sort_order\": -6917533425701748736\n            }\n        ]\n        ```\n        You will notice that the `status` field is set to `-1` for abandoned tasks.\n\n    Args:\n        data (Union[GetClosedV2, dict[str, Any]]): Data to get the completed /\n            abandoned tasks.\n\n    Returns:\n        ClosedRespV2: The completed / abandoned tasks object retrieved from the API.\n\n    \"\"\"\n    if isinstance(data, dict):\n        data = GetClosedV2.model_validate(data)\n    resp = self._get_api_v2(\"/project/all/closed\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(ClosedRespV2, extra=\"allow\")\n    return ClosedRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.post_project_v2","title":"post_project_v2","text":"<pre><code>post_project_v2(\n    data: Union[PostBatchProjectV2, dict[str, Any]],\n) -&gt; BatchRespV2\n</code></pre> <p>Create, update, or delete projects in bulk against the V2 API.</p> <p>This method creates, updates, and deletes projects in bulk using the <code>POST /batch/project</code> V2 endpoint. TickTick refers to these as lists, and you can read more with this guide.</p> Add a project <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, CreateProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        add=[\n            CreateProjectV2(\n                name=\"test_project\",\n                group_id=\"680be2008f08b6b4618a3c89\",\n                color=\"blue\",\n                view_mode=\"list\",\n            ),\n        ],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"680bab7c8f08b6b4618b657d\": \"8j9rd7ug\"\n    }\n}\n</code></pre></p> Update a project <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2, UpdateProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(\n        update=[\n            UpdateProjectV2(\n                id=\"680bab7c8f08b6b4618b657d\",\n                name=\"test_project_renamed\",\n                color=\"red\",\n            ),\n        ],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"680bab7c8f08b6b4618b657d\": \"2a5jlehm\"\n    }\n}\n</code></pre></p> Delete a project <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectV2\n\nclient = Client()\nresp = client.post_project_v2(\n    data=PostBatchProjectV2(delete=[\"680bab7c8f08b6b4618b657d\"]),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {}\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[PostBatchProjectV2, dict[str, Any]]</code> <p>Data to create, update, or delete projects.</p> required <p>Returns:</p> Name Type Description <code>BatchRespV2</code> <code>BatchRespV2</code> <p>The response object containing the status of the batch operation.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def post_project_v2(\n    self,\n    data: Union[PostBatchProjectV2, dict[str, Any]],\n) -&gt; BatchRespV2:\n    \"\"\"Create, update, or delete projects in bulk against the V2 API.\n\n    This method creates, updates, and deletes projects in bulk using the\n    `POST /batch/project` V2 endpoint. TickTick refers to these as lists, and you\n    can read more with [this guide](https://help.ticktick.com/articles/7055782283059396608).\n\n    ??? example \"Add a project\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchProjectV2, CreateProjectV2\n\n        client = Client()\n        resp = client.post_project_v2(\n            data=PostBatchProjectV2(\n                add=[\n                    CreateProjectV2(\n                        name=\"test_project\",\n                        group_id=\"680be2008f08b6b4618a3c89\",\n                        color=\"blue\",\n                        view_mode=\"list\",\n                    ),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"680bab7c8f08b6b4618b657d\": \"8j9rd7ug\"\n            }\n        }\n        ```\n\n    ??? example \"Update a project\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchProjectV2, UpdateProjectV2\n\n        client = Client()\n        resp = client.post_project_v2(\n            data=PostBatchProjectV2(\n                update=[\n                    UpdateProjectV2(\n                        id=\"680bab7c8f08b6b4618b657d\",\n                        name=\"test_project_renamed\",\n                        color=\"red\",\n                    ),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"680bab7c8f08b6b4618b657d\": \"2a5jlehm\"\n            }\n        }\n        ```\n\n    ??? example \"Delete a project\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchProjectV2\n\n        client = Client()\n        resp = client.post_project_v2(\n            data=PostBatchProjectV2(delete=[\"680bab7c8f08b6b4618b657d\"]),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {}\n        }\n        ```\n\n    Args:\n        data (Union[PostBatchProjectV2, dict[str, Any]]): Data to create, update,\n            or delete projects.\n\n    Returns:\n        BatchRespV2: The response object containing the status of the batch\n            operation.\n    \"\"\"\n    if isinstance(data, dict):\n        data = PostBatchProjectV2.model_validate(data)\n    resp = self._post_api_v2(\"/batch/project\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(BatchRespV2, extra=\"allow\")\n    return BatchRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.post_task_v2","title":"post_task_v2","text":"<pre><code>post_task_v2(\n    data: Union[PostBatchTaskV2, dict[str, Any]],\n) -&gt; BatchRespV2\n</code></pre> <p>Create, update, or delete tasks in bulk against the V2 API.</p> <p>This method creates, updates, and deletes tasks in bulk using the <code>POST /batch/task</code> V2 endpoint. TickTick has a handful of guides on how to use tasks, which you can find here.</p> <p>The degree of configuration is quite high for tasks, so the examples below show just a limited number of fields to configure. The full list of fields can be found in the <code>PostBatchTaskV2</code> model.</p> Add a task <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTaskV2, CreateTaskV2\n\nclient = Client()\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        add=[\n            CreateTaskV2(\n                title=\"test task\",\n                project_id=\"681180d78f08af4931b657e8\",\n                desc=\"test description\",\n                is_all_day=False,\n                start_date=\"2023-01-01T00:00:00Z\",\n                due_date=\"2023-01-03T00:00:00Z\",\n                time_zone=\"America/New_York\",\n                repeat_flag=\"RRULE:FREQ=DAILY;INTERVAL=1\",\n                priority=1,\n                items=[CreateItemV2(title=\"test item\", status=0)],\n                kind=\"CHECKLIST\",\n                status=0,\n            ),\n        ],\n    ),\n)\n\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6812d7d68f081558b9bfdb6b\": \"0gntz779\"\n    }\n}\n</code></pre></p> Update a task <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTaskV2, UpdateTaskV2\n\nclient = Client()\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        update=[\n            UpdateTaskV2(\n                id=\"6812d7d68f081558b9bfdb6b\",\n                title=\"test task updated\",\n                project_id=\"681180d78f08af4931b657e8\",\n                content=\"test description is now content\",\n                due_date=\"2023-01-03T00:00:00Z\",\n                repeat_flag=\"RRULE:FREQ=WEEKLY;INTERVAL=1\",\n                kind=\"TEXT\",\n            ),\n        ],\n    ),\n)\n\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"6812d7d68f081558b9bfdb6b\": \"0r7p6no6\"\n    }\n}\n</code></pre></p> Delete a task <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTaskV2, DeleteTaskV2\n\nclient = Client()\nresp = client.post_task_v2(\n    data=PostBatchTaskV2(\n        delete=[\n            DeleteTaskV2(\n                task_id=\"6812d7d68f081558b9bfdb6b\",\n                project_id=\"681180d78f08af4931b657e8\",\n            ),\n        ],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {}\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[PostBatchTaskV2, dict[str, Any]]</code> <p>Data to create, update, or delete tasks.</p> required <p>Returns:</p> Name Type Description <code>BatchRespV2</code> <code>BatchRespV2</code> <p>The response object containing the status of the batch operation.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def post_task_v2(self, data: Union[PostBatchTaskV2, dict[str, Any]]) -&gt; BatchRespV2:\n    \"\"\"Create, update, or delete tasks in bulk against the V2 API.\n\n    This method creates, updates, and deletes tasks in bulk using the\n    `POST /batch/task` V2 endpoint. TickTick has a handful of guides on how to use\n    tasks, which you can find [here](https://help.ticktick.com/articles/7055782436621254656).\n\n    The degree of configuration is quite high for tasks, so the examples below show\n    just a limited number of fields to configure. The full list of fields can be\n    found in the `PostBatchTaskV2` model.\n\n    ??? example \"Add a task\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTaskV2, CreateTaskV2\n\n        client = Client()\n        resp = client.post_task_v2(\n            data=PostBatchTaskV2(\n                add=[\n                    CreateTaskV2(\n                        title=\"test task\",\n                        project_id=\"681180d78f08af4931b657e8\",\n                        desc=\"test description\",\n                        is_all_day=False,\n                        start_date=\"2023-01-01T00:00:00Z\",\n                        due_date=\"2023-01-03T00:00:00Z\",\n                        time_zone=\"America/New_York\",\n                        repeat_flag=\"RRULE:FREQ=DAILY;INTERVAL=1\",\n                        priority=1,\n                        items=[CreateItemV2(title=\"test item\", status=0)],\n                        kind=\"CHECKLIST\",\n                        status=0,\n                    ),\n                ],\n            ),\n        )\n\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"6812d7d68f081558b9bfdb6b\": \"0gntz779\"\n            }\n        }\n        ```\n\n    ??? example \"Update a task\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTaskV2, UpdateTaskV2\n\n        client = Client()\n        resp = client.post_task_v2(\n            data=PostBatchTaskV2(\n                update=[\n                    UpdateTaskV2(\n                        id=\"6812d7d68f081558b9bfdb6b\",\n                        title=\"test task updated\",\n                        project_id=\"681180d78f08af4931b657e8\",\n                        content=\"test description is now content\",\n                        due_date=\"2023-01-03T00:00:00Z\",\n                        repeat_flag=\"RRULE:FREQ=WEEKLY;INTERVAL=1\",\n                        kind=\"TEXT\",\n                    ),\n                ],\n            ),\n        )\n\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"6812d7d68f081558b9bfdb6b\": \"0r7p6no6\"\n            }\n        }\n        ```\n\n    ??? example \"Delete a task\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTaskV2, DeleteTaskV2\n\n        client = Client()\n        resp = client.post_task_v2(\n            data=PostBatchTaskV2(\n                delete=[\n                    DeleteTaskV2(\n                        task_id=\"6812d7d68f081558b9bfdb6b\",\n                        project_id=\"681180d78f08af4931b657e8\",\n                    ),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {}\n        }\n        ```\n\n    Args:\n        data (Union[PostBatchTaskV2, dict[str, Any]]): Data to create, update,\n            or delete tasks.\n\n    Returns:\n        BatchRespV2: The response object containing the status of the batch\n            operation.\n    \"\"\"\n    if isinstance(data, dict):\n        data = PostBatchTaskV2.model_validate(data)\n    resp = self._post_api_v2(\"/batch/task\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(BatchRespV2, extra=\"allow\")\n    return BatchRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.post_project_group_v2","title":"post_project_group_v2","text":"<pre><code>post_project_group_v2(\n    data: Union[PostBatchProjectGroupV2, dict[str, Any]],\n) -&gt; BatchRespV2\n</code></pre> <p>Create, update, or delete project groups in bulk against the V2 API.</p> <p>The method creates, updates, and deletes project groups in bulk using the <code>POST /batch/projectGroup</code> V2 endpoint. This used to create what TickTick calls folders. They have a small guide on them if you want to learn more.</p> Add a project group <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import (\n    PostBatchProjectGroupV2,\n    CreateProjectGroupV2,\n)\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(\n        add=[CreateProjectGroupV2(name=\"test_group\")],\n    )\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"680be2008f08b6b4618a3c89\": \"znr6783z\"\n    }\n}\n</code></pre></p> Update a project group <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import (\n    PostBatchProjectGroupV2,\n    UpdateProjectGroupV2,\n)\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(\n        update=[\n            UpdateProjectGroupV2(\n                name=\"test_group_renamed\",\n                id=\"680be2008f08b6b4618a3c89\",\n            ),\n        ],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"680be2008f08b6b4618a3c89\": \"2qoky0fw\"\n    }\n}\n</code></pre></p> Delete a project group <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchProjectGroupV2\n\nclient = Client()\nresp = client.post_project_group_v2(\n    data=PostBatchProjectGroupV2(delete=[\"680be2008f08b6b4618a3c89\"]),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {}\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[PostBatchProjectGroupV2, dict[str, Any]]</code> <p>Data to create, update, or delete project groups.</p> required <p>Returns:</p> Name Type Description <code>BatchRespV2</code> <code>BatchRespV2</code> <p>The response object containing the status of the batch operation.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def post_project_group_v2(\n    self,\n    data: Union[PostBatchProjectGroupV2, dict[str, Any]],\n) -&gt; BatchRespV2:\n    \"\"\"Create, update, or delete project groups in bulk against the V2 API.\n\n    The method creates, updates, and deletes project groups in bulk using the\n    `POST /batch/projectGroup` V2 endpoint. This used to create what TickTick calls\n    folders. They have a [small guide](https://help.ticktick.com/articles/7055782296019795968)\n    on them if you want to learn more.\n\n    ??? example \"Add a project group\"\n        ```python hl_lines=\"8\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import (\n            PostBatchProjectGroupV2,\n            CreateProjectGroupV2,\n        )\n\n        client = Client()\n        resp = client.post_project_group_v2(\n            data=PostBatchProjectGroupV2(\n                add=[CreateProjectGroupV2(name=\"test_group\")],\n            )\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"680be2008f08b6b4618a3c89\": \"znr6783z\"\n            }\n        }\n        ```\n\n    ??? example \"Update a project group\"\n        ```python hl_lines=\"8\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import (\n            PostBatchProjectGroupV2,\n            UpdateProjectGroupV2,\n        )\n\n        client = Client()\n        resp = client.post_project_group_v2(\n            data=PostBatchProjectGroupV2(\n                update=[\n                    UpdateProjectGroupV2(\n                        name=\"test_group_renamed\",\n                        id=\"680be2008f08b6b4618a3c89\",\n                    ),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"680be2008f08b6b4618a3c89\": \"2qoky0fw\"\n            }\n        }\n        ```\n\n    ??? example \"Delete a project group\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchProjectGroupV2\n\n        client = Client()\n        resp = client.post_project_group_v2(\n            data=PostBatchProjectGroupV2(delete=[\"680be2008f08b6b4618a3c89\"]),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {}\n        }\n        ```\n\n    Args:\n        data (Union[PostBatchProjectGroupV2, dict[str, Any]]): Data to create,\n            update, or delete project groups.\n\n    Returns:\n        BatchRespV2: The response object containing the status of the batch\n            operation.\n    \"\"\"\n    if isinstance(data, dict):\n        data = PostBatchProjectGroupV2.model_validate(data)\n    resp = self._post_api_v2(\"/batch/projectGroup\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(BatchRespV2, extra=\"allow\")\n    return BatchRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.post_task_parent_v2","title":"post_task_parent_v2","text":"<pre><code>post_task_parent_v2(\n    data: Union[PostBatchTaskParentV2, list[Any]],\n) -&gt; BatchTaskParentRespV2\n</code></pre> <p>Set or unset a task parent in bulk against the V2 API.</p> <p>This method sets and/or unsets task parents in bulk using the <code>POST /batch/taskParent</code> V2 endpoint. This is used to create what TickTick refers to as subtasks. This is notably different from a checklist task. You can see TickTick's guide on subtasks / Multilevel Tasks for more information.</p> Set and unset task parents <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import (\n    PostBatchTaskParentV2,\n    SetTaskParentV2,\n    UnSetTaskParentV2,\n)\n\nclient = Client()\nresp = client.post_task_parent_v2(\n    data=PostBatchTaskParentV2(\n        [\n            SetTaskParentV2(\n                project_id=\"681180d78f08af4931b657e8\",\n                parent_id=\"68117d7327de22223ea29ffd\",\n                task_id=\"68117d7627de22223ea2a003\",\n            ),\n            UnSetTaskParentV2(\n                project_id=\"681180d78f08af4931b657e8\",\n                old_parent_id=\"6811803d27de22223ea2a011\",\n                task_id=\"6811803f27de22223ea2a017\",\n            ),\n        ],\n    ),\n)\n\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"68117d7627de22223ea2a003\": {\n            \"id\": \"68117d7627de22223ea2a003\",\n            \"parent_id\": \"68117d7327de22223ea29ffd\",\n            \"child_ids\": null,\n            \"etag\": \"07s4q5a6\"\n        },\n        \"68117d7327de22223ea29ffd\": {\n            \"id\": \"68117d7327de22223ea29ffd\",\n            \"parent_id\": null,\n            \"child_ids\": [\n                \"68117d7627de22223ea2a003\"\n            ],\n            \"etag\": \"df6fxmtg\"\n        },\n        \"6811803f27de22223ea2a017\": {\n            \"id\": \"6811803f27de22223ea2a017\",\n            \"parent_id\": null,\n            \"child_ids\": null,\n            \"etag\": \"fhuwhgge\"\n        },\n        \"6811803d27de22223ea2a011\": {\n            \"id\": \"6811803d27de22223ea2a011\",\n            \"parent_id\": null,\n            \"child_ids\": [],\n            \"etag\": \"idwvx8sx\"\n        }\n    }\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[PostBatchTaskParentV2, list[Any]]</code> <p>Data to set or unset task parents.</p> required <p>Returns:</p> Name Type Description <code>BatchTaskParentRespV2</code> <code>BatchTaskParentRespV2</code> <p>Response from the API after setting or unsetting the</p> <code>BatchTaskParentRespV2</code> <p>task parents.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def post_task_parent_v2(\n    self,\n    data: Union[PostBatchTaskParentV2, list[Any]],\n) -&gt; BatchTaskParentRespV2:\n    \"\"\"Set or unset a task parent in bulk against the V2 API.\n\n    This method sets and/or unsets task parents in bulk using the\n    `POST /batch/taskParent` V2 endpoint. This is used to create what\n    TickTick refers to as subtasks. This is notably different from a\n    checklist task. You can see [TickTick's guide on subtasks / _Multilevel Tasks_](https://help.ticktick.com/articles/7055782219767349248)\n    for more information.\n\n    ??? example \"Set and unset task parents\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import (\n            PostBatchTaskParentV2,\n            SetTaskParentV2,\n            UnSetTaskParentV2,\n        )\n\n        client = Client()\n        resp = client.post_task_parent_v2(\n            data=PostBatchTaskParentV2(\n                [\n                    SetTaskParentV2(\n                        project_id=\"681180d78f08af4931b657e8\",\n                        parent_id=\"68117d7327de22223ea29ffd\",\n                        task_id=\"68117d7627de22223ea2a003\",\n                    ),\n                    UnSetTaskParentV2(\n                        project_id=\"681180d78f08af4931b657e8\",\n                        old_parent_id=\"6811803d27de22223ea2a011\",\n                        task_id=\"6811803f27de22223ea2a017\",\n                    ),\n                ],\n            ),\n        )\n\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"68117d7627de22223ea2a003\": {\n                    \"id\": \"68117d7627de22223ea2a003\",\n                    \"parent_id\": \"68117d7327de22223ea29ffd\",\n                    \"child_ids\": null,\n                    \"etag\": \"07s4q5a6\"\n                },\n                \"68117d7327de22223ea29ffd\": {\n                    \"id\": \"68117d7327de22223ea29ffd\",\n                    \"parent_id\": null,\n                    \"child_ids\": [\n                        \"68117d7627de22223ea2a003\"\n                    ],\n                    \"etag\": \"df6fxmtg\"\n                },\n                \"6811803f27de22223ea2a017\": {\n                    \"id\": \"6811803f27de22223ea2a017\",\n                    \"parent_id\": null,\n                    \"child_ids\": null,\n                    \"etag\": \"fhuwhgge\"\n                },\n                \"6811803d27de22223ea2a011\": {\n                    \"id\": \"6811803d27de22223ea2a011\",\n                    \"parent_id\": null,\n                    \"child_ids\": [],\n                    \"etag\": \"idwvx8sx\"\n                }\n            }\n        }\n        ```\n\n    Args:\n        data (Union[PostBatchTaskParentV2, list[Any]]): Data to set or unset task\n            parents.\n\n    Returns:\n        BatchTaskParentRespV2: Response from the API after setting or unsetting the\n        task parents.\n    \"\"\"\n    if isinstance(data, list):\n        data = PostBatchTaskParentV2.model_validate(data)\n    resp = self._post_api_v2(\"/batch/taskParent\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(BatchTaskParentRespV2, extra=\"allow\")\n    return BatchTaskParentRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.post_tag_v2","title":"post_tag_v2","text":"<pre><code>post_tag_v2(\n    data: Union[PostBatchTagV2, dict[str, Any]],\n) -&gt; BatchTagRespV2\n</code></pre> <p>Create or update tags in bulk against the V2 API.</p> <p>This method creates or updates tags in bulk using the <code>POST /batch/tag</code> V2 endpoint. Tags are used to help organize tasks. Tasks can be tagged with multiple tags, and they can be nested as well. They are often associated with categories, status, or location. You can see TickTick's guide for more info.</p> <p>Not all operations supported</p> <p>While batch operations usually support adding, updating, and deleting, this endpoint only supports adding and updating tags. Deleting tags supported separately, see <code>delete_tag_v2</code>. Updating tag names is also supported, separately through the <code>put_rename_tag_v2</code> function.</p> Add a tag <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, CreateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        add=[CreateTagV2(label=\"test_tag\", color=\"#002fa7\")],\n    )\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"6pkt0zoq\"\n    }\n}\n</code></pre></p> Update a tag <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, UpdateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        update=[UpdateTagV2(label=\"test_tag\", color=\"#ee6c4d\")],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"test_tag\": \"fcutpk78\"\n    }\n}\n</code></pre></p> Add a nested tag <pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import PostBatchTagV2, CreateTagV2, UpdateTagV2\n\nclient = Client()\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        add=[\n            CreateTagV2(label=\"parent_tag\", color=\"#002fa7\"),\n            CreateTagV2(label=\"child_tag\", color=\"#ee6c4d\"),\n        ],\n    ),\n)\nprint(resp.model_dump())\nresp = client.post_tag_v2(\n    data=PostBatchTagV2(\n        update=[\n            UpdateTagV2(label=\"child_tag\", parent=\"parent_tag\"),\n        ],\n    ),\n)\nprint(resp.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"parent_tag\": \"ffmehyan\",\n        \"child_tag\": \"1uuc4fz1\"\n    }\n}\n{\n    \"id2error\": {},\n    \"id2etag\": {\n        \"child_tag\": \"65lj6uj9\"\n    }\n}\n</code></pre></p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[PostBatchTagV2, dict[str, Any]]</code> <p>Data to create or update tags.</p> required <p>Returns:</p> Name Type Description <code>BatchTagRespV2</code> <code>BatchTagRespV2</code> <p>Response from the API after creating or updating the tags.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def post_tag_v2(\n    self,\n    data: Union[PostBatchTagV2, dict[str, Any]],\n) -&gt; BatchTagRespV2:\n    \"\"\"Create or update tags in bulk against the V2 API.\n\n    This method creates or updates tags in bulk using the `POST /batch/tag` V2\n    endpoint. Tags are used to help organize tasks. Tasks can be tagged with\n    multiple tags, and they can be nested as well. They are often associated with\n    categories, status, or location. You can see [TickTick's guide](https://help.ticktick.com/articles/7055782255804809216)\n    for more info.\n\n    !!! warning \"Not all operations supported\"\n        While batch operations usually support adding, updating, and deleting, this\n        endpoint only supports adding and updating tags. Deleting tags supported\n        separately, see `delete_tag_v2`. Updating tag names is also supported,\n        separately through the `put_rename_tag_v2` function.\n\n    ??? example \"Add a tag\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTagV2, CreateTagV2\n\n        client = Client()\n        resp = client.post_tag_v2(\n            data=PostBatchTagV2(\n                add=[CreateTagV2(label=\"test_tag\", color=\"#002fa7\")],\n            )\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"test_tag\": \"6pkt0zoq\"\n            }\n        }\n        ```\n    ??? example \"Update a tag\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTagV2, UpdateTagV2\n\n        client = Client()\n        resp = client.post_tag_v2(\n            data=PostBatchTagV2(\n                update=[UpdateTagV2(label=\"test_tag\", color=\"#ee6c4d\")],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"test_tag\": \"fcutpk78\"\n            }\n        }\n        ```\n\n    ??? example \"Add a nested tag\"\n        ```python hl_lines=\"5 14\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import PostBatchTagV2, CreateTagV2, UpdateTagV2\n\n        client = Client()\n        resp = client.post_tag_v2(\n            data=PostBatchTagV2(\n                add=[\n                    CreateTagV2(label=\"parent_tag\", color=\"#002fa7\"),\n                    CreateTagV2(label=\"child_tag\", color=\"#ee6c4d\"),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        resp = client.post_tag_v2(\n            data=PostBatchTagV2(\n                update=[\n                    UpdateTagV2(label=\"child_tag\", parent=\"parent_tag\"),\n                ],\n            ),\n        )\n        print(resp.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"parent_tag\": \"ffmehyan\",\n                \"child_tag\": \"1uuc4fz1\"\n            }\n        }\n        {\n            \"id2error\": {},\n            \"id2etag\": {\n                \"child_tag\": \"65lj6uj9\"\n            }\n        }\n        ```\n\n    Args:\n        data (Union[PostBatchTagV2, dict[str, Any]]): Data to create or update tags.\n\n    Returns:\n        BatchTagRespV2: Response from the API after creating or updating the tags.\n    \"\"\"\n    if isinstance(data, dict):\n        data = PostBatchTagV2.model_validate(data)\n    resp = self._post_api_v2(\"/batch/tag\", data=self._model_dump(data))\n    if self.override_forbid_extra:\n        update_model_config(BatchTagRespV2, extra=\"allow\")\n    return BatchTagRespV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.put_rename_tag_v2","title":"put_rename_tag_v2","text":"<pre><code>put_rename_tag_v2(\n    data: Union[RenameTagV2, dict[str, Any]],\n) -&gt; None\n</code></pre> <p>Rename a tag in the V2 API.</p> <p>Update a tag name using the <code>PUT /tag/rename</code> V2 endpoint. This endpoint allows you to specifically rename a tag. Any other update operations should be done using the <code>post_tag_v2</code> method.</p> Example <p><pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import RenameTagV2\n\nclient = Client()\nclient.put_rename_tag_v2(\n    data=RenameTagV2(\n        name=\"test_tag\",\n        new_name=\"test_tag_renamed\",\n    ),\n)\n</code></pre> This will return nothing if the tag is successfully renamed. Just know, even if the rename is unsuccessful, the API probably won't return an error.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[RenameTagV2, dict[str, Any]]</code> <p>Data to rename the tag.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>The response had an error HTTP status of <code>4xx</code> or <code>5xx</code>.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def put_rename_tag_v2(self, data: Union[RenameTagV2, dict[str, Any]]) -&gt; None:\n    \"\"\"Rename a tag in the V2 API.\n\n    Update a tag name using the `PUT /tag/rename` V2 endpoint. This endpoint allows\n    you to specifically rename a tag. Any other _update_ operations should be done\n    using the `post_tag_v2` method.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import RenameTagV2\n\n        client = Client()\n        client.put_rename_tag_v2(\n            data=RenameTagV2(\n                name=\"test_tag\",\n                new_name=\"test_tag_renamed\",\n            ),\n        )\n        ```\n        This will return nothing if the tag is successfully renamed. Just know, even\n        if the rename is _unsuccessful_, the API probably won't return an error.\n\n    Args:\n        data (Union[RenameTagV2, dict[str, Any]]): Data to rename the tag.\n\n    Raises:\n        ValueError: The response had an error HTTP status of `4xx` or `5xx`.\n    \"\"\"\n    if isinstance(data, dict):\n        data = RenameTagV2.model_validate(data)\n    try:\n        resp = httpx.put(\n            url=str(self.v2_base_url.join(\"/tag/rename\")),\n            headers=self.v2_headers,\n            cookies=self.v2_cookies,\n            json=self._model_dump(data),\n        )\n        resp.raise_for_status()\n    except httpx.HTTPStatusError as e:\n        try:\n            content = e.response.json()\n        except json.decoder.JSONDecodeError:\n            content = e.response.content.decode()\n        msg = f\"Response [{e.response.status_code}]: {content}\"\n        logger.error(msg)\n        raise ValueError(msg)  # noqa: B904\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.delete_tag_v2","title":"delete_tag_v2","text":"<pre><code>delete_tag_v2(\n    data: Union[DeleteTagV2, dict[str, Any]],\n) -&gt; None\n</code></pre> <p>Delete a tag in the V2 API.</p> <p>Delete a tag using the <code>DELETE /tag</code> V2 endpoint.</p> Example <p><pre><code>from pyticktick import Client\nfrom pyticktick.models.v2 import DeleteTagV2\n\nclient = Client()\nclient.delete_tag_v2(\n    data=DeleteTagV2(name=\"test_tag\"),\n)\n</code></pre> This will return nothing if the tag is successfully deleted. Just know, even if the delete is unsuccessful, the API probably won't return an error.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Union[DeleteTagV2, dict[str, Any]]</code> <p>Data to delete a tag.</p> required Source code in <code>src/pyticktick/client.py</code> <pre><code>def delete_tag_v2(self, data: Union[DeleteTagV2, dict[str, Any]]) -&gt; None:\n    \"\"\"Delete a tag in the V2 API.\n\n    Delete a tag using the `DELETE /tag` V2 endpoint.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"5\"\n        from pyticktick import Client\n        from pyticktick.models.v2 import DeleteTagV2\n\n        client = Client()\n        client.delete_tag_v2(\n            data=DeleteTagV2(name=\"test_tag\"),\n        )\n        ```\n        This will return nothing if the tag is successfully deleted. Just know,\n        even if the delete is _unsuccessful_, the API probably won't return an\n        error.\n\n    Args:\n        data (Union[DeleteTagV2, dict[str, Any]]): Data to delete a tag.\n    \"\"\"\n    if isinstance(data, dict):\n        data = DeleteTagV2.model_validate(data)\n    self._delete_api_v2(\"/tag\", data=self._model_dump(data))\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.get_profile_v2","title":"get_profile_v2","text":"<pre><code>get_profile_v2() -&gt; UserProfileV2\n</code></pre> <p>Get the user profile from the V2 API.</p> <p>This method gets the user profile from the <code>GET /user/profile</code> V2 endpoint. This endpoint provides information about the user's profile, including their name, email, and other details.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nprofile = client.get_profile_v2()\nprint(profile.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"etimestamp\": null,\n    \"username\": \"username@username.com\",\n    \"site_domain\": \"ticktick.com\",\n    \"created_campaign\": \"\",\n    \"created_device_info\": null,\n    \"filled_password\": true,\n    \"account_domain\": null,\n    \"extenal_id\": null,\n    \"email\": null,\n    \"verified_email\": true,\n    \"faked_email\": false,\n    \"phone\": null,\n    \"name\": null,\n    \"given_name\": null,\n    \"family_name\": null,\n    \"link\": null,\n    \"picture\": \"https://secure.gravatar.com/avatar/63a5deb18f37c35393c70de1ef53cb6a;size=50?default=https://d3qg9zffrnl4ph.cloudfront.net/image/avatar.png\",\n    \"gender\": null,\n    \"locale\": \"en_US\",\n    \"user_code\": \"58822351-89dd-432a-90ed-772a47fb15b5\",\n    \"ver_code\": null,\n    \"ver_key\": null,\n    \"external_id\": null,\n    \"phone_without_country_code\": null,\n    \"display_name\": \"username@username.com\"\n}\n</code></pre></p> <p>Returns:</p> Name Type Description <code>UserProfileV2</code> <code>UserProfileV2</code> <p>The user profile object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_profile_v2(self) -&gt; UserProfileV2:\n    \"\"\"Get the user profile from the V2 API.\n\n    This method gets the user profile from the `GET /user/profile` V2 endpoint.\n    This endpoint provides information about the user's profile, including their\n    name, email, and other details.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        profile = client.get_profile_v2()\n        print(profile.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"etimestamp\": null,\n            \"username\": \"username@username.com\",\n            \"site_domain\": \"ticktick.com\",\n            \"created_campaign\": \"\",\n            \"created_device_info\": null,\n            \"filled_password\": true,\n            \"account_domain\": null,\n            \"extenal_id\": null,\n            \"email\": null,\n            \"verified_email\": true,\n            \"faked_email\": false,\n            \"phone\": null,\n            \"name\": null,\n            \"given_name\": null,\n            \"family_name\": null,\n            \"link\": null,\n            \"picture\": \"https://secure.gravatar.com/avatar/63a5deb18f37c35393c70de1ef53cb6a;size=50?default=https://d3qg9zffrnl4ph.cloudfront.net/image/avatar.png\",\n            \"gender\": null,\n            \"locale\": \"en_US\",\n            \"user_code\": \"58822351-89dd-432a-90ed-772a47fb15b5\",\n            \"ver_code\": null,\n            \"ver_key\": null,\n            \"external_id\": null,\n            \"phone_without_country_code\": null,\n            \"display_name\": \"username@username.com\"\n        }\n        ```\n\n    Returns:\n        UserProfileV2: The user profile object retrieved from the API.\n    \"\"\"\n    resp = self._get_api_v2(\"/user/profile\")\n    if self.override_forbid_extra:\n        update_model_config(UserProfileV2, extra=\"allow\")\n    return UserProfileV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.get_status_v2","title":"get_status_v2","text":"<pre><code>get_status_v2() -&gt; UserStatusV2\n</code></pre> <p>Get the user status from the V2 API.</p> <p>This method gets the user status from the <code>GET /user/status</code> V2 endpoint. This user \"status\" is mainly about the user's subscription status, rather than their current activity on TickTick. This may still be useful for confirming if a user is a premium subscriber or not. A free account is much more limited in terms of its features, and TickTick does not provide feedback on if a request fails due to a hitting a free limit or not.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nstatus = client.get_status_v2()\nprint(status.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"user_id\": \"213928392\",\n    \"user_code\": \"58822351-89dd-432a-90ed-772a47fb15b5\",\n    \"username\": \"username@username.com\",\n    \"team_pro\": false,\n    \"pro_start_date\": \"2024-12-25T16:18:28.000+0000\",\n    \"pro_end_date\": \"2026-12-26T16:18:19.000+0000\",\n    \"subscribe_type\": \"stripe_subscribe\",\n    \"subscribe_freq\": \"Year\",\n    \"need_subscribe\": false,\n    \"freq\": \"Year\",\n    \"inbox_id\": \"inbox213928392\",\n    \"team_user\": false,\n    \"active_team_user\": false,\n    \"free_trial\": false,\n    \"pro\": true,\n    \"ds\": false,\n    \"time_stamp\": 1735898435,\n    \"grace_period\": false\n}\n</code></pre></p> <p>Returns:</p> Name Type Description <code>UserStatusV2</code> <code>UserStatusV2</code> <p>The user status object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_status_v2(self) -&gt; UserStatusV2:\n    \"\"\"Get the user status from the V2 API.\n\n    This method gets the user status from the `GET /user/status` V2 endpoint. This\n    user \"status\" is mainly about the user's subscription status, rather than\n    their current activity on TickTick. This may still be useful for confirming if\n    a user is a premium subscriber or not. A free account is much more limited in\n    terms of its features, and TickTick does not provide feedback on if a request\n    fails due to a hitting a free limit or not.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        status = client.get_status_v2()\n        print(status.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"user_id\": \"213928392\",\n            \"user_code\": \"58822351-89dd-432a-90ed-772a47fb15b5\",\n            \"username\": \"username@username.com\",\n            \"team_pro\": false,\n            \"pro_start_date\": \"2024-12-25T16:18:28.000+0000\",\n            \"pro_end_date\": \"2026-12-26T16:18:19.000+0000\",\n            \"subscribe_type\": \"stripe_subscribe\",\n            \"subscribe_freq\": \"Year\",\n            \"need_subscribe\": false,\n            \"freq\": \"Year\",\n            \"inbox_id\": \"inbox213928392\",\n            \"team_user\": false,\n            \"active_team_user\": false,\n            \"free_trial\": false,\n            \"pro\": true,\n            \"ds\": false,\n            \"time_stamp\": 1735898435,\n            \"grace_period\": false\n        }\n        ```\n\n    Returns:\n        UserStatusV2: The user status object retrieved from the API.\n    \"\"\"\n    resp = self._get_api_v2(\"/user/status\")\n    if self.override_forbid_extra:\n        update_model_config(UserStatusV2, extra=\"allow\")\n    return UserStatusV2.model_validate(resp)\n</code></pre>"},{"location":"reference/client/v2/#pyticktick.client.Client.get_statistics_v2","title":"get_statistics_v2","text":"<pre><code>get_statistics_v2() -&gt; UserStatisticsV2\n</code></pre> <p>Get user statistics from the V2 API.</p> <p>This method gets the user statistics from the <code>GET /statistics/general</code> V2 endpoint. This endpoint provides information about the user's statistics, such as number of tasks completed per day, week, or month, and other metrics.</p> Example <pre><code>from pyticktick import Client\n\nclient = Client()\nstatistics = client.get_statistics_v2()\nprint(statistics.model_dump())\n</code></pre> <p>will output: <pre><code>{\n    \"score\": 8211,\n    \"level\": 7,\n    \"yesterday_completed\": 6,\n    \"today_completed\": 4,\n    \"total_completed\": 2187,\n    \"score_by_day\": {\n        \"2025-03-27\": 7939,\n        ...\n        \"2025-04-01\": 8149,\n        \"2025-04-02\": 8189\n    },\n    \"task_by_day\": {\n        \"2025-03-27\": {\n            \"complete_count\": 3,\n            \"not_complete_count\": 2\n        },\n        ...\n        \"2025-04-01\": {\n            \"complete_count\": 6,\n            \"not_complete_count\": 1\n        },\n        \"2025-04-02\": {\n            \"complete_count\": 4,\n            \"not_complete_count\": 0\n        }\n    },\n    \"task_by_week\": {\n        \"2025-02-16\": {\n            \"complete_count\": 214,\n            \"not_complete_count\": 3\n        },\n        ...\n        \"2025-03-23\": {\n            \"complete_count\": 64,\n            \"not_complete_count\": 8\n        },\n        \"2025-03-30\": {\n            \"complete_count\": 22,\n            \"not_complete_count\": 10\n        }\n    },\n    \"task_by_month\": {\n        \"2024-10-01\": {\n            \"complete_count\": 0,\n            \"not_complete_count\": 0\n        },\n        ...\n        \"2025-03-01\": {\n            \"complete_count\": 654,\n            \"not_complete_count\": 14\n        },\n        \"2025-04-01\": {\n            \"complete_count\": 10,\n            \"not_complete_count\": 29\n        }\n    },\n    \"today_pomo_count\": 0,\n    \"yesterday_pomo_count\": 0,\n    \"total_pomo_count\": 0,\n    \"today_pomo_duration\": 0,\n    \"yesterday_pomo_duration\": 0,\n    \"total_pomo_duration\": 0,\n    \"pomo_goal\": 0,\n    \"pomo_duration_goal\": 0,\n    \"pomo_by_day\": {},\n    \"pomo_by_week\": {},\n    \"pomo_by_month\": {}\n}\n</code></pre></p> <p>Returns:</p> Name Type Description <code>UserStatisticsV2</code> <code>UserStatisticsV2</code> <p>The user statistics object retrieved from the API.</p> Source code in <code>src/pyticktick/client.py</code> <pre><code>def get_statistics_v2(self) -&gt; UserStatisticsV2:\n    \"\"\"Get user statistics from the V2 API.\n\n    This method gets the user statistics from the `GET /statistics/general` V2\n    endpoint. This endpoint provides information about the user's statistics, such\n    as number of tasks completed per day, week, or month, and other metrics.\n\n    ??? example \"Example\"\n        ```python hl_lines=\"4\"\n        from pyticktick import Client\n\n        client = Client()\n        statistics = client.get_statistics_v2()\n        print(statistics.model_dump())\n        ```\n\n        will output:\n        ```json\n        {\n            \"score\": 8211,\n            \"level\": 7,\n            \"yesterday_completed\": 6,\n            \"today_completed\": 4,\n            \"total_completed\": 2187,\n            \"score_by_day\": {\n                \"2025-03-27\": 7939,\n                ...\n                \"2025-04-01\": 8149,\n                \"2025-04-02\": 8189\n            },\n            \"task_by_day\": {\n                \"2025-03-27\": {\n                    \"complete_count\": 3,\n                    \"not_complete_count\": 2\n                },\n                ...\n                \"2025-04-01\": {\n                    \"complete_count\": 6,\n                    \"not_complete_count\": 1\n                },\n                \"2025-04-02\": {\n                    \"complete_count\": 4,\n                    \"not_complete_count\": 0\n                }\n            },\n            \"task_by_week\": {\n                \"2025-02-16\": {\n                    \"complete_count\": 214,\n                    \"not_complete_count\": 3\n                },\n                ...\n                \"2025-03-23\": {\n                    \"complete_count\": 64,\n                    \"not_complete_count\": 8\n                },\n                \"2025-03-30\": {\n                    \"complete_count\": 22,\n                    \"not_complete_count\": 10\n                }\n            },\n            \"task_by_month\": {\n                \"2024-10-01\": {\n                    \"complete_count\": 0,\n                    \"not_complete_count\": 0\n                },\n                ...\n                \"2025-03-01\": {\n                    \"complete_count\": 654,\n                    \"not_complete_count\": 14\n                },\n                \"2025-04-01\": {\n                    \"complete_count\": 10,\n                    \"not_complete_count\": 29\n                }\n            },\n            \"today_pomo_count\": 0,\n            \"yesterday_pomo_count\": 0,\n            \"total_pomo_count\": 0,\n            \"today_pomo_duration\": 0,\n            \"yesterday_pomo_duration\": 0,\n            \"total_pomo_duration\": 0,\n            \"pomo_goal\": 0,\n            \"pomo_duration_goal\": 0,\n            \"pomo_by_day\": {},\n            \"pomo_by_week\": {},\n            \"pomo_by_month\": {}\n        }\n        ```\n\n    Returns:\n        UserStatisticsV2: The user statistics object retrieved from the API.\n    \"\"\"\n    resp = self._get_api_v2(\"/statistics/general\")\n    if self.override_forbid_extra:\n        update_model_config(UserStatisticsV2, extra=\"allow\")\n    return UserStatisticsV2.model_validate(resp)\n</code></pre>"},{"location":"reference/models/pydantic/","title":"Pydantic Types","text":""},{"location":"reference/models/pydantic/#pyticktick.models.pydantic","title":"pyticktick.models.pydantic","text":"<p>Generic custom pydantic types, not specific to any API version.</p> <p>Classes:</p> Name Description <code>Color</code> <p>Represents a color in pydantic-based TickTick models.</p> <code>HttpUrl</code> <p>Represents an HTTP URL in pydantic-based TickTick models.</p>"},{"location":"reference/models/pydantic/#pyticktick.models.pydantic.Color","title":"Color","text":"<p>               Bases: <code>Color</code></p> <p>Represents a color in pydantic-based TickTick models.</p> <p>Methods:</p> Name Description <code>__get_pydantic_core_schema__</code> <p>Change the serialization logic of the color field to always be a string.</p> <code>__str__</code> <p>Return the color as a hex string.</p>"},{"location":"reference/models/pydantic/#pyticktick.models.pydantic.Color.__get_pydantic_core_schema__","title":"__get_pydantic_core_schema__  <code>classmethod</code>","text":"<pre><code>__get_pydantic_core_schema__(\n    source: type[Any], handler: Callable[[Any], CoreSchema]\n) -&gt; core_schema.CoreSchema\n</code></pre> <p>Change the serialization logic of the color field to always be a string.</p> <p>This method mirrors the logic of the standard <code>__get_pydantic_core_schema__</code> method in <code>pydantic_extra_types.color.Color</code>, but changes the <code>when_used</code> parameter to be <code>\"always\"</code> instead of the default of <code>\"json-unless-none\"</code>.</p> Source code in <code>src/pyticktick/models/pydantic.py</code> <pre><code>@classmethod\ndef __get_pydantic_core_schema__(  # noqa: DOC101, DOC103, DOC203\n    cls,\n    source: type[Any],\n    handler: Callable[[Any], CoreSchema],\n) -&gt; core_schema.CoreSchema:\n    \"\"\"Change the serialization logic of the color field to always be a string.\n\n    This method mirrors the logic of the standard [`__get_pydantic_core_schema__` method](https://github.com/pydantic/pydantic-extra-types/blob/1da2a1caeb7502e40037e2e3e2961726c2c5c002/pydantic_extra_types/color.py#L213-L219)\n    in [`pydantic_extra_types.color.Color`](https://docs.pydantic.dev/latest/api/pydantic_extra_types_color/),\n    but changes the `when_used` parameter to be `\"always\"` instead of the default of\n    `\"json-unless-none\"`.\n    \"\"\"  # noqa: DOC201\n    return core_schema.with_info_plain_validator_function(\n        cls._validate,\n        serialization=core_schema.to_string_ser_schema(when_used=\"always\"),\n    )\n</code></pre>"},{"location":"reference/models/pydantic/#pyticktick.models.pydantic.Color.__str__","title":"__str__","text":"<pre><code>__str__() -&gt; str\n</code></pre> <p>Return the color as a hex string.</p> <p>TickTick uses the long hex format for colors, so this method allows for easy serialization of the color field into the correct format. Equivalent to calling <code>as_hex(format=\"long\")</code>. It will be lowercase and always have 7 characters (and <code>#</code>): <code>#rrggbb</code>.</p> <p>Example</p> <pre><code>color = Color((0, 255, 255))\nassert color.as_named() == \"cyan\"\nassert str(color) == \"#00ffff\"\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The color as a hex string.</p> Source code in <code>src/pyticktick/models/pydantic.py</code> <pre><code>def __str__(self) -&gt; str:\n    \"\"\"Return the color as a hex string.\n\n    TickTick uses the long hex format for colors, so this method allows for easy\n    serialization of the color field into the correct format. Equivalent to calling\n    [`as_hex(format=\"long\")`](https://docs.pydantic.dev/latest/api/pydantic_extra_types_color/#pydantic_extra_types.color.Color.as_hex).\n    It will be lowercase and always have 7 characters (and `#`): `#rrggbb`.\n\n    !!! Example\n        ```python\n        color = Color((0, 255, 255))\n        assert color.as_named() == \"cyan\"\n        assert str(color) == \"#00ffff\"\n        ```\n\n    Returns:\n        str: The color as a hex string.\n    \"\"\"\n    return self.as_hex(format=\"long\")\n</code></pre>"},{"location":"reference/models/pydantic/#pyticktick.models.pydantic.HttpUrl","title":"HttpUrl","text":"<p>               Bases: <code>HttpUrl</code></p> <p>Represents an HTTP URL in pydantic-based TickTick models.</p> <p>Methods:</p> Name Description <code>join</code> <p>Join the current URL with additional path segments.</p>"},{"location":"reference/models/pydantic/#pyticktick.models.pydantic.HttpUrl.join","title":"join","text":"<pre><code>join(*args: str) -&gt; HttpUrl\n</code></pre> <p>Join the current URL with additional path segments.</p> <p>This method is a convenience method to join additional path segments to the current URL. It takes its inspiration from the <code>urllib.parse.urljoin</code> and <code>pathlib.PurePath.joinpath</code> methods in Python.</p> <p>Example</p> <pre><code>from pyticktick.models.v2 import HttpUrl\n\nurl = HttpUrl(\"https://example.com\")\nassert url.join(\"foo\") == HttpUrl(\"https://example.com/foo\")\nassert url.join(\"foo\", \"bar\") == HttpUrl(\"https://example.com/foo/bar\")\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>*args</code> <code>str</code> <p>The path segments to join with the current URL.</p> <code>()</code> <p>Returns:</p> Name Type Description <code>HttpUrl</code> <code>HttpUrl</code> <p>A new URL with the path segments joined to the current URL.</p> Source code in <code>src/pyticktick/models/pydantic.py</code> <pre><code>def join(self, *args: str) -&gt; HttpUrl:\n    \"\"\"Join the current URL with additional path segments.\n\n    This method is a convenience method to join additional path segments to the\n    current URL. It takes its inspiration from the [`urllib.parse.urljoin`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin)\n    and [`pathlib.PurePath.joinpath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.joinpath)\n    methods in Python.\n\n    !!! Example\n        ```python\n        from pyticktick.models.v2 import HttpUrl\n\n        url = HttpUrl(\"https://example.com\")\n        assert url.join(\"foo\") == HttpUrl(\"https://example.com/foo\")\n        assert url.join(\"foo\", \"bar\") == HttpUrl(\"https://example.com/foo/bar\")\n        ```\n\n    Args:\n        *args (str): The path segments to join with the current URL.\n\n    Returns:\n        HttpUrl: A new URL with the path segments joined to the current URL.\n    \"\"\"\n    if len(args) == 0:\n        return self\n\n    url = str(self).rstrip(\"/\")\n    for arg in args:\n        url = f\"{url.rstrip('/')}/{arg.lstrip('/')}\"\n    return self.__class__(url)\n</code></pre>"},{"location":"reference/models/v1/class_diagrams/","title":"Class Diagrams","text":"<pre><code>classDiagram\n    direction LR\n    class OAuthTokenV1 {\n        access_token: UUID\n        expires_in: int\n        token_type: Literal['bearer'] = 'bearer'\n        scope: Literal['tasks:read tasks:write'] = 'tasks:read tasks:write'\n    }\n\n    class ProjectRespV1 {\n        root: ProjectV1\n    }\n\n    class OAuthAuthorizeURLV1 {\n        client_id: str\n        scope: Literal['tasks:read tasks:write'] = 'tasks:read tasks:write'\n        state: Any = None\n        response_type: Literal['code'] = 'code'\n        base_url: HttpUrl = https://ticktick.com/oauth/authorize\n    }\n\n    class ProjectDataRespV1 {\n        project: ProjectV1\n        tasks: list[TaskRespV1]\n        columns: list[ColumnV1]\n    }\n\n    class UpdateTaskV1 {\n        id: str\n        project_id: str\n        title: str | None = None\n        content: str | None = None\n        desc: str | None = None\n        is_all_day: bool | None = None\n        start_date: str | None = None\n        due_date: str | None = None\n        time_zone: str | None = None\n        reminders: list[str] | None = None\n        repeat_flag: str | None = None\n        priority: Literal[0, 1, 3, 5] | None = None\n        sort_order: int | None = None\n        items: list[UpdateItemV1] | None = None\n    }\n\n    class TaskRespV1 {\n        id: str\n        project_id: str\n        title: str\n        is_all_day: bool\n        completed_time: str | None = None\n        content: str | None = None\n        desc: str | None = None\n        due_date: str | None = None\n        items: list[ItemV1] | None = None\n        priority: Literal[0, 1, 3, 5]\n        reminders: list[str] | None = None\n        repeat_flag: str | None = None\n        sort_order: int\n        start_date: str | None = None\n        status: bool\n        time_zone: str\n    }\n\n    class CreateProjectV1 {\n        name: str\n        color: Color | None = None\n        sort_order: int | None = None\n        view_mode: Literal['list', 'kanban', 'timeline'] | None = None\n        kind: Literal['TASK', 'NOTE'] | None = None\n    }\n\n    class ProjectV1 {\n        id: str\n        name: str\n        color: str | None = None\n        sort_order: int\n        closed: bool | None = None\n        group_id: str | None = None\n        view_mode: Literal['list', 'kanban', 'timeline'] | None = None\n        permission: Literal['read', 'write', 'comment'] | None = None\n        kind: Literal['TASK', 'NOTE'] | None = None\n    }\n\n    class CreateTaskV1 {\n        id: str | None = None\n        title: str\n        project_id: str\n        content: str | None = None\n        desc: str | None = None\n        is_all_day: bool | None = None\n        start_date: str | None = None\n        due_date: str | None = None\n        time_zone: str | None = None\n        reminders: list[str] | None = None\n        repeat_flag: str | None = None\n        priority: Literal[0, 1, 3, 5] | None = None\n        sort_order: int | None = None\n        items: list[CreateItemV1] | None = None\n    }\n\n    class ProjectsRespV1 {\n        root: list[ProjectV1]\n    }\n\n    class UpdateProjectV1 {\n        name: str | None = None\n        color: Color | None = None\n        sort_order: int | None = None\n        view_mode: Literal['list', 'kanban', 'timeline'] | None = None\n        kind: Literal['TASK', 'NOTE'] | None = None\n    }\n\n    class OAuthTokenURLV1 {\n        client_id: str\n        client_secret: str\n        code: str\n        oauth_redirect_url: HttpUrl = http://127.0.0.1:8080/\n        scope: Literal['tasks:read tasks:write'] = 'tasks:read tasks:write'\n        grant_type: Literal['authorization_code'] = 'authorization_code'\n        base_url: HttpUrl = https://ticktick.com/oauth/token\n    }\n\n    OAuthAuthorizeURLV1 ..&gt; HttpUrl\n    OAuthAuthorizeURLV1 ..&gt; Any\n    OAuthTokenURLV1 ..&gt; HttpUrl\n    CreateProjectV1 ..&gt; Color\n    UpdateProjectV1 ..&gt; Color\n    CreateTaskV1 ..&gt; CreateItemV1\n    UpdateTaskV1 ..&gt; UpdateItemV1\n    OAuthTokenV1 ..&gt; UUID\n    ProjectDataRespV1 ..&gt; TaskRespV1\n    ProjectDataRespV1 ..&gt; ColumnV1\n    ProjectDataRespV1 ..&gt; ProjectV1\n    ProjectRespV1 ..&gt; ProjectV1\n    ProjectsRespV1 ..&gt; ProjectV1\n    TaskRespV1 ..&gt; ItemV1\n\n</code></pre> <p>Info</p> <p>This was auto-generated code by pydantic-2-mermaid.</p>"},{"location":"reference/models/v1/parameters/oauth/","title":"OAuth","text":""},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth","title":"pyticktick.models.v1.parameters.oauth","text":"<p>OAuth2 URL parameters for the V1 API.</p> <p>This module contains the Pydantic models that generate the OAuth2 URLs for the V1 API authorization flow.</p> <p>Classes:</p> Name Description <code>OAuthAuthorizeURLV1</code> <p>OAuth2 authorize URL parameters for V1 API.</p> <code>OAuthTokenURLV1</code> <p>OAuth2 token URL parameters for V1 API.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1","title":"OAuthAuthorizeURLV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>OAuth2 authorize URL parameters for V1 API.</p> <p>Helper class to generate the OAuth2 authorize URL for the V1 API. This is the first step in the OAuth2 flow.</p> Example <p><pre><code>from pyticktick.models.v1.parameters.oauth import OAuthAuthorizeURLV1\n\noauth_url = OAuthAuthorizeURLV1(client_id=\"your_client_id\")\nprint(oauth_url.model_dump())\n</code></pre> would print: <pre><code>https://ticktick.com/oauth/authorize?client_id=your_client_id&amp;scope=tasks%3Aread+tasks%3Awrite&amp;state=None&amp;response_type=code\n</code></pre></p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"OAuth2 authorize URL parameters for V1 API.\\n\\nHelper class to generate the OAuth2 authorize URL for the V1 API. This is the\\n[first step](https://developer.ticktick.com/api#/openapi?id=first-step) in the\\nOAuth2 flow.\\n\\n???+ example\\n    ```python\\n    from pyticktick.models.v1.parameters.oauth import OAuthAuthorizeURLV1\\n\\n    oauth_url = OAuthAuthorizeURLV1(client_id=\\\"your_client_id\\\")\\n    print(oauth_url.model_dump())\\n    ```\\n    would print:\\n    ```\\n    https://ticktick.com/oauth/authorize?client_id=your_client_id&amp;scope=tasks%3Aread+tasks%3Awrite&amp;state=None&amp;response_type=code\\n    ```\",\n  \"properties\": {\n    \"client_id\": {\n      \"description\": \"V1 API App unique client id. Taken from the [Manage Apps](https://developer.ticktick.com/manage) page.\",\n      \"title\": \"Client Id\",\n      \"type\": \"string\"\n    },\n    \"scope\": {\n      \"const\": \"tasks:read tasks:write\",\n      \"default\": \"tasks:read tasks:write\",\n      \"description\": \"Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.\",\n      \"title\": \"Scope\",\n      \"type\": \"string\"\n    },\n    \"state\": {\n      \"default\": null,\n      \"description\": \"Passed to redirect url as is.\",\n      \"title\": \"State\"\n    },\n    \"response_type\": {\n      \"const\": \"code\",\n      \"default\": \"code\",\n      \"description\": \"Fixed value 'code'.\",\n      \"title\": \"Response Type\",\n      \"type\": \"string\"\n    },\n    \"base_url\": {\n      \"default\": \"https://ticktick.com/oauth/authorize\",\n      \"description\": \"OAuth2 authorize URL.\",\n      \"format\": \"uri\",\n      \"maxLength\": 2083,\n      \"minLength\": 1,\n      \"title\": \"Base Url\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"client_id\"\n  ],\n  \"title\": \"OAuthAuthorizeURLV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>client_id</code>                 (<code>str</code>)             </li> <li> <code>scope</code>                 (<code>Literal['tasks:read tasks:write']</code>)             </li> <li> <code>state</code>                 (<code>Any</code>)             </li> <li> <code>response_type</code>                 (<code>Literal['code']</code>)             </li> <li> <code>base_url</code>                 (<code>HttpUrl</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.base_url","title":"base_url  <code>pydantic-field</code>","text":"<pre><code>base_url: HttpUrl = HttpUrl(\n    \"https://ticktick.com/oauth/authorize\"\n)\n</code></pre> <p>OAuth2 authorize URL.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.client_id","title":"client_id  <code>pydantic-field</code>","text":"<pre><code>client_id: str\n</code></pre> <p>V1 API App unique client id. Taken from the Manage Apps page.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.response_type","title":"response_type  <code>pydantic-field</code>","text":"<pre><code>response_type: Literal['code'] = 'code'\n</code></pre> <p>Fixed value 'code'.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.scope","title":"scope  <code>pydantic-field</code>","text":"<pre><code>scope: Literal[\"tasks:read tasks:write\"] = (\n    \"tasks:read tasks:write\"\n)\n</code></pre> <p>Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.state","title":"state  <code>pydantic-field</code>","text":"<pre><code>state: Any = None\n</code></pre> <p>Passed to redirect url as is.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthAuthorizeURLV1.ser_model","title":"ser_model","text":"<pre><code>ser_model() -&gt; str\n</code></pre> <p>Serialize the model to a URL string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The URL string.</p> Source code in <code>src/pyticktick/models/v1/parameters/oauth.py</code> <pre><code>@model_serializer\ndef ser_model(self) -&gt; str:\n    \"\"\"Serialize the model to a URL string.\n\n    Returns:\n        str: The URL string.\n    \"\"\"\n    params = {\n        \"client_id\": self.client_id,\n        \"scope\": self.scope,\n        \"state\": self.state,\n        \"response_type\": self.response_type,\n    }\n    return f\"{self.base_url}?{urlencode(params)}\"\n</code></pre>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1","title":"OAuthTokenURLV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>OAuth2 token URL parameters for V1 API.</p> <p>Helper class to generate the OAuth2 token URL for the V1 API. This is the third step in the OAuth2 flow.</p> Example <p><pre><code>from pyticktick.models.v1.parameters.oauth import OAuthTokenURLV1\n\noauth_url = OAuthTokenURLV1(\n    client_id=\"your_client_id\",\n    client_secret=\"your_client_secret\",\n    code=\"your_code\",\n)\nprint(oauth_url.model_dump())\n</code></pre> would print: <pre><code>https://ticktick.com/oauth/token?client_id=your_client_id&amp;client_secret=your_client_secret&amp;code=your_code&amp;grant_type=authorization_code&amp;scope=tasks%3Aread+tasks%3Awrite&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8080%2F\n</code></pre></p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"OAuth2 token URL parameters for V1 API.\\n\\nHelper class to generate the OAuth2 token URL for the V1 API. This is the\\n[third step](https://developer.ticktick.com/api#/openapi?id=third-step) in the\\nOAuth2 flow.\\n\\n???+ example\\n    ```python\\n    from pyticktick.models.v1.parameters.oauth import OAuthTokenURLV1\\n\\n    oauth_url = OAuthTokenURLV1(\\n        client_id=\\\"your_client_id\\\",\\n        client_secret=\\\"your_client_secret\\\",\\n        code=\\\"your_code\\\",\\n    )\\n    print(oauth_url.model_dump())\\n    ```\\n    would print:\\n    ```\\n    https://ticktick.com/oauth/token?client_id=your_client_id&amp;client_secret=your_client_secret&amp;code=your_code&amp;grant_type=authorization_code&amp;scope=tasks%3Aread+tasks%3Awrite&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8080%2F\\n    ```\",\n  \"properties\": {\n    \"client_id\": {\n      \"description\": \"V1 API App unique client id. Taken from the [Manage Apps](https://developer.ticktick.com/manage) page.\",\n      \"title\": \"Client Id\",\n      \"type\": \"string\"\n    },\n    \"client_secret\": {\n      \"description\": \"V1 API App unique client secret. Taken from the [Manage Apps](https://developer.ticktick.com/manage) page.\",\n      \"title\": \"Client Secret\",\n      \"type\": \"string\"\n    },\n    \"code\": {\n      \"description\": \"The code received from the OAuth2 authorize URL.\",\n      \"title\": \"Code\",\n      \"type\": \"string\"\n    },\n    \"oauth_redirect_url\": {\n      \"default\": \"http://127.0.0.1:8080/\",\n      \"description\": \"The redirect URL. Can be any URL, but should be one that does not collide with other applications.\",\n      \"format\": \"uri\",\n      \"maxLength\": 2083,\n      \"minLength\": 1,\n      \"title\": \"Oauth Redirect Url\",\n      \"type\": \"string\"\n    },\n    \"scope\": {\n      \"const\": \"tasks:read tasks:write\",\n      \"default\": \"tasks:read tasks:write\",\n      \"description\": \"Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.\",\n      \"title\": \"Scope\",\n      \"type\": \"string\"\n    },\n    \"grant_type\": {\n      \"const\": \"authorization_code\",\n      \"default\": \"authorization_code\",\n      \"description\": \"Fixed value 'authorization_code'.\",\n      \"title\": \"Grant Type\",\n      \"type\": \"string\"\n    },\n    \"base_url\": {\n      \"default\": \"https://ticktick.com/oauth/token\",\n      \"description\": \"OAuth2 token URL.\",\n      \"format\": \"uri\",\n      \"maxLength\": 2083,\n      \"minLength\": 1,\n      \"title\": \"Base Url\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"client_id\",\n    \"client_secret\",\n    \"code\"\n  ],\n  \"title\": \"OAuthTokenURLV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>client_id</code>                 (<code>str</code>)             </li> <li> <code>client_secret</code>                 (<code>str</code>)             </li> <li> <code>code</code>                 (<code>str</code>)             </li> <li> <code>oauth_redirect_url</code>                 (<code>HttpUrl</code>)             </li> <li> <code>scope</code>                 (<code>Literal['tasks:read tasks:write']</code>)             </li> <li> <code>grant_type</code>                 (<code>Literal['authorization_code']</code>)             </li> <li> <code>base_url</code>                 (<code>HttpUrl</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.base_url","title":"base_url  <code>pydantic-field</code>","text":"<pre><code>base_url: HttpUrl = HttpUrl(\n    \"https://ticktick.com/oauth/token\"\n)\n</code></pre> <p>OAuth2 token URL.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.client_id","title":"client_id  <code>pydantic-field</code>","text":"<pre><code>client_id: str\n</code></pre> <p>V1 API App unique client id. Taken from the Manage Apps page.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.client_secret","title":"client_secret  <code>pydantic-field</code>","text":"<pre><code>client_secret: str\n</code></pre> <p>V1 API App unique client secret. Taken from the Manage Apps page.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.code","title":"code  <code>pydantic-field</code>","text":"<pre><code>code: str\n</code></pre> <p>The code received from the OAuth2 authorize URL.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.grant_type","title":"grant_type  <code>pydantic-field</code>","text":"<pre><code>grant_type: Literal[\"authorization_code\"] = (\n    \"authorization_code\"\n)\n</code></pre> <p>Fixed value 'authorization_code'.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.oauth_redirect_url","title":"oauth_redirect_url  <code>pydantic-field</code>","text":"<pre><code>oauth_redirect_url: HttpUrl = HttpUrl(\n    \"http://127.0.0.1:8080/\"\n)\n</code></pre> <p>The redirect URL. Can be any URL, but should be one that does not collide with other applications.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.scope","title":"scope  <code>pydantic-field</code>","text":"<pre><code>scope: Literal[\"tasks:read tasks:write\"] = (\n    \"tasks:read tasks:write\"\n)\n</code></pre> <p>Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.</p>"},{"location":"reference/models/v1/parameters/oauth/#pyticktick.models.v1.parameters.oauth.OAuthTokenURLV1.ser_model","title":"ser_model","text":"<pre><code>ser_model() -&gt; str\n</code></pre> <p>Serialize the model to a URL string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The OAuth URL string.</p> Source code in <code>src/pyticktick/models/v1/parameters/oauth.py</code> <pre><code>@model_serializer\ndef ser_model(self) -&gt; str:\n    \"\"\"Serialize the model to a URL string.\n\n    Returns:\n        str: The OAuth URL string.\n    \"\"\"\n    params = {\n        \"client_id\": self.client_id,\n        \"client_secret\": self.client_secret,\n        \"code\": self.code,\n        \"grant_type\": self.grant_type,\n        \"scope\": self.scope,\n        \"redirect_uri\": self.oauth_redirect_url,\n    }\n    return f\"{self.base_url}?{urlencode(params)}\"\n</code></pre>"},{"location":"reference/models/v1/parameters/project/","title":"Project","text":""},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project","title":"pyticktick.models.v1.parameters.project","text":"<p>Parameters for creating and updating projects via the V1 API.</p> <p>Classes:</p> Name Description <code>CreateProjectV1</code> <p>Model for creating a project via the V1 API.</p> <code>UpdateProjectV1</code> <p>Model for updating a project via the V1 API.</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1","title":"CreateProjectV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for creating a project via the V1 API.</p> <p>This model is used to create a project via the V1 API. It directly maps to the create project documentation in the API docs.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a project via the V1 API.\\n\\nThis model is used to create a project via the V1 API. It directly maps to the\\n[create project](https://developer.ticktick.com/docs#/openapi?id=create-project)\\ndocumentation in the API docs.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"name of the project\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"color of project, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"sort order value of the project\",\n      \"title\": \"Sort Order\"\n    },\n    \"view_mode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"View Mode\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"CreateProjectV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>color of project, eg. '#F18181'</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>name of the project</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>sort order value of the project</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.CreateProjectV1.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1","title":"UpdateProjectV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for updating a project via the V1 API.</p> <p>This model is used to update a project via the V1 API. It directly maps to the update project documentation in the API docs.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a project via the V1 API.\\n\\nThis model is used to update a project via the V1 API. It directly maps to the\\n[update project](https://developer.ticktick.com/docs#/openapi?id=update-project)\\ndocumentation in the API docs.\",\n  \"properties\": {\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"name of the project\",\n      \"title\": \"Name\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"color of project, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"sort order value of the project\",\n      \"title\": \"Sort Order\"\n    },\n    \"view_mode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"View Mode\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    }\n  },\n  \"title\": \"UpdateProjectV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>color of project, eg. '#F18181'</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str | None = None\n</code></pre> <p>name of the project</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>sort order value of the project</p>"},{"location":"reference/models/v1/parameters/project/#pyticktick.models.v1.parameters.project.UpdateProjectV1.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v1/parameters/task/","title":"Task","text":""},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task","title":"pyticktick.models.v1.parameters.task","text":"<p>Parameters for creating and updating tasks via the V1 API.</p> <p>Classes:</p> Name Description <code>CreateItemV1</code> <p>Model for creating a checklist item via the V1 API.</p> <code>CreateTaskV1</code> <p>Model for creating a task via the V1 API.</p> <code>UpdateItemV1</code> <p>Model for updating a checklist item via the V1 API.</p> <code>UpdateTaskV1</code> <p>Model for updating a task via the V1 API.</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1","title":"CreateItemV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for creating a checklist item via the V1 API.</p> <p>This model is used to create a checklist item via the V1 API. It directly maps to the 'items' field in the create task documentation. It is used in the <code>CreateTaskV1</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a checklist item via the V1 API.\\n\\nThis model is used to create a checklist item via the V1 API. It directly maps to\\nthe 'items' field in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. It is used in the `CreateTaskV1` model.\",\n  \"properties\": {\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Subtask title\",\n      \"title\": \"Title\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"All day\",\n      \"title\": \"Is All Day\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The order of checklist item\",\n      \"title\": \"Sort Order\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The time zone in which the Start time is specified\",\n      \"title\": \"Time Zone\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The completion status of checklist item\",\n      \"title\": \"Status\"\n    },\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Completed Time\"\n    }\n  },\n  \"title\": \"CreateItemV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>time_zone</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>bool | None</code>)             </li> <li> <code>completed_time</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: str | None = None\n</code></pre> <p>Completed time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>The order of checklist item</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: bool | None = None\n</code></pre> <p>The completion status of checklist item</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str | None = None\n</code></pre> <p>The time zone in which the Start time is specified</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateItemV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Subtask title</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1","title":"CreateTaskV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for creating a task via the V1 API.</p> <p>This model is used to create a task via the V1 API. It directly maps to the create task documentation in the API docs.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateItemV1\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a checklist item via the V1 API.\\n\\nThis model is used to create a checklist item via the V1 API. It directly maps to\\nthe 'items' field in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. It is used in the `CreateTaskV1` model.\",\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask title\",\n          \"title\": \"Title\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"All day\",\n          \"title\": \"Is All Day\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The order of checklist item\",\n          \"title\": \"Sort Order\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The time zone in which the Start time is specified\",\n          \"title\": \"Time Zone\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Completed Time\"\n        }\n      },\n      \"title\": \"CreateItemV1\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a task via the V1 API.\\n\\nThis model is used to create a task via the V1 API. It directly maps to the\\n[create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation in the API docs.\",\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task id\",\n      \"title\": \"Id\"\n    },\n    \"title\": {\n      \"description\": \"Task title\",\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"description\": \"Task project id. (Note: This is missing in the API docs)\",\n      \"title\": \"Project Id\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task content\",\n      \"title\": \"Content\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task description of checklist\",\n      \"title\": \"Desc\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"All day\",\n      \"title\": \"Is All Day\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"due_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Due Date\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The time zone in which the time is specified\",\n      \"title\": \"Time Zone\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Lists of reminders specific to the task\",\n      \"title\": \"Reminders\"\n    },\n    \"repeat_flag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task\",\n      \"title\": \"Repeat Flag\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The priority of task, default is '0'\",\n      \"title\": \"Priority\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The order of task\",\n      \"title\": \"Sort Order\"\n    },\n    \"items\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/CreateItemV1\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The list of checklist items to create\",\n      \"title\": \"Items\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"project_id\"\n  ],\n  \"title\": \"CreateTaskV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str | None</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>time_zone</code>                 (<code>str | None</code>)             </li> <li> <code>reminders</code>                 (<code>list[str] | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>str | None</code>)             </li> <li> <code>priority</code>                 (<code>Literal[0, 1, 3, 5] | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>items</code>                 (<code>list[CreateItemV1] | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Task content</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Task description of checklist</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: str | None = None\n</code></pre> <p>Due date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str | None = None\n</code></pre> <p>Task id</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[CreateItemV1] | None = None\n</code></pre> <p>The list of checklist items to create</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Literal[0, 1, 3, 5] | None = None\n</code></pre> <p>The priority of task, default is '0'</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>Task project id. (Note: This is missing in the API docs)</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[str] | None = None\n</code></pre> <p>Lists of reminders specific to the task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: str | None = None\n</code></pre> <p>Recurring rules of task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>The order of task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str | None = None\n</code></pre> <p>The time zone in which the time is specified</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.CreateTaskV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>Task title</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1","title":"UpdateItemV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for updating a checklist item via the V1 API.</p> <p>This model is used to update a checklist item via the V1 API. It directly maps to the 'items' field in the update task documentation. It is used in the <code>UpdateTaskV1</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a checklist item via the V1 API.\\n\\nThis model is used to update a checklist item via the V1 API. It directly maps to\\nthe 'items' field in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. It is used in the `UpdateTaskV1` model.\",\n  \"properties\": {\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Subtask title\",\n      \"title\": \"Title\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"All day\",\n      \"title\": \"Is All Day\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The order of checklist item\",\n      \"title\": \"Sort Order\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The time zone in which the Start time is specified\",\n      \"title\": \"Time Zone\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The completion status of checklist item\",\n      \"title\": \"Status\"\n    },\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Completed Time\"\n    }\n  },\n  \"title\": \"UpdateItemV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>time_zone</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>bool | None</code>)             </li> <li> <code>completed_time</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: str | None = None\n</code></pre> <p>Completed time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>The order of checklist item</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: bool | None = None\n</code></pre> <p>The completion status of checklist item</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str | None = None\n</code></pre> <p>The time zone in which the Start time is specified</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateItemV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Subtask title</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1","title":"UpdateTaskV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for updating a task via the V1 API.</p> <p>This model is used to updating a task via the V1 API. It directly maps to the update task documentation in the API docs.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"UpdateItemV1\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a checklist item via the V1 API.\\n\\nThis model is used to update a checklist item via the V1 API. It directly maps to\\nthe 'items' field in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. It is used in the `UpdateTaskV1` model.\",\n      \"properties\": {\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask title\",\n          \"title\": \"Title\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"All day\",\n          \"title\": \"Is All Day\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The order of checklist item\",\n          \"title\": \"Sort Order\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The time zone in which the Start time is specified\",\n          \"title\": \"Time Zone\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Completed Time\"\n        }\n      },\n      \"title\": \"UpdateItemV1\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a task via the V1 API.\\n\\nThis model is used to updating a task via the V1 API. It directly maps to the\\n[update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation in the API docs.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Task id\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"description\": \"Task project id\",\n      \"title\": \"Project Id\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task title\",\n      \"title\": \"Title\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task content\",\n      \"title\": \"Content\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task description of checklist\",\n      \"title\": \"Desc\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"All day\",\n      \"title\": \"Is All Day\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"due_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Due Date\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The time zone in which the time is specified\",\n      \"title\": \"Time Zone\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Lists of reminders specific to the task\",\n      \"title\": \"Reminders\"\n    },\n    \"repeat_flag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task\",\n      \"title\": \"Repeat Flag\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The priority of task, default is '0'\",\n      \"title\": \"Priority\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The order of task\",\n      \"title\": \"Sort Order\"\n    },\n    \"items\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UpdateItemV1\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The list of checklist items to update\",\n      \"title\": \"Items\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"project_id\"\n  ],\n  \"title\": \"UpdateTaskV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>time_zone</code>                 (<code>str | None</code>)             </li> <li> <code>reminders</code>                 (<code>list[str] | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>str | None</code>)             </li> <li> <code>priority</code>                 (<code>Literal[0, 1, 3, 5] | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>items</code>                 (<code>list[UpdateItemV1] | None</code>)             </li> </ul>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Task content</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Task description of checklist</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: str | None = None\n</code></pre> <p>Due date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str\n</code></pre> <p>Task id</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[UpdateItemV1] | None = None\n</code></pre> <p>The list of checklist items to update</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Literal[0, 1, 3, 5] | None = None\n</code></pre> <p>The priority of task, default is '0'</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>Task project id</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[str] | None = None\n</code></pre> <p>Lists of reminders specific to the task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: str | None = None\n</code></pre> <p>Recurring rules of task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>The order of task</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str | None = None\n</code></pre> <p>The time zone in which the time is specified</p>"},{"location":"reference/models/v1/parameters/task/#pyticktick.models.v1.parameters.task.UpdateTaskV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Task title</p>"},{"location":"reference/models/v1/responses/oauth/","title":"OAuth","text":""},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth","title":"pyticktick.models.v1.responses.oauth","text":"<p>Pydantic response models for the OAuth2 flow in the V1 API.</p> <p>Classes:</p> Name Description <code>OAuthTokenV1</code> <p>Response of the POST request in the third step of the OAuth2 flow.</p>"},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth.OAuthTokenV1","title":"OAuthTokenV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Response of the POST request in the third step of the OAuth2 flow.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Response of the POST request in the [third step](https://developer.ticktick.com/docs#/openapi?id=third-step) of the OAuth2 flow.\",\n  \"properties\": {\n    \"access_token\": {\n      \"description\": \"OAuth2 access token for the V1 API.\",\n      \"format\": \"uuid4\",\n      \"title\": \"Access Token\",\n      \"type\": \"string\"\n    },\n    \"expires_in\": {\n      \"description\": \"Access token expiration time in seconds from the time of issue. Usually lasts 6 months.\",\n      \"title\": \"Expires In\",\n      \"type\": \"integer\"\n    },\n    \"token_type\": {\n      \"const\": \"bearer\",\n      \"default\": \"bearer\",\n      \"description\": \"Fixed value 'bearer'.\",\n      \"title\": \"Token Type\",\n      \"type\": \"string\"\n    },\n    \"scope\": {\n      \"const\": \"tasks:read tasks:write\",\n      \"default\": \"tasks:read tasks:write\",\n      \"description\": \"Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.\",\n      \"title\": \"Scope\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"access_token\",\n    \"expires_in\"\n  ],\n  \"title\": \"OAuthTokenV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>access_token</code>                 (<code>UUID4</code>)             </li> <li> <code>expires_in</code>                 (<code>int</code>)             </li> <li> <code>token_type</code>                 (<code>Literal['bearer']</code>)             </li> <li> <code>scope</code>                 (<code>Literal['tasks:read tasks:write']</code>)             </li> </ul>"},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth.OAuthTokenV1.access_token","title":"access_token  <code>pydantic-field</code>","text":"<pre><code>access_token: UUID4\n</code></pre> <p>OAuth2 access token for the V1 API.</p>"},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth.OAuthTokenV1.expires_in","title":"expires_in  <code>pydantic-field</code>","text":"<pre><code>expires_in: int\n</code></pre> <p>Access token expiration time in seconds from the time of issue. Usually lasts 6 months.</p>"},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth.OAuthTokenV1.scope","title":"scope  <code>pydantic-field</code>","text":"<pre><code>scope: Literal[\"tasks:read tasks:write\"] = (\n    \"tasks:read tasks:write\"\n)\n</code></pre> <p>Spaces-separated permissions for the generated token. The currently available scopes are 'tasks:write' and 'tasks:read'. Default is 'tasks:read tasks:write'.</p>"},{"location":"reference/models/v1/responses/oauth/#pyticktick.models.v1.responses.oauth.OAuthTokenV1.token_type","title":"token_type  <code>pydantic-field</code>","text":"<pre><code>token_type: Literal['bearer'] = 'bearer'\n</code></pre> <p>Fixed value 'bearer'.</p>"},{"location":"reference/models/v1/responses/project/","title":"Project","text":""},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project","title":"pyticktick.models.v1.responses.project","text":"<p>Response models for project related endpoints in TickTick API v1.</p> <p>Classes:</p> Name Description <code>ColumnV1</code> <p>Model for a response with column information in the V1 API.</p> <code>ProjectDataRespV1</code> <p>Model for a response with more detailed project information in the V1 API.</p> <code>ProjectRespV1</code> <p>Model for a response from the <code>GET /project/{project_id}</code> endpoint in the V1 API.</p> <code>ProjectV1</code> <p>Model for a response with high-level project information in the V1 API.</p> <code>ProjectsRespV1</code> <p>Model for a response from the <code>GET /project</code> endpoint in the V1 API.</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ColumnV1","title":"ColumnV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for a response with column information in the V1 API.</p> <p>This model is used to represent a column in the V1 API. It is used in the <code>ProjectDataRespV1</code> model to represent columns under a project. It maps directly to the column definition in the V1 API docs.</p> <p>It is useful for Kanban views of tasks.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Model for a response with column information in the V1 API.\\n\\nThis model is used to represent a column in the V1 API. It is used in the\\n`ProjectDataRespV1` model to represent columns under a project. It maps directly to\\nthe [column](https://developer.ticktick.com/docs#/openapi?id=column) definition in\\nthe V1 API docs.\\n\\nIt is useful for Kanban views of tasks.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Column identifier\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"projectId\": {\n      \"description\": \"Project identifier\",\n      \"title\": \"Projectid\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"Column name\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"sortOrder\": {\n      \"description\": \"Order value\",\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"projectId\",\n    \"name\",\n    \"sortOrder\"\n  ],\n  \"title\": \"ColumnV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> </ul>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ColumnV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str\n</code></pre> <p>Column identifier</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ColumnV1.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Column name</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ColumnV1.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>Project identifier</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ColumnV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int\n</code></pre> <p>Order value</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectDataRespV1","title":"ProjectDataRespV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for a response with more detailed project information in the V1 API.</p> <p>This model is used to represent a project in the V1 API with more detailed information. It includes the project itself, the tasks under the project, and the columns, if any. It is used in the <code>GET /project/{project_id}/data</code> endpoint. It maps directly to the project data definition in the V1 API docs.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ColumnV1\": {\n      \"description\": \"Model for a response with column information in the V1 API.\\n\\nThis model is used to represent a column in the V1 API. It is used in the\\n`ProjectDataRespV1` model to represent columns under a project. It maps directly to\\nthe [column](https://developer.ticktick.com/docs#/openapi?id=column) definition in\\nthe V1 API docs.\\n\\nIt is useful for Kanban views of tasks.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Column identifier\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"projectId\": {\n          \"description\": \"Project identifier\",\n          \"title\": \"Projectid\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"Column name\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"sortOrder\": {\n          \"description\": \"Order value\",\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"projectId\",\n        \"name\",\n        \"sortOrder\"\n      ],\n      \"title\": \"ColumnV1\",\n      \"type\": \"object\"\n    },\n    \"ItemV1\": {\n      \"description\": \"Model for a response with checklist item information in the V1 API.\\n\\nThis model is used to represent a checklist item in the V1 API. It is used in the\\n`TaskRespV1` model to represent checklist items of a task. It maps directly to the [checklistitem](https://developer.ticktick.com/docs#/openapi?id=checklistitem)\\ndefinition in the V1 API docs.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Subtask identifier\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"description\": \"Subtask title\",\n          \"title\": \"Title\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"description\": \"The completion status of checklist item. Normal: 0, Completed: 1\",\n          \"title\": \"Status\",\n          \"type\": \"boolean\"\n        },\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask completed time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Completedtime\"\n        },\n        \"isAllDay\": {\n          \"description\": \"All day\",\n          \"title\": \"Isallday\",\n          \"type\": \"boolean\"\n        },\n        \"sortOrder\": {\n          \"description\": \"Subtask sort order\",\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask start date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Startdate\"\n        },\n        \"timeZone\": {\n          \"description\": \"Subtask timezone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"title\",\n        \"status\",\n        \"isAllDay\",\n        \"sortOrder\",\n        \"timeZone\"\n      ],\n      \"title\": \"ItemV1\",\n      \"type\": \"object\"\n    },\n    \"ProjectV1\": {\n      \"description\": \"Model for a response with high-level project information in the V1 API.\\n\\nThis model is used to represent a project in the V1 API. It is used in a few\\ndifferent endpoints, including `GET /project`, `GET /project/{project_id}`,\\n`POST /project`, and `POST /project/{project_id}`. It maps directly to the [project](https://developer.ticktick.com/docs#/openapi?id=project-1)\\ndefinition in the V1 API docs.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Project identifier\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"Project name\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Project color, eg. #F18181\",\n          \"title\": \"Color\"\n        },\n        \"sortOrder\": {\n          \"description\": \"Order value\",\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"closed\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Project closed\",\n          \"title\": \"Closed\"\n        },\n        \"groupId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Project group identifier\",\n          \"title\": \"Groupid\"\n        },\n        \"viewMode\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"list\",\n                \"kanban\",\n                \"timeline\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n          \"title\": \"Viewmode\"\n        },\n        \"permission\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"read\",\n                \"write\",\n                \"comment\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"\\\"read\\\", \\\"write\\\" or \\\"comment\\\"\",\n          \"title\": \"Permission\"\n        },\n        \"kind\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"TASK\",\n                \"NOTE\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n          \"title\": \"Kind\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"sortOrder\"\n      ],\n      \"title\": \"ProjectV1\",\n      \"type\": \"object\"\n    },\n    \"TaskRespV1\": {\n      \"description\": \"Model for a response with task information in the V1 API.\\n\\nThis model is used to represent a task in the V1 API. It is used in a few different\\nendpoints, including `GET /project/{project_id}/task/{task_id}`, `POST /task`, and\\n`POST /task/{task_id}`. It maps directly to the [task](https://developer.ticktick.com/docs#/openapi?id=task-1)\\ndefinition in the V1 API docs.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Project identifier\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"projectId\": {\n          \"description\": \"Task project id\",\n          \"title\": \"Projectid\",\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"description\": \"Task title\",\n          \"title\": \"Title\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"description\": \"All day\",\n          \"title\": \"Isallday\",\n          \"type\": \"boolean\"\n        },\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task completed time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Completedtime\"\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task content\",\n          \"title\": \"Content\"\n        },\n        \"desc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task description of checklist\",\n          \"title\": \"Desc\"\n        },\n        \"dueDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task due date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Duedate\"\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/ItemV1\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtasks of Task\",\n          \"title\": \"Items\"\n        },\n        \"priority\": {\n          \"description\": \"Task priority. None:0, Low:1, Medium:3, High:5\",\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"title\": \"Priority\",\n          \"type\": \"integer\"\n        },\n        \"reminders\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"List of reminder triggers. Example: ['TRIGGER:P0DT9H0M0S', 'TRIGGER:PT0S']\",\n          \"title\": \"Reminders\"\n        },\n        \"repeatFlag\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Recurring rules of task. Example: 'RRULE:FREQ=DAILY;INTERVAL=1'\",\n          \"title\": \"Repeatflag\"\n        },\n        \"sortOrder\": {\n          \"description\": \"Task sort order\",\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"description\": \"Task completion status. Normal: 0, Completed: 2\",\n          \"title\": \"Status\",\n          \"type\": \"boolean\"\n        },\n        \"timeZone\": {\n          \"description\": \"Task timezone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"projectId\",\n        \"title\",\n        \"isAllDay\",\n        \"priority\",\n        \"sortOrder\",\n        \"status\",\n        \"timeZone\"\n      ],\n      \"title\": \"TaskRespV1\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Model for a response with more detailed project information in the V1 API.\\n\\nThis model is used to represent a project in the V1 API with more detailed\\ninformation. It includes the project itself, the tasks under the project, and the\\ncolumns, if any. It is used in the `GET /project/{project_id}/data` endpoint. It\\nmaps directly to the [project data](https://developer.ticktick.com/docs#/openapi?id=projectdata)\\ndefinition in the V1 API docs.\",\n  \"properties\": {\n    \"project\": {\n      \"$ref\": \"#/$defs/ProjectV1\",\n      \"description\": \"Project info\"\n    },\n    \"tasks\": {\n      \"description\": \"Undone tasks under project\",\n      \"items\": {\n        \"$ref\": \"#/$defs/TaskRespV1\"\n      },\n      \"title\": \"Tasks\",\n      \"type\": \"array\"\n    },\n    \"columns\": {\n      \"description\": \"Columns under project\",\n      \"items\": {\n        \"$ref\": \"#/$defs/ColumnV1\"\n      },\n      \"title\": \"Columns\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"project\",\n    \"tasks\",\n    \"columns\"\n  ],\n  \"title\": \"ProjectDataRespV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>project</code>                 (<code>ProjectV1</code>)             </li> <li> <code>tasks</code>                 (<code>list[TaskRespV1]</code>)             </li> <li> <code>columns</code>                 (<code>list[ColumnV1]</code>)             </li> </ul>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectDataRespV1.columns","title":"columns  <code>pydantic-field</code>","text":"<pre><code>columns: list[ColumnV1]\n</code></pre> <p>Columns under project</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectDataRespV1.project","title":"project  <code>pydantic-field</code>","text":"<pre><code>project: ProjectV1\n</code></pre> <p>Project info</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectDataRespV1.tasks","title":"tasks  <code>pydantic-field</code>","text":"<pre><code>tasks: list[TaskRespV1]\n</code></pre> <p>Undone tasks under project</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectRespV1","title":"ProjectRespV1","text":"<p>               Bases: <code>RootModel[ProjectV1]</code></p> <p>Model for a response from the <code>GET /project/{project_id}</code> endpoint in the V1 API.</p> <p>This model is used to represent a single project in the V1 API. It corresponds to the the <code>GET /project/{project_id}</code> V1 endpoint.</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1","title":"ProjectV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for a response with high-level project information in the V1 API.</p> <p>This model is used to represent a project in the V1 API. It is used in a few different endpoints, including <code>GET /project</code>, <code>GET /project/{project_id}</code>, <code>POST /project</code>, and <code>POST /project/{project_id}</code>. It maps directly to the project definition in the V1 API docs.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Model for a response with high-level project information in the V1 API.\\n\\nThis model is used to represent a project in the V1 API. It is used in a few\\ndifferent endpoints, including `GET /project`, `GET /project/{project_id}`,\\n`POST /project`, and `POST /project/{project_id}`. It maps directly to the [project](https://developer.ticktick.com/docs#/openapi?id=project-1)\\ndefinition in the V1 API docs.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Project identifier\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"Project name\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Project color, eg. #F18181\",\n      \"title\": \"Color\"\n    },\n    \"sortOrder\": {\n      \"description\": \"Order value\",\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"closed\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Project closed\",\n      \"title\": \"Closed\"\n    },\n    \"groupId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Project group identifier\",\n      \"title\": \"Groupid\"\n    },\n    \"viewMode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"Viewmode\"\n    },\n    \"permission\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"read\",\n            \"write\",\n            \"comment\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"read\\\", \\\"write\\\" or \\\"comment\\\"\",\n      \"title\": \"Permission\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"sortOrder\"\n  ],\n  \"title\": \"ProjectV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>color</code>                 (<code>str | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>closed</code>                 (<code>bool | None</code>)             </li> <li> <code>group_id</code>                 (<code>str | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>permission</code>                 (<code>Literal['read', 'write', 'comment'] | None</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> </ul>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.closed","title":"closed  <code>pydantic-field</code>","text":"<pre><code>closed: bool | None = None\n</code></pre> <p>Project closed</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: str | None = None\n</code></pre> <p>Project color, eg. #F18181</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.group_id","title":"group_id  <code>pydantic-field</code>","text":"<pre><code>group_id: str | None = None\n</code></pre> <p>Project group identifier</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str\n</code></pre> <p>Project identifier</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Project name</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.permission","title":"permission  <code>pydantic-field</code>","text":"<pre><code>permission: Literal[\"read\", \"write\", \"comment\"] | None = (\n    None\n)\n</code></pre> <p>\"read\", \"write\" or \"comment\"</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int\n</code></pre> <p>Order value</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectV1.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v1/responses/project/#pyticktick.models.v1.responses.project.ProjectsRespV1","title":"ProjectsRespV1","text":"<p>               Bases: <code>RootModel[list[ProjectV1]]</code></p> <p>Model for a response from the <code>GET /project</code> endpoint in the V1 API.</p> <p>This model is used to represent a list of projects in the V1 API. It corresponds to the <code>GET /project</code> V1 endpoint.</p>"},{"location":"reference/models/v1/responses/task/","title":"Task","text":""},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task","title":"pyticktick.models.v1.responses.task","text":"<p>Response models for task related endpoints in TickTick API v1.</p> <p>Classes:</p> Name Description <code>ItemV1</code> <p>Model for a response with checklist item information in the V1 API.</p> <code>TaskRespV1</code> <p>Model for a response with task information in the V1 API.</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1","title":"ItemV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for a response with checklist item information in the V1 API.</p> <p>This model is used to represent a checklist item in the V1 API. It is used in the <code>TaskRespV1</code> model to represent checklist items of a task. It maps directly to the checklistitem definition in the V1 API docs.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Model for a response with checklist item information in the V1 API.\\n\\nThis model is used to represent a checklist item in the V1 API. It is used in the\\n`TaskRespV1` model to represent checklist items of a task. It maps directly to the [checklistitem](https://developer.ticktick.com/docs#/openapi?id=checklistitem)\\ndefinition in the V1 API docs.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Subtask identifier\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"description\": \"Subtask title\",\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"description\": \"The completion status of checklist item. Normal: 0, Completed: 1\",\n      \"title\": \"Status\",\n      \"type\": \"boolean\"\n    },\n    \"completedTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Subtask completed time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n      \"title\": \"Completedtime\"\n    },\n    \"isAllDay\": {\n      \"description\": \"All day\",\n      \"title\": \"Isallday\",\n      \"type\": \"boolean\"\n    },\n    \"sortOrder\": {\n      \"description\": \"Subtask sort order\",\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Subtask start date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n      \"title\": \"Startdate\"\n    },\n    \"timeZone\": {\n      \"description\": \"Subtask timezone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Timezone\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"title\",\n    \"status\",\n    \"isAllDay\",\n    \"sortOrder\",\n    \"timeZone\"\n  ],\n  \"title\": \"ItemV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>status</code>                 (<code>bool</code>)             </li> <li> <code>completed_time</code>                 (<code>str | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>time_zone</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>_status_from_int</code>                 \u2192                   <code>status</code> </li> </ul>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: str | None = None\n</code></pre> <p>Subtask completed time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code></p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str\n</code></pre> <p>Subtask identifier</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int\n</code></pre> <p>Subtask sort order</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Subtask start date time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code></p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: bool\n</code></pre> <p>The completion status of checklist item. Normal: 0, Completed: 1</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str\n</code></pre> <p>Subtask timezone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.ItemV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>Subtask title</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1","title":"TaskRespV1  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model for a response with task information in the V1 API.</p> <p>This model is used to represent a task in the V1 API. It is used in a few different endpoints, including <code>GET /project/{project_id}/task/{task_id}</code>, <code>POST /task</code>, and <code>POST /task/{task_id}</code>. It maps directly to the task definition in the V1 API docs.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemV1\": {\n      \"description\": \"Model for a response with checklist item information in the V1 API.\\n\\nThis model is used to represent a checklist item in the V1 API. It is used in the\\n`TaskRespV1` model to represent checklist items of a task. It maps directly to the [checklistitem](https://developer.ticktick.com/docs#/openapi?id=checklistitem)\\ndefinition in the V1 API docs.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Subtask identifier\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"description\": \"Subtask title\",\n          \"title\": \"Title\",\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"description\": \"The completion status of checklist item. Normal: 0, Completed: 1\",\n          \"title\": \"Status\",\n          \"type\": \"boolean\"\n        },\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask completed time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Completedtime\"\n        },\n        \"isAllDay\": {\n          \"description\": \"All day\",\n          \"title\": \"Isallday\",\n          \"type\": \"boolean\"\n        },\n        \"sortOrder\": {\n          \"description\": \"Subtask sort order\",\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Subtask start date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n          \"title\": \"Startdate\"\n        },\n        \"timeZone\": {\n          \"description\": \"Subtask timezone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"title\",\n        \"status\",\n        \"isAllDay\",\n        \"sortOrder\",\n        \"timeZone\"\n      ],\n      \"title\": \"ItemV1\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Model for a response with task information in the V1 API.\\n\\nThis model is used to represent a task in the V1 API. It is used in a few different\\nendpoints, including `GET /project/{project_id}/task/{task_id}`, `POST /task`, and\\n`POST /task/{task_id}`. It maps directly to the [task](https://developer.ticktick.com/docs#/openapi?id=task-1)\\ndefinition in the V1 API docs.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Project identifier\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"projectId\": {\n      \"description\": \"Task project id\",\n      \"title\": \"Projectid\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"description\": \"Task title\",\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"isAllDay\": {\n      \"description\": \"All day\",\n      \"title\": \"Isallday\",\n      \"type\": \"boolean\"\n    },\n    \"completedTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task completed time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n      \"title\": \"Completedtime\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task content\",\n      \"title\": \"Content\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task description of checklist\",\n      \"title\": \"Desc\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task due date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n      \"title\": \"Duedate\"\n    },\n    \"items\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ItemV1\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Subtasks of Task\",\n      \"title\": \"Items\"\n    },\n    \"priority\": {\n      \"description\": \"Task priority. None:0, Low:1, Medium:3, High:5\",\n      \"enum\": [\n        0,\n        1,\n        3,\n        5\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"integer\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"List of reminder triggers. Example: ['TRIGGER:P0DT9H0M0S', 'TRIGGER:PT0S']\",\n      \"title\": \"Reminders\"\n    },\n    \"repeatFlag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task. Example: 'RRULE:FREQ=DAILY;INTERVAL=1'\",\n      \"title\": \"Repeatflag\"\n    },\n    \"sortOrder\": {\n      \"description\": \"Task sort order\",\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date time in `yyyy-MM-dd'T'HH:mm:ssZ`\",\n      \"title\": \"Startdate\"\n    },\n    \"status\": {\n      \"description\": \"Task completion status. Normal: 0, Completed: 2\",\n      \"title\": \"Status\",\n      \"type\": \"boolean\"\n    },\n    \"timeZone\": {\n      \"description\": \"Task timezone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Timezone\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"projectId\",\n    \"title\",\n    \"isAllDay\",\n    \"priority\",\n    \"sortOrder\",\n    \"status\",\n    \"timeZone\"\n  ],\n  \"title\": \"TaskRespV1\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>ignore</code></li> </ul> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool</code>)             </li> <li> <code>completed_time</code>                 (<code>str | None</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>str | None</code>)             </li> <li> <code>items</code>                 (<code>list[ItemV1] | None</code>)             </li> <li> <code>priority</code>                 (<code>Literal[0, 1, 3, 5]</code>)             </li> <li> <code>reminders</code>                 (<code>list[str] | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>str | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>bool</code>)             </li> <li> <code>time_zone</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>_status_from_int</code>                 \u2192                   <code>status</code> </li> </ul>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: str | None = None\n</code></pre> <p>Task completed time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code></p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Task content</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Task description of checklist</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: str | None = None\n</code></pre> <p>Task due date time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code></p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: str\n</code></pre> <p>Project identifier</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool\n</code></pre> <p>All day</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[ItemV1] | None = None\n</code></pre> <p>Subtasks of Task</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Literal[0, 1, 3, 5]\n</code></pre> <p>Task priority. None:0, Low:1, Medium:3, High:5</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>Task project id</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[str] | None = None\n</code></pre> <p>List of reminder triggers. Example: ['TRIGGER:P0DT9H0M0S', 'TRIGGER:PT0S']</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: str | None = None\n</code></pre> <p>Recurring rules of task. Example: 'RRULE:FREQ=DAILY;INTERVAL=1'</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int\n</code></pre> <p>Task sort order</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code></p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: bool\n</code></pre> <p>Task completion status. Normal: 0, Completed: 2</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: str\n</code></pre> <p>Task timezone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v1/responses/task/#pyticktick.models.v1.responses.task.TaskRespV1.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>Task title</p>"},{"location":"reference/models/v2/class_diagrams/","title":"Class Diagrams","text":"<pre><code>classDiagram\n    direction LR\n    class CreateProjectV2 {\n        name: str\n        color: Color | None = None\n        group_id: str | None = None\n        id: str | None = None\n        kind: Literal['TASK', 'NOTE'] | None = None\n        view_mode: Literal['list', 'kanban', 'timeline'] | None = None\n        sort_order: int | None = None\n    }\n\n    class ClosedRespV2 {\n        root: list[TaskV2]\n    }\n\n    class CreateProjectGroupV2 {\n        name: str\n        id: str | None = None\n        list_type: Literal['group'] = 'group'\n    }\n\n    class DeleteTagV2 {\n        name: str\n    }\n\n    class UserProfileV2 {\n        etimestamp: Any\n        username: EmailStr\n        site_domain: str\n        created_campaign: str\n        created_device_info: Any\n        filled_password: bool\n        account_domain: Any\n        extenal_id: Any\n        email: Any\n        verified_email: bool\n        faked_email: bool\n        phone: Any\n        name: str | None = None\n        given_name: Any\n        family_name: Any\n        link: Any\n        picture: str\n        gender: Any\n        locale: str\n        user_code: UUID\n        ver_code: Any\n        ver_key: Any\n        external_id: Any\n        phone_without_country_code: Any\n        display_name: str\n    }\n\n    class UpdateItemV2 {\n        id: str\n        completed_time: datetime | None = None\n        is_all_day: bool | None = None\n        start_date: str | None = None\n        status: Literal[-1, 0, 1, 2] | None = None\n        time_zone: TimeZoneName | None | None = None\n        title: str | None = None\n        sort_order: int | None = None\n    }\n\n    class GetClosedV2 {\n        from_: datetime | None = None\n        to: datetime | None = None\n        status: Literal['Completed', 'Abandoned']\n    }\n\n    class CreateTaskReminderV2 {\n        id: str | None = None\n        trigger: str\n    }\n\n    class UpdateTaskV2 {\n        id: str\n        project_id: str | str\n        completed_time: datetime | None = None\n        content: str | None = None\n        desc: str | None = None\n        due_date: datetime | None = None\n        etag: str | None = None\n        is_all_day: bool | None = None\n        is_floating: bool | None = None\n        items: list[UpdateItemV2] | None = None\n        kind: Literal['TEXT', 'NOTE', 'CHECKLIST'] = 'TEXT'\n        modified_time: datetime | None = None\n        repeat_flag: str | None = None\n        repeat_from: Literal[0, 1, 2] | None = None\n        reminders: list[UpdateTaskReminderV2] | None = None\n        priority: Literal[0, 1, 3, 5] | None = None\n        progress: int | None = None\n        start_date: datetime | None = None\n        status: Literal[-1, 0, 1, 2] | None = None\n        time_zone: TimeZoneName | None | None = None\n        tags: list[str] = []\n        title: str | None = None\n        assignee: int | None = None\n        completed_user_id: int | None = None\n        creator: int | None = None\n        sort_order: int | None = None\n    }\n\n    class GetBatchV2 {\n        inbox_id: str\n        project_groups: list[ProjectGroupV2] | None\n        project_profiles: list[ProjectV2]\n        sync_task_bean: SyncTaskBeanV2\n        tags: list[TagV2]\n        check_point: int\n        checks: None\n        filters: list[dict[str, Any]] | None\n        sync_order_bean: dict[str, Any]\n        sync_order_bean_v3: SyncOrderBeanV3V2\n        sync_task_order_bean: SyncTaskOrderBeanV2\n        remind_changes: list[Any]\n    }\n\n    class UpdateProjectGroupV2 {\n        name: str\n        id: str\n        list_type: Literal['group'] = 'group'\n    }\n\n    class RenameTagV2 {\n        name: str\n        new_name: str\n    }\n\n    class UserSignOnV2 {\n        inbox_id: str\n        token: str\n        user_id: str\n        username: EmailStr\n        active_team_user: bool\n        ds: bool\n        free_trial: bool\n        freq: str | None = None\n        grace_period: bool | None = None\n        need_subscribe: bool\n        pro: bool\n        pro_end_date: str\n        pro_start_date: str | None = None\n        subscribe_freq: str | None = None\n        subscribe_type: str | None = None\n        team_pro: bool\n        team_user: bool\n        user_code: UUID\n    }\n\n    class UserStatisticsV2 {\n        score: int\n        level: int\n        yesterday_completed: int\n        today_completed: int\n        total_completed: int\n        score_by_day: ScoreByDayV2\n        task_by_day: TaskByDayV2\n        task_by_week: TaskByWeekV2\n        task_by_month: TaskByMonthV2\n        today_pomo_count: int\n        yesterday_pomo_count: int\n        total_pomo_count: int\n        today_pomo_duration: int\n        yesterday_pomo_duration: int\n        total_pomo_duration: int\n        pomo_goal: int\n        pomo_duration_goal: int\n        pomo_by_day: dict[str, Any]\n        pomo_by_week: dict[str, Any]\n        pomo_by_month: dict[str, Any]\n    }\n\n    class CreateTaskV2 {\n        project_id: str | str\n        title: str\n        completed_time: datetime | None = None\n        content: str | None = None\n        desc: str | None = None\n        due_date: datetime | None = None\n        etag: str | None = None\n        id: str | None = None\n        is_all_day: bool | None = None\n        is_floating: bool | None = None\n        items: list[CreateItemV2] | None = None\n        kind: Literal['TEXT', 'NOTE', 'CHECKLIST'] = 'TEXT'\n        modified_time: datetime | None = None\n        reminders: list[CreateTaskReminderV2] | None = None\n        repeat_flag: str | None = None\n        repeat_from: Literal[0, 1, 2] | None = None\n        priority: Literal[0, 1, 3, 5] | None = None\n        progress: int | None = None\n        start_date: datetime | None = None\n        status: Literal[-1, 0, 1, 2] | None = None\n        time_zone: TimeZoneName | None | None = None\n        tags: list[str] = []\n        assignee: int | None = None\n        completed_user_id: int | None = None\n        creator: int | None = None\n        sort_order: int | None = None\n    }\n\n    class CreateItemV2 {\n        completed_time: datetime | None = None\n        id: str | None = None\n        is_all_day: bool | None = None\n        start_date: str | None = None\n        status: Literal[-1, 0, 1, 2] | None = None\n        time_zone: TimeZoneName | None | None = None\n        title: str | None = None\n        sort_order: int | None = None\n    }\n\n    class UpdateTaskReminderV2 {\n        id: str\n        trigger: str\n    }\n\n    class PostBatchTaskParentV2 {\n        root: list[SetTaskParentV2 | UnSetTaskParentV2]\n    }\n\n    class PostBatchProjectV2 {\n        add: list[CreateProjectV2] = []\n        delete: list[str] = []\n        update: list[UpdateProjectV2] = []\n    }\n\n    class PostBatchTaskV2 {\n        add: list[CreateTaskV2] = []\n        delete: list[DeleteTaskV2] = []\n        update: list[UpdateTaskV2] = []\n        add_attachments: list[Any] = []\n        update_attachments: list[Any] = []\n    }\n\n    class UnSetTaskParentV2 {\n        old_parent_id: str\n        project_id: str\n        task_id: str\n    }\n\n    class DeleteTaskV2 {\n        project_id: str | str\n        task_id: str\n    }\n\n    class PostBatchProjectGroupV2 {\n        add: list[CreateProjectGroupV2] = []\n        delete: list[str] = []\n        update: list[UpdateProjectGroupV2] = []\n    }\n\n    class SetTaskParentV2 {\n        parent_id: str\n        project_id: str\n        task_id: str\n    }\n\n    class UserStatusV2 {\n        user_id: str\n        user_code: UUID\n        username: EmailStr\n        team_pro: bool\n        pro_start_date: str | None = None\n        pro_end_date: str\n        subscribe_type: str | None = None\n        subscribe_freq: str | None = None\n        need_subscribe: bool\n        freq: str | None = None\n        inbox_id: str\n        team_user: bool\n        active_team_user: bool\n        free_trial: bool\n        pro: bool\n        ds: bool\n        time_stamp: int\n        grace_period: bool | None = None\n    }\n\n    class BatchTagRespV2 {\n        id2error: dict[str, str]\n        id2etag: dict[str, str]\n    }\n\n    class PostBatchTagV2 {\n        add: list[CreateTagV2] = []\n        update: list[UpdateTagV2] = []\n    }\n\n    class CreateTagV2 {\n        label: str\n        color: Color | None = None\n        name: str | None = None\n        parent: str | None = None\n        sort_type: Literal['project', 'title', 'tag'] = 'project'\n        sort_order: int | None = None\n    }\n\n    class UpdateTagV2 {\n        label: str\n        color: Color | None = None\n        name: str | None = None\n        parent: str | None = None\n        raw_name: str | None = None\n        sort_type: Literal['project', 'title', 'tag'] = 'project'\n        sort_order: int | None = None\n    }\n\n    class UpdateProjectV2 {\n        id: str\n        name: str\n        color: Color | None = None\n        group_id: Literal['NONE'] | None | str = None\n        kind: Literal['TASK', 'NOTE'] | None = None\n        view_mode: Literal['list', 'kanban', 'timeline'] | None = None\n        sort_order: int | None = None\n    }\n\n    class BatchRespV2 {\n        id2error: dict[str, str]\n        id2etag: dict[str, str]\n    }\n\n    class BatchTaskParentRespV2 {\n        id2error: dict[str, str]\n        id2etag: dict[str, BatchTaskParentRespValueV2]\n    }\n\n    GetClosedV2 ..&gt; datetime\n    CreateProjectV2 ..&gt; Color\n    PostBatchProjectV2 ..&gt; CreateProjectV2\n    PostBatchProjectV2 ..&gt; UpdateProjectV2\n    UpdateProjectV2 ..&gt; Color\n    PostBatchProjectGroupV2 ..&gt; UpdateProjectGroupV2\n    PostBatchProjectGroupV2 ..&gt; CreateProjectGroupV2\n    CreateTagV2 ..&gt; Color\n    PostBatchTagV2 ..&gt; CreateTagV2\n    PostBatchTagV2 ..&gt; UpdateTagV2\n    UpdateTagV2 ..&gt; Color\n    CreateItemV2 ..&gt; TimeZoneName\n    CreateItemV2 ..&gt; datetime\n    CreateTaskV2 ..&gt; CreateItemV2\n    CreateTaskV2 ..&gt; TimeZoneName\n    CreateTaskV2 ..&gt; datetime\n    CreateTaskV2 ..&gt; CreateTaskReminderV2\n    PostBatchTaskV2 ..&gt; UpdateTaskV2\n    PostBatchTaskV2 ..&gt; Any\n    PostBatchTaskV2 ..&gt; DeleteTaskV2\n    PostBatchTaskV2 ..&gt; CreateTaskV2\n    UpdateItemV2 ..&gt; TimeZoneName\n    UpdateItemV2 ..&gt; datetime\n    UpdateTaskV2 ..&gt; UpdateTaskReminderV2\n    UpdateTaskV2 ..&gt; datetime\n    UpdateTaskV2 ..&gt; UpdateItemV2\n    UpdateTaskV2 ..&gt; TimeZoneName\n    PostBatchTaskParentV2 ..&gt; SetTaskParentV2\n    PostBatchTaskParentV2 ..&gt; UnSetTaskParentV2\n    GetBatchV2 ..&gt; SyncTaskOrderBeanV2\n    GetBatchV2 ..&gt; TagV2\n    GetBatchV2 ..&gt; ProjectV2\n    GetBatchV2 ..&gt; ProjectGroupV2\n    GetBatchV2 ..&gt; Any\n    GetBatchV2 ..&gt; SyncTaskBeanV2\n    GetBatchV2 ..&gt; SyncOrderBeanV3V2\n    ClosedRespV2 ..&gt; TaskV2\n    BatchTaskParentRespV2 ..&gt; BatchTaskParentRespValueV2\n    UserProfileV2 ..&gt; Any\n    UserProfileV2 ..&gt; EmailStr\n    UserProfileV2 ..&gt; UUID\n    UserSignOnV2 ..&gt; UUID\n    UserSignOnV2 ..&gt; EmailStr\n    UserStatisticsV2 ..&gt; TaskByDayV2\n    UserStatisticsV2 ..&gt; TaskByWeekV2\n    UserStatisticsV2 ..&gt; Any\n    UserStatisticsV2 ..&gt; TaskByMonthV2\n    UserStatisticsV2 ..&gt; ScoreByDayV2\n    UserStatusV2 ..&gt; UUID\n    UserStatusV2 ..&gt; EmailStr\n\n</code></pre> <p>Info</p> <p>This was auto-generated code by pydantic-2-mermaid.</p>"},{"location":"reference/models/v2/models/","title":"Models","text":""},{"location":"reference/models/v2/models/#pyticktick.models.v2.models","title":"pyticktick.models.v2.models","text":"<p>Pydantic models for the general TickTick objects of the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>BaseModelV2</code> <p>Base model for all pydantic models of the TickTick V2 API.</p> <code>ItemV2</code> <p>Model for a checklist item via the V2 API.</p> <code>ProjectGroupV2</code> <p>Model for a project group in the V2 API.</p> <code>ProjectTimelineV2</code> <p>Unknown model for the V2 API.</p> <code>ProjectV2</code> <p>Model for all the details of a project taken from the V2 API.</p> <code>SortOptionV2</code> <p>Model for the sort options of tasks within a project in the V2 API.</p> <code>TagV2</code> <p>Model for a tag in the V2 API.</p> <code>TaskReminderV2</code> <p>Model for a reminder for a task via the V2 API.</p> <code>TaskV2</code> <p>Model for a task in a batch response via the V2 API.</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.BaseModelV2","title":"BaseModelV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Base model for all pydantic models of the TickTick V2 API.</p> <p>This model is used to provide a common configuration for all models in the V2 API.</p> <p>It sets the <code>extra</code> configuration to <code>forbid</code>, which means that extra data is not permitted in the model, and a <code>pydantic.ValidationError</code> will be raised if this is the case. See <code>pydantic.config.ConfigDict.extra</code> for more information.</p> <p>It also sets both <code>validate_by_name</code> and <code>validate_by_alias</code> to <code>True</code>, which means that field names will be validated by their name or alias. This is useful for compatibility with the V2 API, while still allowing for instantiation in Python with field names.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Base model for all pydantic models of the TickTick V2 API.\\n\\nThis model is used to provide a common configuration for all models in the V2 API.\\n\\nIt sets the `extra` configuration to `forbid`, which means that extra data is not\\npermitted in the model, and a `pydantic.ValidationError` will be raised if this is\\nthe case. See [`pydantic.config.ConfigDict.extra`](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict.extra)\\nfor more information.\\n\\nIt also sets both [`validate_by_name`](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict.validate_by_name)\\nand [`validate_by_alias`](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict.validate_by_alias)\\nto `True`, which means that field names will be validated by their name _or_ alias.\\nThis is useful for compatibility with the V2 API, while still allowing for\\ninstantiation in Python with field names.\",\n  \"properties\": {},\n  \"title\": \"BaseModelV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Config:</p> <ul> <li><code>extra</code>: <code>forbid</code></li> <li><code>validate_by_name</code>: <code>True</code></li> <li><code>validate_by_alias</code>: <code>True</code></li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.BaseModelV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2","title":"ItemV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for a checklist item via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for a checklist item via the V2 API.\",\n  \"properties\": {\n    \"completedTime\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Completedtime\"\n    },\n    \"id\": {\n      \"description\": \"ID of the checklist item\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"isAllDay\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Isallday\"\n    },\n    \"sortOrder\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The order of checklist item\",\n      \"title\": \"Sortorder\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Startdate\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The completion status of checklist item\",\n      \"title\": \"Status\"\n    },\n    \"timeZone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Timezone\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Checklist item title\",\n      \"title\": \"Title\"\n    },\n    \"snoozeReminderTime\": {\n      \"default\": null,\n      \"title\": \"Snoozeremindertime\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"ItemV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>completed_time</code>                 (<code>str | None</code>)             </li> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>snooze_reminder_time</code>                 (<code>Any</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: str | None = None\n</code></pre> <p>Completed time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>ID of the checklist item</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.sort_order","title":"sort_order  <code>pydantic-field</code>","text":"<pre><code>sort_order: int | None = None\n</code></pre> <p>The order of checklist item</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status | None = None\n</code></pre> <p>The completion status of checklist item</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Checklist item title</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ItemV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2","title":"ProjectGroupV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for a project group in the V2 API.</p> <p>This model is used to represent a group of projects in TickTick. It contains all the relevant details, such as name, color, sort order, etc. that you see in the web app.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ProjectTimelineV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"range\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Range\"\n        },\n        \"sortType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Sorttype\"\n        },\n        \"sortOption\": {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        }\n      },\n      \"required\": [\n        \"range\",\n        \"sortType\",\n        \"sortOption\"\n      ],\n      \"title\": \"ProjectTimelineV2\",\n      \"type\": \"object\"\n    },\n    \"SortOptionV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n      \"properties\": {\n        \"groupBy\": {\n          \"description\": \"How tasks are grouped within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Groupby\",\n          \"type\": \"string\"\n        },\n        \"orderBy\": {\n          \"description\": \"How tasks are ordered within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Orderby\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"groupBy\",\n        \"orderBy\"\n      ],\n      \"title\": \"SortOptionV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for a project group in the V2 API.\\n\\nThis model is used to represent a group of projects in TickTick. It contains all the\\nrelevant details, such as name, color, sort order, etc. that you see in the web app.\",\n  \"properties\": {\n    \"etag\": {\n      \"description\": \"ETag of the project group object\",\n      \"pattern\": \"^[a-z0-9]{8}$\",\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"description\": \"ID of the project group\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"Name of the project group\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"sortOption\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"How to sort the tasks in the project\"\n    },\n    \"viewMode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"Viewmode\"\n    },\n    \"deleted\": {\n      \"title\": \"Deleted\",\n      \"type\": \"integer\"\n    },\n    \"showAll\": {\n      \"title\": \"Showall\",\n      \"type\": \"boolean\"\n    },\n    \"sortOrder\": {\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"sortType\": {\n      \"title\": \"Sorttype\",\n      \"type\": \"string\"\n    },\n    \"teamId\": {\n      \"title\": \"Teamid\"\n    },\n    \"timeline\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ProjectTimelineV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"userId\": {\n      \"title\": \"Userid\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"etag\",\n    \"id\",\n    \"name\",\n    \"sortOption\",\n    \"deleted\",\n    \"showAll\",\n    \"sortOrder\",\n    \"sortType\",\n    \"teamId\",\n    \"timeline\",\n    \"userId\"\n  ],\n  \"title\": \"ProjectGroupV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>etag</code>                 (<code>ETag</code>)             </li> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>sort_option</code>                 (<code>SortOptionV2 | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>deleted</code>                 (<code>int</code>)             </li> <li> <code>show_all</code>                 (<code>bool</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>sort_type</code>                 (<code>str</code>)             </li> <li> <code>team_id</code>                 (<code>Any</code>)             </li> <li> <code>timeline</code>                 (<code>ProjectTimelineV2 | None</code>)             </li> <li> <code>user_id</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag\n</code></pre> <p>ETag of the project group object</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>ID of the project group</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Name of the project group</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.sort_option","title":"sort_option  <code>pydantic-field</code>","text":"<pre><code>sort_option: SortOptionV2 | None\n</code></pre> <p>How to sort the tasks in the project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectGroupV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectTimelineV2","title":"ProjectTimelineV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Unknown model for the V2 API.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"SortOptionV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n      \"properties\": {\n        \"groupBy\": {\n          \"description\": \"How tasks are grouped within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Groupby\",\n          \"type\": \"string\"\n        },\n        \"orderBy\": {\n          \"description\": \"How tasks are ordered within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Orderby\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"groupBy\",\n        \"orderBy\"\n      ],\n      \"title\": \"SortOptionV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Unknown model for the V2 API.\",\n  \"properties\": {\n    \"range\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Range\"\n    },\n    \"sortType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sorttype\"\n    },\n    \"sortOption\": {\n      \"$ref\": \"#/$defs/SortOptionV2\"\n    }\n  },\n  \"required\": [\n    \"range\",\n    \"sortType\",\n    \"sortOption\"\n  ],\n  \"title\": \"ProjectTimelineV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>range</code>                 (<code>str | None</code>)             </li> <li> <code>sort_type</code>                 (<code>str | None</code>)             </li> <li> <code>sort_option</code>                 (<code>SortOptionV2</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectTimelineV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2","title":"ProjectV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for all the details of a project taken from the V2 API.</p> <p>This model is used to represent a single project in TickTick. It contains all the relevant details, such as name, color, sort order, etc. that you see in the web app.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ProjectTimelineV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"range\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Range\"\n        },\n        \"sortType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Sorttype\"\n        },\n        \"sortOption\": {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        }\n      },\n      \"required\": [\n        \"range\",\n        \"sortType\",\n        \"sortOption\"\n      ],\n      \"title\": \"ProjectTimelineV2\",\n      \"type\": \"object\"\n    },\n    \"SortOptionV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n      \"properties\": {\n        \"groupBy\": {\n          \"description\": \"How tasks are grouped within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Groupby\",\n          \"type\": \"string\"\n        },\n        \"orderBy\": {\n          \"description\": \"How tasks are ordered within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Orderby\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"groupBy\",\n        \"orderBy\"\n      ],\n      \"title\": \"SortOptionV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for all the details of a project taken from the V2 API.\\n\\nThis model is used to represent a single project in TickTick. It contains all the\\nrelevant details, such as name, color, sort order, etc. that you see in the web app.\",\n  \"properties\": {\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Color of the project profile, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"etag\": {\n      \"description\": \"ETag of the project object\",\n      \"pattern\": \"^[a-z0-9]{8}$\",\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    },\n    \"groupId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"ID of the project group the project is in\",\n      \"title\": \"Groupid\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^inbox\\\\d+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"ID of the project\",\n      \"title\": \"Id\"\n    },\n    \"inAll\": {\n      \"description\": \"Whether or not to show in Smart Lists. If False, tasks within this list won't be shown in 'All', 'Today', 'Tomorrow', 'Next 7 Days', or other smart lists, but you will still receive reminders.\",\n      \"title\": \"Inall\",\n      \"type\": \"boolean\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    },\n    \"modifiedTime\": {\n      \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"format\": \"date-time\",\n      \"title\": \"Modifiedtime\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"Name of the project\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"sortOption\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"How to sort the tasks in the project\"\n    },\n    \"viewMode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"Viewmode\"\n    },\n    \"barcodeNeedAudit\": {\n      \"title\": \"Barcodeneedaudit\",\n      \"type\": \"boolean\"\n    },\n    \"isOwner\": {\n      \"title\": \"Isowner\",\n      \"type\": \"boolean\"\n    },\n    \"sortOrder\": {\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"sortType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sorttype\"\n    },\n    \"userCount\": {\n      \"title\": \"Usercount\",\n      \"type\": \"integer\"\n    },\n    \"closed\": {\n      \"title\": \"Closed\"\n    },\n    \"muted\": {\n      \"title\": \"Muted\",\n      \"type\": \"boolean\"\n    },\n    \"transferred\": {\n      \"title\": \"Transferred\"\n    },\n    \"notificationOptions\": {\n      \"title\": \"Notificationoptions\"\n    },\n    \"teamId\": {\n      \"title\": \"Teamid\"\n    },\n    \"permission\": {\n      \"title\": \"Permission\"\n    },\n    \"timeline\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ProjectTimelineV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ]\n    },\n    \"needAudit\": {\n      \"title\": \"Needaudit\",\n      \"type\": \"boolean\"\n    },\n    \"openToTeam\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Opentoteam\"\n    },\n    \"teamMemberPermission\": {\n      \"title\": \"Teammemberpermission\"\n    },\n    \"source\": {\n      \"title\": \"Source\",\n      \"type\": \"integer\"\n    },\n    \"showType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Showtype\"\n    },\n    \"reminderType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Remindertype\"\n    }\n  },\n  \"required\": [\n    \"etag\",\n    \"groupId\",\n    \"id\",\n    \"inAll\",\n    \"modifiedTime\",\n    \"name\",\n    \"sortOption\",\n    \"barcodeNeedAudit\",\n    \"isOwner\",\n    \"sortOrder\",\n    \"sortType\",\n    \"userCount\",\n    \"closed\",\n    \"muted\",\n    \"transferred\",\n    \"notificationOptions\",\n    \"teamId\",\n    \"permission\",\n    \"timeline\",\n    \"needAudit\",\n    \"openToTeam\",\n    \"teamMemberPermission\",\n    \"source\",\n    \"showType\",\n    \"reminderType\"\n  ],\n  \"title\": \"ProjectV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag</code>)             </li> <li> <code>group_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>id</code>                 (<code>Union[InboxId, ObjectId]</code>)             </li> <li> <code>in_all</code>                 (<code>bool</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> <li> <code>modified_time</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>sort_option</code>                 (<code>SortOptionV2 | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>barcode_need_audit</code>                 (<code>bool</code>)             </li> <li> <code>is_owner</code>                 (<code>bool</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>sort_type</code>                 (<code>str | None</code>)             </li> <li> <code>user_count</code>                 (<code>int</code>)             </li> <li> <code>closed</code>                 (<code>Any</code>)             </li> <li> <code>muted</code>                 (<code>bool</code>)             </li> <li> <code>transferred</code>                 (<code>Any</code>)             </li> <li> <code>notification_options</code>                 (<code>Any</code>)             </li> <li> <code>team_id</code>                 (<code>Any</code>)             </li> <li> <code>permission</code>                 (<code>Any</code>)             </li> <li> <code>timeline</code>                 (<code>ProjectTimelineV2 | None</code>)             </li> <li> <code>need_audit</code>                 (<code>bool</code>)             </li> <li> <code>open_to_team</code>                 (<code>bool | None</code>)             </li> <li> <code>team_member_permission</code>                 (<code>Any</code>)             </li> <li> <code>source</code>                 (<code>int</code>)             </li> <li> <code>show_type</code>                 (<code>int | None</code>)             </li> <li> <code>reminder_type</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>Color of the project profile, eg. '#F18181'</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag\n</code></pre> <p>ETag of the project object</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.group_id","title":"group_id  <code>pydantic-field</code>","text":"<pre><code>group_id: ObjectId | None\n</code></pre> <p>ID of the project group the project is in</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: Union[InboxId, ObjectId]\n</code></pre> <p>ID of the project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.in_all","title":"in_all  <code>pydantic-field</code>","text":"<pre><code>in_all: bool\n</code></pre> <p>Whether or not to show in Smart Lists. If False, tasks within this list won't be shown in 'All', 'Today', 'Tomorrow', 'Next 7 Days', or other smart lists, but you will still receive reminders.</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.modified_time","title":"modified_time  <code>pydantic-field</code>","text":"<pre><code>modified_time: datetime\n</code></pre> <p>Last modified time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Name of the project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.sort_option","title":"sort_option  <code>pydantic-field</code>","text":"<pre><code>sort_option: SortOptionV2 | None\n</code></pre> <p>How to sort the tasks in the project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.ProjectV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.SortOptionV2","title":"SortOptionV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the sort options of tasks within a project in the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n  \"properties\": {\n    \"groupBy\": {\n      \"description\": \"How tasks are grouped within a project\",\n      \"enum\": [\n        \"sortOrder\",\n        \"dueDate\",\n        \"tag\",\n        \"priority\",\n        \"project\",\n        \"none\"\n      ],\n      \"title\": \"Groupby\",\n      \"type\": \"string\"\n    },\n    \"orderBy\": {\n      \"description\": \"How tasks are ordered within a project\",\n      \"enum\": [\n        \"sortOrder\",\n        \"dueDate\",\n        \"tag\",\n        \"priority\",\n        \"project\",\n        \"none\"\n      ],\n      \"title\": \"Orderby\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"groupBy\",\n    \"orderBy\"\n  ],\n  \"title\": \"SortOptionV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>group_by</code>                 (<code>SortOptions</code>)             </li> <li> <code>order_by</code>                 (<code>SortOptions</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.SortOptionV2.group_by","title":"group_by  <code>pydantic-field</code>","text":"<pre><code>group_by: SortOptions\n</code></pre> <p>How tasks are grouped within a project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.SortOptionV2.order_by","title":"order_by  <code>pydantic-field</code>","text":"<pre><code>order_by: SortOptions\n</code></pre> <p>How tasks are ordered within a project</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.SortOptionV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2","title":"TagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for a tag in the V2 API.</p> <p>This model is used to represent a tag in TickTick. Tags are used to categorize tasks and make them easier to find. They can be assigned a color and a sort order.</p> <p>They do not have a unique ID, but they can be identified by their raw name.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ProjectTimelineV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"range\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Range\"\n        },\n        \"sortType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Sorttype\"\n        },\n        \"sortOption\": {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        }\n      },\n      \"required\": [\n        \"range\",\n        \"sortType\",\n        \"sortOption\"\n      ],\n      \"title\": \"ProjectTimelineV2\",\n      \"type\": \"object\"\n    },\n    \"SortOptionV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n      \"properties\": {\n        \"groupBy\": {\n          \"description\": \"How tasks are grouped within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Groupby\",\n          \"type\": \"string\"\n        },\n        \"orderBy\": {\n          \"description\": \"How tasks are ordered within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Orderby\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"groupBy\",\n        \"orderBy\"\n      ],\n      \"title\": \"SortOptionV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for a tag in the V2 API.\\n\\nThis model is used to represent a tag in TickTick. Tags are used to categorize tasks\\nand make them easier to find. They can be assigned a color and a sort order.\\n\\nThey do not have a unique ID, but they can be identified by their raw name.\",\n  \"properties\": {\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Color of the tag, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"etag\": {\n      \"description\": \"ETag of the tag object\",\n      \"pattern\": \"^[a-z0-9]{8}$\",\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    },\n    \"label\": {\n      \"description\": \"Name of the tag, as it appears in the UI\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n      \"title\": \"Label\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"Name of the tag, similar to the label but lowercase, and not visible in the UI\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"parent\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Name of the parent tag, if nested.\",\n      \"title\": \"Parent\"\n    },\n    \"rawName\": {\n      \"description\": \"Original name of the tag, used to identify it\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n      \"title\": \"Rawname\",\n      \"type\": \"string\"\n    },\n    \"sortOption\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"How to sort the tasks within the tag\"\n    },\n    \"sortType\": {\n      \"default\": \"project\",\n      \"description\": \"Sort type when displaying by selected tag\",\n      \"enum\": [\n        \"project\",\n        \"title\",\n        \"tag\"\n      ],\n      \"title\": \"Sorttype\",\n      \"type\": \"string\"\n    },\n    \"sortOrder\": {\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    },\n    \"timeline\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/ProjectTimelineV2\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"type\": {\n      \"title\": \"Type\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"etag\",\n    \"label\",\n    \"name\",\n    \"rawName\",\n    \"sortOrder\",\n    \"type\"\n  ],\n  \"title\": \"TagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag</code>)             </li> <li> <code>label</code>                 (<code>TagLabel</code>)             </li> <li> <code>name</code>                 (<code>TagName</code>)             </li> <li> <code>parent</code>                 (<code>TagName | None</code>)             </li> <li> <code>raw_name</code>                 (<code>TagName</code>)             </li> <li> <code>sort_option</code>                 (<code>SortOptionV2 | None</code>)             </li> <li> <code>sort_type</code>                 (<code>Literal['project', 'title', 'tag']</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> <li> <code>timeline</code>                 (<code>ProjectTimelineV2 | None</code>)             </li> <li> <code>type</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>Color of the tag, eg. '#F18181'</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag\n</code></pre> <p>ETag of the tag object</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.label","title":"label  <code>pydantic-field</code>","text":"<pre><code>label: TagLabel\n</code></pre> <p>Name of the tag, as it appears in the UI</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: TagName\n</code></pre> <p>Name of the tag, similar to the label but lowercase, and not visible in the UI</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.parent","title":"parent  <code>pydantic-field</code>","text":"<pre><code>parent: TagName | None = None\n</code></pre> <p>Name of the parent tag, if nested.</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.raw_name","title":"raw_name  <code>pydantic-field</code>","text":"<pre><code>raw_name: TagName\n</code></pre> <p>Original name of the tag, used to identify it</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.sort_option","title":"sort_option  <code>pydantic-field</code>","text":"<pre><code>sort_option: SortOptionV2 | None = None\n</code></pre> <p>How to sort the tasks within the tag</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.sort_type","title":"sort_type  <code>pydantic-field</code>","text":"<pre><code>sort_type: Literal['project', 'title', 'tag'] = 'project'\n</code></pre> <p>Sort type when displaying by selected tag</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskReminderV2","title":"TaskReminderV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for a reminder for a task via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for a reminder for a task via the V2 API.\",\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Reminder ID\",\n      \"title\": \"Id\"\n    },\n    \"trigger\": {\n      \"description\": \"Reminder trigger\",\n      \"title\": \"Trigger\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"trigger\"\n  ],\n  \"title\": \"TaskReminderV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>trigger</code>                 (<code>ICalTrigger</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskReminderV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>Reminder ID</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskReminderV2.trigger","title":"trigger  <code>pydantic-field</code>","text":"<pre><code>trigger: ICalTrigger\n</code></pre> <p>Reminder trigger</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskReminderV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2","title":"TaskV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for a task in a batch response via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a checklist item via the V2 API.\",\n      \"properties\": {\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Completedtime\"\n        },\n        \"id\": {\n          \"description\": \"ID of the checklist item\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Isallday\"\n        },\n        \"sortOrder\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The order of checklist item\",\n          \"title\": \"Sortorder\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"timeZone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"snoozeReminderTime\": {\n          \"default\": null,\n          \"title\": \"Snoozeremindertime\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ItemV2\",\n      \"type\": \"object\"\n    },\n    \"TaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"trigger\"\n      ],\n      \"title\": \"TaskReminderV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for a task in a batch response via the V2 API.\",\n  \"properties\": {\n    \"childIds\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"List of sub-task IDs\",\n      \"title\": \"Childids\"\n    },\n    \"completedTime\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Completedtime\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n      \"title\": \"Content\"\n    },\n    \"createdTime\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Created time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Createdtime\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n      \"title\": \"Desc\"\n    },\n    \"dueDate\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Duedate\"\n    },\n    \"etag\": {\n      \"description\": \"ETag of the task object\",\n      \"pattern\": \"^[a-z0-9]{8}$\",\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"description\": \"ID of the task\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"isAllDay\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Isallday\"\n    },\n    \"isFloating\": {\n      \"description\": \"The task will remain at the same time regardless of time zone\",\n      \"title\": \"Isfloating\",\n      \"type\": \"boolean\"\n    },\n    \"items\": {\n      \"description\": \"List of checklist items\",\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemV2\"\n      },\n      \"title\": \"Items\",\n      \"type\": \"array\"\n    },\n    \"kind\": {\n      \"default\": \"TEXT\",\n      \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n      \"enum\": [\n        \"TEXT\",\n        \"NOTE\",\n        \"CHECKLIST\"\n      ],\n      \"title\": \"Kind\",\n      \"type\": \"string\"\n    },\n    \"modifiedTime\": {\n      \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"format\": \"date-time\",\n      \"title\": \"Modifiedtime\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the parent task, if this is a subtask\",\n      \"title\": \"Parentid\"\n    },\n    \"priority\": {\n      \"description\": \"Priority of the task\",\n      \"enum\": [\n        0,\n        1,\n        3,\n        5\n      ],\n      \"title\": \"Priority\",\n      \"type\": \"integer\"\n    },\n    \"progress\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n      \"title\": \"Progress\"\n    },\n    \"projectId\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^inbox\\\\d+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"ID of the project the task is in\",\n      \"title\": \"Projectid\"\n    },\n    \"reminder\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Unclear what this is, but it can sometimes be one of the reminder triggers in `reminders`\",\n      \"title\": \"Reminder\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskReminderV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"List of reminders for the task\",\n      \"title\": \"Reminders\"\n    },\n    \"repeatFirstDate\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"First date of the repeating task in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Repeatfirstdate\"\n    },\n    \"repeatFlag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task\",\n      \"title\": \"Repeatflag\"\n    },\n    \"repeatFrom\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"When to start repeating the task\",\n      \"title\": \"Repeatfrom\"\n    },\n    \"repeatTaskId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the repeating task if a duplicate is somehow (re)opened\",\n      \"title\": \"Repeattaskid\"\n    },\n    \"startDate\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Startdate\"\n    },\n    \"status\": {\n      \"description\": \"Status of the task\",\n      \"enum\": [\n        -1,\n        0,\n        1,\n        2\n      ],\n      \"title\": \"Status\",\n      \"type\": \"integer\"\n    },\n    \"tags\": {\n      \"default\": [],\n      \"description\": \"List of tag names for the task\",\n      \"items\": {\n        \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n        \"type\": \"string\"\n      },\n      \"title\": \"Tags\",\n      \"type\": \"array\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"Title of the task\",\n      \"title\": \"Title\"\n    },\n    \"timeZone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Timezone\"\n    },\n    \"assignee\": {\n      \"anyOf\": [\n        {},\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignee\"\n    },\n    \"attachments\": {\n      \"default\": [],\n      \"items\": {},\n      \"title\": \"Attachments\",\n      \"type\": \"array\"\n    },\n    \"annoyingAlert\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Annoyingalert\"\n    },\n    \"columnId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Columnid\"\n    },\n    \"commentCount\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Commentcount\"\n    },\n    \"completedUserId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completeduserid\"\n    },\n    \"creator\": {\n      \"title\": \"Creator\",\n      \"type\": \"integer\"\n    },\n    \"deleted\": {\n      \"title\": \"Deleted\",\n      \"type\": \"integer\"\n    },\n    \"exDate\": {\n      \"anyOf\": [\n        {\n          \"items\": {},\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Exdate\"\n    },\n    \"focusSummaries\": {\n      \"default\": [],\n      \"items\": {},\n      \"title\": \"Focussummaries\",\n      \"type\": \"array\"\n    },\n    \"imgMode\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Imgmode\"\n    },\n    \"isDirty\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Isdirty\"\n    },\n    \"local\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Local\"\n    },\n    \"remindTime\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Remindtime\"\n    },\n    \"sortOrder\": {\n      \"title\": \"Sortorder\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"etag\",\n    \"id\",\n    \"isFloating\",\n    \"items\",\n    \"modifiedTime\",\n    \"priority\",\n    \"projectId\",\n    \"status\",\n    \"title\",\n    \"creator\",\n    \"deleted\",\n    \"sortOrder\"\n  ],\n  \"title\": \"TaskV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>child_ids</code>                 (<code>list[ObjectId] | None</code>)             </li> <li> <code>completed_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>created_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag</code>)             </li> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>is_floating</code>                 (<code>bool</code>)             </li> <li> <code>items</code>                 (<code>list[ItemV2]</code>)             </li> <li> <code>kind</code>                 (<code>Kind</code>)             </li> <li> <code>modified_time</code>                 (<code>datetime</code>)             </li> <li> <code>parent_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>priority</code>                 (<code>Priority</code>)             </li> <li> <code>progress</code>                 (<code>Progress | None</code>)             </li> <li> <code>project_id</code>                 (<code>Union[InboxId, ObjectId]</code>)             </li> <li> <code>reminder</code>                 (<code>ICalTrigger | None</code>)             </li> <li> <code>reminders</code>                 (<code>list[TaskReminderV2] | None</code>)             </li> <li> <code>repeat_first_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>TTRRule | None</code>)             </li> <li> <code>repeat_from</code>                 (<code>RepeatFrom | None</code>)             </li> <li> <code>repeat_task_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>start_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>status</code>                 (<code>Status</code>)             </li> <li> <code>tags</code>                 (<code>list[TagName]</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>assignee</code>                 (<code>Any | None</code>)             </li> <li> <code>attachments</code>                 (<code>list[Any]</code>)             </li> <li> <code>annoying_alert</code>                 (<code>int | None</code>)             </li> <li> <code>column_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>comment_count</code>                 (<code>int | None</code>)             </li> <li> <code>completed_user_id</code>                 (<code>int | None</code>)             </li> <li> <code>creator</code>                 (<code>int</code>)             </li> <li> <code>deleted</code>                 (<code>int</code>)             </li> <li> <code>ex_date</code>                 (<code>list[Any] | None</code>)             </li> <li> <code>focus_summaries</code>                 (<code>list[Any]</code>)             </li> <li> <code>img_mode</code>                 (<code>int | None</code>)             </li> <li> <code>is_dirty</code>                 (<code>bool | None</code>)             </li> <li> <code>local</code>                 (<code>bool | None</code>)             </li> <li> <code>remind_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.child_ids","title":"child_ids  <code>pydantic-field</code>","text":"<pre><code>child_ids: list[ObjectId] | None = None\n</code></pre> <p>List of sub-task IDs</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: datetime | None = None\n</code></pre> <p>Completed time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Content of the task, used for <code>TEXT</code> or <code>NOTE</code> tasks, otherwise <code>desc</code> is used</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.created_time","title":"created_time  <code>pydantic-field</code>","text":"<pre><code>created_time: datetime | None = None\n</code></pre> <p>Created time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Description of the task, used for <code>CHECKLIST</code> tasks, otherwise <code>content</code> is used</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: datetime | None = None\n</code></pre> <p>Due date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag\n</code></pre> <p>ETag of the task object</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>ID of the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.is_floating","title":"is_floating  <code>pydantic-field</code>","text":"<pre><code>is_floating: bool\n</code></pre> <p>The task will remain at the same time regardless of time zone</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[ItemV2]\n</code></pre> <p>List of checklist items</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Kind = 'TEXT'\n</code></pre> <p>\"TEXT\", \"NOTE\", or \"CHECKLIST\"</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.modified_time","title":"modified_time  <code>pydantic-field</code>","text":"<pre><code>modified_time: datetime\n</code></pre> <p>Last modified time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.parent_id","title":"parent_id  <code>pydantic-field</code>","text":"<pre><code>parent_id: ObjectId | None = None\n</code></pre> <p>ID of the parent task, if this is a subtask</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Priority\n</code></pre> <p>Priority of the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.progress","title":"progress  <code>pydantic-field</code>","text":"<pre><code>progress: Progress | None = None\n</code></pre> <p>Progress of a <code>CHECKLIST</code> task, should be a number between 0 and 100</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: Union[InboxId, ObjectId]\n</code></pre> <p>ID of the project the task is in</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.reminder","title":"reminder  <code>pydantic-field</code>","text":"<pre><code>reminder: ICalTrigger | None = None\n</code></pre> <p>Unclear what this is, but it can sometimes be one of the reminder triggers in <code>reminders</code></p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[TaskReminderV2] | None = None\n</code></pre> <p>List of reminders for the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.repeat_first_date","title":"repeat_first_date  <code>pydantic-field</code>","text":"<pre><code>repeat_first_date: datetime | None = None\n</code></pre> <p>First date of the repeating task in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: TTRRule | None = None\n</code></pre> <p>Recurring rules of task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.repeat_from","title":"repeat_from  <code>pydantic-field</code>","text":"<pre><code>repeat_from: RepeatFrom | None = None\n</code></pre> <p>When to start repeating the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.repeat_task_id","title":"repeat_task_id  <code>pydantic-field</code>","text":"<pre><code>repeat_task_id: ObjectId | None = None\n</code></pre> <p>ID of the repeating task if a duplicate is somehow (re)opened</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: datetime | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status\n</code></pre> <p>Status of the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.tags","title":"tags  <code>pydantic-field</code>","text":"<pre><code>tags: list[TagName] = []\n</code></pre> <p>List of tag names for the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None\n</code></pre> <p>Title of the task</p>"},{"location":"reference/models/v2/models/#pyticktick.models.v2.models.TaskV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/types/","title":"Types","text":""},{"location":"reference/models/v2/types/#pyticktick.models.v2.types","title":"pyticktick.models.v2.types","text":"<p>Pydantic types for TickTick V2 API models.</p> <p>This module provides custom types that restrict more general types to the specific values used by the TickTick API. These types are used in Pydantic models to ensure that both requests and responses conform better to the TickTick API.</p> <p>For example, all <code>time_zone</code> fields in the TickTick API are strings, but they all represent IANA time zone names. By using the <code>TimeZoneName</code>type, we can ensure that only valid time zone names are used.</p> <p>There are some custom functions as well to validate some of the types, when Pydantic's supplied validators are not enough.</p> <p>Unofficial API</p> <p>These types are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Functions:</p> Name Description <code>convert_ical_trigger</code> <p>Converts an iCalendar trigger to a timedelta.</p> <code>validate_ical_trigger</code> <p>Validates an iCalendar trigger, without converting it to a timedelta.</p> <code>validate_tt_rrule</code> <p>Validates a TickTick custom Recurrence Rule (RRULE).</p> <p>Attributes:</p> Name Type Description <code>ETag</code> <p>Pydantic type for a TickTick ETag.</p> <code>ICalTrigger</code> <p>Pydantic type for TickTick reminders, follows the iCalendar convention.</p> <code>InboxId</code> <p>Pydantic type for the Project ID of the user's inbox.</p> <code>Kind</code> <p>Pydantic type for a TickTick task.</p> <code>ObjectId</code> <p>Pydantic type for BSON ObjectId.</p> <code>Priority</code> <p>Pydantic type for a TickTick priority.</p> <code>Progress</code> <p>Pydantic type for the progress of a TickTick checklist task.</p> <code>RepeatFrom</code> <p>Pydantic type for a TickTick repeat from.</p> <code>SortOptions</code> <p>Pydantic type for TickTick to sort tasks within a project.</p> <code>Status</code> <p>Pydantic type for a TickTick status.</p> <code>TTRRule</code> <p>Pydantic type for a TickTick repeat flag, loosely based on the iCalendar RRULE.</p> <code>TagLabel</code> <p>Pydantic type for a TickTick tag label.</p> <code>TagName</code> <p>Pydantic type for a TickTick tag name.</p> <code>TimeZoneName</code> <p>Pydantic type for a TickTick time zone name.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.ETag","title":"ETag  <code>module-attribute</code>","text":"<pre><code>ETag = Annotated[\n    str, StringConstraints(pattern=\"^[a-z0-9]{8}$\")\n]\n</code></pre> <p>Pydantic type for a TickTick ETag.</p> <p>This is a string of 8 lowercase alphanumeric characters used to validate the version of a resource.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.ICalTrigger","title":"ICalTrigger  <code>module-attribute</code>","text":"<pre><code>ICalTrigger = Annotated[\n    str, BeforeValidator(validate_ical_trigger)\n]\n</code></pre> <p>Pydantic type for TickTick reminders, follows the iCalendar convention.</p> <p>This is the format used by TickTick to represent reminders. It uses the iCalendar convention for triggers in alarms, as specified in RFC 5545: Alarm Component Properties - Trigger.</p> <p>For all day tasks, the time delta is calculated from midnight of the due date.</p> <p>See some examples below for the possible values:</p> <ul> <li><code>TRIGGER:PT0S</code>: at the time</li> <li><code>TRIGGER:-PT5M</code>: 5 minutes before</li> <li><code>TRIGGER:-PT30M</code>: 30 minutes before</li> <li><code>TRIGGER:-PT60M</code>: 1 hour before</li> <li><code>TRIGGER:-P0DT15H0M0S</code>: 15 hours before</li> <li><code>TRIGGER:-P1DT15H0M0S</code>: 9:00 am the day before, assuming an all-day task</li> <li><code>TRIGGER:P0DT9H0M0S</code>: same day at 9:00 am, assuming an all-day task</li> </ul>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.InboxId","title":"InboxId  <code>module-attribute</code>","text":"<pre><code>InboxId = Annotated[\n    str, StringConstraints(pattern=\"^inbox\\\\d+$\")\n]\n</code></pre> <p>Pydantic type for the Project ID of the user's inbox.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.Kind","title":"Kind  <code>module-attribute</code>","text":"<pre><code>Kind = Literal['TEXT', 'NOTE', 'CHECKLIST']\n</code></pre> <p>Pydantic type for a TickTick task.</p> <p>TickTick provides three kinds of tasks:</p> <pre><code>- `TEXT`: a standard task\n- `NOTE`: a note\n- `CHECKLIST`: a checklist\n</code></pre> <p>These are used in different contexts. See Kinds of Tasks for more info.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.ObjectId","title":"ObjectId  <code>module-attribute</code>","text":"<pre><code>ObjectId = Annotated[\n    str,\n    BeforeValidator(str),\n    BeforeValidator(ObjectId),\n    AfterValidator(str),\n]\n</code></pre> <p>Pydantic type for BSON ObjectId.</p> <p>Note</p> <p>It is an educated guess that TickTick IDs are BSON ObjectIds. This has not been confirmed by TickTick, but we have not seen any evidence to the contrary.</p> <p>Inspired by pydantic/pydantic#7260 (comment), which helps to validate BSON ObjectId in Pydantic models.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.Priority","title":"Priority  <code>module-attribute</code>","text":"<pre><code>Priority = Literal[0, 1, 3, 5]\n</code></pre> <p>Pydantic type for a TickTick priority.</p> <p>TickTick priority codes:</p> <ol> <li><code>0</code>: None</li> <li><code>1</code>: Low</li> <li><code>3</code>: Medium</li> <li><code>5</code>: High</li> </ol>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.Progress","title":"Progress  <code>module-attribute</code>","text":"<pre><code>Progress = Annotated[int, conint(ge=0, le=100)]\n</code></pre> <p>Pydantic type for the progress of a TickTick checklist task.</p> <p>This is an integer between 0 and 100, representing the percentage of completion of a checklist task.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.RepeatFrom","title":"RepeatFrom  <code>module-attribute</code>","text":"<pre><code>RepeatFrom = Annotated[\n    Literal[0, 1, 2], BeforeValidator(int)\n]\n</code></pre> <p>Pydantic type for a TickTick repeat from.</p> <p>TickTick repeat from codes:</p> <ol> <li><code>0</code>: due date</li> <li><code>1</code>: completed date</li> <li><code>2</code>: unknown to date</li> </ol>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.SortOptions","title":"SortOptions  <code>module-attribute</code>","text":"<pre><code>SortOptions = Literal[\n    \"sortOrder\",\n    \"dueDate\",\n    \"tag\",\n    \"priority\",\n    \"project\",\n    \"none\",\n]\n</code></pre> <p>Pydantic type for TickTick to sort tasks within a project.</p> <p>This is used not only for sorting tasks, but also for grouping tasks within a project.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.Status","title":"Status  <code>module-attribute</code>","text":"<pre><code>Status = Literal[-1, 0, 1, 2]\n</code></pre> <p>Pydantic type for a TickTick status.</p> <p>TickTick status codes:</p> <ol> <li><code>0</code>: active</li> <li><code>1</code>: completed</li> <li><code>2</code>: completed (used by TickTick's web app)</li> <li><code>-1</code>: abandoned / won't do</li> </ol>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.TTRRule","title":"TTRRule  <code>module-attribute</code>","text":"<pre><code>TTRRule = Annotated[str, BeforeValidator(validate_tt_rrule)]\n</code></pre> <p>Pydantic type for a TickTick repeat flag, loosely based on the iCalendar RRULE.</p> <p>This is the format used by TickTick to represent recurring tasks. It is similar to the iCalendar RRULE, but with some custom TickTick components. The default RRULE is specified in RFC 5545: Property Value Data Types - Recurrence Rule. TickTick added some custom keys and rules, specified in <code>validate_tt_rrule</code>. Pydantic currently does not support RRULE as a type (pydantic/pydantic-extra-types#118).</p> <p>See some examples below for the possible values:</p> <ol> <li><code>RRULE:FREQ=WEEKLY;INTERVAL=1;WKST=SU;BYDAY=FR,TH,WE</code>: repeats every 1 week on Weds,     Thurs, and Fri</li> <li><code>RRULE:FREQ=DAILY;INTERVAL=2</code>: repeats every 2 days</li> <li><code>RRULE:FREQ=DAILY;INTERVAL=15;TT_SKIP=WEEKEND</code>: repeats every 15 days, skipping     weekends</li> <li><code>RRULE:FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=20</code>: repeats every 1 month on the 20th</li> <li><code>RRULE:FREQ=MONTHLY;INTERVAL=4;BYDAY=5TU</code>: repeats every 4 months on the fifth     Tuesday</li> <li><code>RRULE:FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=1;TT_WORKDAY=1</code>: repeats every 2 months on     the 1st workday</li> <li><code>RRULE:FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=-1;TT_WORKDAY=-1</code>: repeats every 2 months     on the last workday</li> <li><code>ERULE:NAME=CUSTOM;BYDATE=20250731,20250819</code>: repeats on July 31, 2025 and August 19,     2025</li> </ol>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.TagLabel","title":"TagLabel  <code>module-attribute</code>","text":"<pre><code>TagLabel = Annotated[\n    str,\n    StringConstraints(pattern='^[^\\\\\\\\\\\\/\\\\\"#:*?&lt;&gt;|\\\\s]+$'),\n]\n</code></pre> <p>Pydantic type for a TickTick tag label.</p> <p>TickTick tag labels must not contain any of the following characters: <code>\\/\"#:*?&lt;&gt;|</code> or whitespace.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.TagName","title":"TagName  <code>module-attribute</code>","text":"<pre><code>TagName = Annotated[\n    str,\n    StringConstraints(\n        pattern='^[^\\\\\\\\\\\\/\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$'\n    ),\n]\n</code></pre> <p>Pydantic type for a TickTick tag name.</p> <p>TickTick tag names must not contain any of the following characters: <code>\\/\"#:*?&lt;&gt;|</code> or whitespace and must be lowercase.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.TimeZoneName","title":"TimeZoneName  <code>module-attribute</code>","text":"<pre><code>TimeZoneName = Annotated[\n    Optional[TimeZoneName],\n    BeforeValidator(\n        lambda x: None\n        if isinstance(x, str) and len(x) == 0\n        else x\n    ),\n]\n</code></pre> <p>Pydantic type for a TickTick time zone name.</p> <p>TickTick time zone names are based on the IANA Time Zone Database. For the most part, the type should be aligned with <code>pydantic_extra_types.timezone_name.TimeZoneName</code>, except that TickTick allows an empty string or <code>None</code> to represent no time zone.</p>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.convert_ical_trigger","title":"convert_ical_trigger","text":"<pre><code>convert_ical_trigger(trigger: str) -&gt; timedelta | None\n</code></pre> <p>Converts an iCalendar trigger to a timedelta.</p> <p>iCalendar triggers are used in alarms to specify when the alarm will trigger. It follows the convention specified in RFC 5545: Alarm Component Properties - Trigger.</p> <p>The icalendar library is a Python parser/generator for iCalendar files. It supports parsing alarms, but it does not provide an easy way to extract the timedelta from an isolated trigger string. This function works around this limitation.</p> <p>Parameters:</p> Name Type Description Default <code>trigger</code> <code>str</code> <p>An iCalendar trigger.</p> required <p>Returns:</p> Type Description <code>timedelta | None</code> <p>Optional[timedelta]: The timedelta corresponding to the trigger, or None if no trigger is specified.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the trigger is not a valid iCalendar trigger.</p> <code>TypeError</code> <p>If the trigger is not an Alarm or if the Alarm trigger is not a timedelta.</p> Source code in <code>src/pyticktick/models/v2/types.py</code> <pre><code>def convert_ical_trigger(trigger: str) -&gt; timedelta | None:\n    \"\"\"Converts an iCalendar trigger to a timedelta.\n\n    iCalendar triggers are used in alarms to specify when the alarm will trigger. It\n    follows the convention specified in [RFC 5545: Alarm Component Properties - Trigger](https://datatracker.ietf.org/doc/html/rfc5545.html#section-3.8.6.3).\n\n    The icalendar library is a Python parser/generator for iCalendar files. It supports\n    parsing alarms, but it does not provide an easy way to extract the timedelta from\n    an isolated trigger string. This function works around this limitation.\n\n    Args:\n        trigger (str): An iCalendar trigger.\n\n    Returns:\n        Optional[timedelta]: The timedelta corresponding to the trigger, or None\n            if no trigger is specified.\n\n    Raises:\n        ValueError: If the trigger is not a valid iCalendar trigger.\n        TypeError: If the trigger is not an Alarm or if the Alarm trigger is not a\n            timedelta.\n    \"\"\"\n    _trigger = dedent(f\"\"\"\n    BEGIN:VALARM\n    ACTION:DISPLAY\n    {trigger}\n    END:VALARM\n    \"\"\").strip()\n    try:\n        cal = Calendar.from_ical(_trigger)\n    except ValueError as e:\n        if f\"Content line could not be parsed into parts: '{trigger}'\" in str(e):\n            msg = f\"Invalid iCalendar trigger: {trigger}\"\n            raise ValueError(msg) from e\n        raise\n    if not isinstance(cal, Alarm):\n        msg = f\"Invalid iCalendar trigger, expected Alarm, got {type(cal)}\"\n        raise TypeError(msg)\n    if cal.TRIGGER is None:\n        return None\n    if not isinstance(cal.TRIGGER, timedelta):\n        msg = f\"Invalid iCalendar trigger, expected timedelta, got {type(cal.TRIGGER)}\"\n        raise TypeError(msg)\n    return cal.TRIGGER\n</code></pre>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.validate_ical_trigger","title":"validate_ical_trigger","text":"<pre><code>validate_ical_trigger(trigger: str) -&gt; str\n</code></pre> <p>Validates an iCalendar trigger, without converting it to a timedelta.</p> <p>Parameters:</p> Name Type Description Default <code>trigger</code> <code>str</code> <p>An iCalendar trigger.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The same input trigger if it is valid.</p> Source code in <code>src/pyticktick/models/v2/types.py</code> <pre><code>def validate_ical_trigger(trigger: str) -&gt; str:\n    \"\"\"Validates an iCalendar trigger, without converting it to a timedelta.\n\n    Args:\n        trigger (str): An iCalendar trigger.\n\n    Returns:\n        str: The same input trigger if it is valid.\n    \"\"\"\n    convert_ical_trigger(trigger)\n    return trigger\n</code></pre>"},{"location":"reference/models/v2/types/#pyticktick.models.v2.types.validate_tt_rrule","title":"validate_tt_rrule","text":"<pre><code>validate_tt_rrule(rule: str) -&gt; str\n</code></pre> <p>Validates a TickTick custom Recurrence Rule (RRULE).</p> <p>The default RRULE is specified in RFC 5545: Property Value Data Types - Recurrence Rule. The default RRULE parser rrulestr works for the majority of the cases, but it does not support certain custom TickTick components.</p> <p>TickTick added two custom keys to the RRULE: <code>TT_SKIP</code> and <code>TT_WORKDAY</code>, where <code>TT_SKIP=WEEKEND</code> skips weekends and <code>TT_WORKDAY</code> specifies the first (1) or last (-1) workday of the month.</p> <p>TickTick also added a custom <code>ERULE:&lt;RULE&gt;;&lt;RULE&gt;</code> which repeats tasks on exact dates every year.</p> <p>Parameters:</p> Name Type Description Default <code>rule</code> <code>str</code> <p>A TickTick custom RRULE to be validated.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The same input rule if it is valid.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the rule is invalid.</p> Source code in <code>src/pyticktick/models/v2/types.py</code> <pre><code>def validate_tt_rrule(rule: str) -&gt; str:\n    \"\"\"Validates a TickTick custom Recurrence Rule (RRULE).\n\n    The default RRULE is specified in [RFC 5545: Property Value Data Types - Recurrence Rule](https://datatracker.ietf.org/doc/html/rfc5545.html#section-3.3.10).\n    The default RRULE parser [rrulestr](https://dateutil.readthedocs.io/en/stable/rrule.html#dateutil.rrule.rrulestr)\n    works for the majority of the cases, but it does not support certain custom TickTick\n    components.\n\n    TickTick added two custom keys to the RRULE: `TT_SKIP` and `TT_WORKDAY`,\n    where `TT_SKIP=WEEKEND` skips weekends and `TT_WORKDAY` specifies the first (1) or\n    last (-1) workday of the month.\n\n    TickTick also added a custom `ERULE:&lt;RULE&gt;;&lt;RULE&gt;` which repeats tasks on exact\n    dates every year.\n\n    Args:\n        rule (str): A TickTick custom RRULE to be validated.\n\n    Returns:\n        str: The same input rule if it is valid.\n\n    Raises:\n        ValueError: If the rule is invalid.\n    \"\"\"\n    if re.fullmatch(r\"^ERULE:NAME=CUSTOM;BYDATE=(\\d{8},)+(\\d{8})$\", rule):\n        return rule\n\n    _rule = rule\n    for config in [\"TT_SKIP=WEEKEND\", \"TT_WORKDAY=1\", \"TT_WORKDAY=-1\"]:\n        _rule = _rule.replace(f\":{config}\", \"\").replace(f\";{config}\", \"\")\n\n    try:\n        rrulestr(_rule)\n    except ValueError as e:\n        msg = f\"Invalid TickTick RRULE: {rule}\"\n        raise ValueError(msg) from e\n\n    return rule\n</code></pre>"},{"location":"reference/models/v2/parameters/closed/","title":"Closed","text":""},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed","title":"pyticktick.models.v2.parameters.closed","text":"<p>Model for getting closed tasks from the database.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>GetClosedV2</code> <p>Model for getting closed tasks from the database.</p>"},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed.GetClosedV2","title":"GetClosedV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for getting closed tasks from the database.</p> <p>These are tasks that have been marked as completed or abandoned. They will not show up in the normal task list.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for getting closed tasks from the database.\\n\\nThese are tasks that have been marked as completed or abandoned. They will not show\\nup in the normal task list.\",\n  \"properties\": {\n    \"from_\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The earliest date to get tasks from\",\n      \"title\": \"From\"\n    },\n    \"to\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The latest date to get tasks from\",\n      \"title\": \"To\"\n    },\n    \"status\": {\n      \"description\": \"Whether to get completed or \\\"won't do\\\" tasks\",\n      \"enum\": [\n        \"Completed\",\n        \"Abandoned\"\n      ],\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"status\"\n  ],\n  \"title\": \"GetClosedV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>from_</code>                 (<code>datetime | None</code>)             </li> <li> <code>to</code>                 (<code>datetime | None</code>)             </li> <li> <code>status</code>                 (<code>Literal['Completed', 'Abandoned']</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed.GetClosedV2.from_","title":"from_  <code>pydantic-field</code>","text":"<pre><code>from_: datetime | None = None\n</code></pre> <p>The earliest date to get tasks from</p>"},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed.GetClosedV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Literal['Completed', 'Abandoned']\n</code></pre> <p>Whether to get completed or \"won't do\" tasks</p>"},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed.GetClosedV2.to","title":"to  <code>pydantic-field</code>","text":"<pre><code>to: datetime | None = None\n</code></pre> <p>The latest date to get tasks from</p>"},{"location":"reference/models/v2/parameters/closed/#pyticktick.models.v2.parameters.closed.GetClosedV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project/","title":"Project","text":""},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project","title":"pyticktick.models.v2.parameters.project","text":"<p>Parameters for creating and updating projects via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>CreateProjectV2</code> <p>Model for creating a project via the V2 API.</p> <code>PostBatchProjectV2</code> <p>Model for batch project operations via the V2 API.</p> <code>UpdateProjectV2</code> <p>Model for updating a project via the V2 API.</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2","title":"CreateProjectV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a project via the V2 API.</p> <p>This model is used to create a project via the V2 API. It mostly maps to the create project documentation in the API docs. The main differences are the addition of the <code>id</code> and <code>group_id</code> fields. This is used in the <code>PostBatchProjectV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a project via the V2 API.\\n\\nThis model is used to create a project via the V2 API. It mostly maps to the\\n[create project](https://developer.ticktick.com/docs#/openapi?id=create-project)\\ndocumentation in the API docs. The main differences are the addition of the `id`\\nand `group_id` fields. This is used in the `PostBatchProjectV2` model.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"name of the project\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"color of project, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"group_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the project group to add the project to\",\n      \"title\": \"Group Id\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the project to create\",\n      \"title\": \"Id\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    },\n    \"view_mode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"View Mode\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"CreateProjectV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>group_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>color of project, eg. '#F18181'</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.group_id","title":"group_id  <code>pydantic-field</code>","text":"<pre><code>group_id: ObjectId | None = None\n</code></pre> <p>ID of the project group to add the project to</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>ID of the project to create</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>name of the project</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.CreateProjectV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.PostBatchProjectV2","title":"PostBatchProjectV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for batch project operations via the V2 API.</p> <p>This model is used to create, update, and delete projects in bulk against the V2 API endpoint <code>POST /batch/project</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateProjectV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a project via the V2 API.\\n\\nThis model is used to create a project via the V2 API. It mostly maps to the\\n[create project](https://developer.ticktick.com/docs#/openapi?id=create-project)\\ndocumentation in the API docs. The main differences are the addition of the `id`\\nand `group_id` fields. This is used in the `PostBatchProjectV2` model.\",\n      \"properties\": {\n        \"name\": {\n          \"description\": \"name of the project\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"color of project, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"group_id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the project group to add the project to\",\n          \"title\": \"Group Id\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the project to create\",\n          \"title\": \"Id\"\n        },\n        \"kind\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"TASK\",\n                \"NOTE\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n          \"title\": \"Kind\"\n        },\n        \"view_mode\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"list\",\n                \"kanban\",\n                \"timeline\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n          \"title\": \"View Mode\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"CreateProjectV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateProjectV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a project via the V2 API.\\n\\nThis model is used to update a project via the V2 API. It mostly maps to the\\n[update project](https://developer.ticktick.com/docs#/openapi?id=update-project)\\ndocumentation in the API docs. The main differences are the addition of the `id`\\nand `group_id` fields. This is used in the `PostBatchProjectV2` model.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"ID of the project to update\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"name of the project, must be set even on update\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"color of project, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"group_id\": {\n          \"anyOf\": [\n            {\n              \"const\": \"NONE\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the project group to move the project to, `\\\"NONE\\\"` to actively be ungrouped, `None` to be set to the group it was in before\",\n          \"title\": \"Group Id\"\n        },\n        \"kind\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"TASK\",\n                \"NOTE\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n          \"title\": \"Kind\"\n        },\n        \"view_mode\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"list\",\n                \"kanban\",\n                \"timeline\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n          \"title\": \"View Mode\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"title\": \"UpdateProjectV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for batch project operations via the V2 API.\\n\\nThis model is used to create, update, and delete projects in bulk against the V2 API\\nendpoint `POST /batch/project`.\",\n  \"properties\": {\n    \"add\": {\n      \"default\": [],\n      \"description\": \"List of projects to add\",\n      \"items\": {\n        \"$ref\": \"#/$defs/CreateProjectV2\"\n      },\n      \"title\": \"Add\",\n      \"type\": \"array\"\n    },\n    \"delete\": {\n      \"default\": [],\n      \"description\": \"List of project IDs to delete\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Delete\",\n      \"type\": \"array\"\n    },\n    \"update\": {\n      \"default\": [],\n      \"description\": \"List of projects to update\",\n      \"items\": {\n        \"$ref\": \"#/$defs/UpdateProjectV2\"\n      },\n      \"title\": \"Update\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"PostBatchProjectV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>add</code>                 (<code>list[CreateProjectV2]</code>)             </li> <li> <code>delete</code>                 (<code>list[ObjectId]</code>)             </li> <li> <code>update</code>                 (<code>list[UpdateProjectV2]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.PostBatchProjectV2.add","title":"add  <code>pydantic-field</code>","text":"<pre><code>add: list[CreateProjectV2] = []\n</code></pre> <p>List of projects to add</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.PostBatchProjectV2.delete","title":"delete  <code>pydantic-field</code>","text":"<pre><code>delete: list[ObjectId] = []\n</code></pre> <p>List of project IDs to delete</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.PostBatchProjectV2.update","title":"update  <code>pydantic-field</code>","text":"<pre><code>update: list[UpdateProjectV2] = []\n</code></pre> <p>List of projects to update</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.PostBatchProjectV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2","title":"UpdateProjectV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for updating a project via the V2 API.</p> <p>This model is used to update a project via the V2 API. It mostly maps to the update project documentation in the API docs. The main differences are the addition of the <code>id</code> and <code>group_id</code> fields. This is used in the <code>PostBatchProjectV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a project via the V2 API.\\n\\nThis model is used to update a project via the V2 API. It mostly maps to the\\n[update project](https://developer.ticktick.com/docs#/openapi?id=update-project)\\ndocumentation in the API docs. The main differences are the addition of the `id`\\nand `group_id` fields. This is used in the `PostBatchProjectV2` model.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"ID of the project to update\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"description\": \"name of the project, must be set even on update\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"color of project, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"group_id\": {\n      \"anyOf\": [\n        {\n          \"const\": \"NONE\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the project group to move the project to, `\\\"NONE\\\"` to actively be ungrouped, `None` to be set to the group it was in before\",\n      \"title\": \"Group Id\"\n    },\n    \"kind\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"TASK\",\n            \"NOTE\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n      \"title\": \"Kind\"\n    },\n    \"view_mode\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"list\",\n            \"kanban\",\n            \"timeline\"\n          ],\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n      \"title\": \"View Mode\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"name\"\n  ],\n  \"title\": \"UpdateProjectV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>group_id</code>                 (<code>Union[Literal['NONE'], None, ObjectId]</code>)             </li> <li> <code>kind</code>                 (<code>Literal['TASK', 'NOTE'] | None</code>)             </li> <li> <code>view_mode</code>                 (<code>Literal['list', 'kanban', 'timeline'] | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>color of project, eg. '#F18181'</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.group_id","title":"group_id  <code>pydantic-field</code>","text":"<pre><code>group_id: Union[Literal['NONE'], None, ObjectId] = None\n</code></pre> <p>ID of the project group to move the project to, <code>\"NONE\"</code> to actively be ungrouped, <code>None</code> to be set to the group it was in before</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>ID of the project to update</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Literal['TASK', 'NOTE'] | None = None\n</code></pre> <p>\"TASK\" or \"NOTE\"</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>name of the project, must be set even on update</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.view_mode","title":"view_mode  <code>pydantic-field</code>","text":"<pre><code>view_mode: Literal[\"list\", \"kanban\", \"timeline\"] | None = (\n    None\n)\n</code></pre> <p>view mode, \"list\", \"kanban\", \"timeline\"</p>"},{"location":"reference/models/v2/parameters/project/#pyticktick.models.v2.parameters.project.UpdateProjectV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project_group/","title":"Project Group","text":""},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group","title":"pyticktick.models.v2.parameters.project_group","text":"<p>Parameters for creating and updating project groups via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>CreateProjectGroupV2</code> <p>Model for creating a project group via the V2 API.</p> <code>PostBatchProjectGroupV2</code> <p>Model for batch project group operations via the V2 API.</p> <code>UpdateProjectGroupV2</code> <p>Model for updating a project group via the V2 API.</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.CreateProjectGroupV2","title":"CreateProjectGroupV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a project group via the V2 API.</p> <p>This model is used to create a project group via the V2 API. This is not currently documented or supported in the official API docs. This is used in the <code>PostBatchProjectGroupV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a project group via the V2 API.\\n\\nThis model is used to create a project group via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used in the\\n`PostBatchProjectGroupV2` model.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the project group to create\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ID of the project group to create\",\n      \"title\": \"Id\"\n    },\n    \"list_type\": {\n      \"const\": \"group\",\n      \"default\": \"group\",\n      \"description\": \"Fixed value 'group'\",\n      \"title\": \"List Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"CreateProjectGroupV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>list_type</code>                 (<code>Literal['group']</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.CreateProjectGroupV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>ID of the project group to create</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.CreateProjectGroupV2.list_type","title":"list_type  <code>pydantic-field</code>","text":"<pre><code>list_type: Literal['group'] = 'group'\n</code></pre> <p>Fixed value 'group'</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.CreateProjectGroupV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Name of the project group to create</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.CreateProjectGroupV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.PostBatchProjectGroupV2","title":"PostBatchProjectGroupV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for batch project group operations via the V2 API.</p> <p>This model is used to batch create, update, and delete project groups in bulk against the V2 API endpoint <code>POST /batch/projectGroup</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateProjectGroupV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a project group via the V2 API.\\n\\nThis model is used to create a project group via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used in the\\n`PostBatchProjectGroupV2` model.\",\n      \"properties\": {\n        \"name\": {\n          \"description\": \"Name of the project group to create\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the project group to create\",\n          \"title\": \"Id\"\n        },\n        \"list_type\": {\n          \"const\": \"group\",\n          \"default\": \"group\",\n          \"description\": \"Fixed value 'group'\",\n          \"title\": \"List Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ],\n      \"title\": \"CreateProjectGroupV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateProjectGroupV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a project group via the V2 API.\\n\\nThis model is used to update a project group via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used in the\\n`PostBatchProjectGroupV2` model.\",\n      \"properties\": {\n        \"name\": {\n          \"description\": \"Name of the project group to update\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"ID of the project group to update\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"list_type\": {\n          \"const\": \"group\",\n          \"default\": \"group\",\n          \"description\": \"Fixed value 'group'\",\n          \"title\": \"List Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"id\"\n      ],\n      \"title\": \"UpdateProjectGroupV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for batch project group operations via the V2 API.\\n\\nThis model is used to batch create, update, and delete project groups in bulk\\nagainst the V2 API endpoint `POST /batch/projectGroup`.\",\n  \"properties\": {\n    \"add\": {\n      \"default\": [],\n      \"description\": \"List of project groups to add\",\n      \"items\": {\n        \"$ref\": \"#/$defs/CreateProjectGroupV2\"\n      },\n      \"title\": \"Add\",\n      \"type\": \"array\"\n    },\n    \"delete\": {\n      \"default\": [],\n      \"description\": \"List of project group IDs to delete\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Delete\",\n      \"type\": \"array\"\n    },\n    \"update\": {\n      \"default\": [],\n      \"description\": \"List of project groups to update\",\n      \"items\": {\n        \"$ref\": \"#/$defs/UpdateProjectGroupV2\"\n      },\n      \"title\": \"Update\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"PostBatchProjectGroupV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>add</code>                 (<code>list[CreateProjectGroupV2]</code>)             </li> <li> <code>delete</code>                 (<code>list[ObjectId]</code>)             </li> <li> <code>update</code>                 (<code>list[UpdateProjectGroupV2]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.PostBatchProjectGroupV2.add","title":"add  <code>pydantic-field</code>","text":"<pre><code>add: list[CreateProjectGroupV2] = []\n</code></pre> <p>List of project groups to add</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.PostBatchProjectGroupV2.delete","title":"delete  <code>pydantic-field</code>","text":"<pre><code>delete: list[ObjectId] = []\n</code></pre> <p>List of project group IDs to delete</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.PostBatchProjectGroupV2.update","title":"update  <code>pydantic-field</code>","text":"<pre><code>update: list[UpdateProjectGroupV2] = []\n</code></pre> <p>List of project groups to update</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.PostBatchProjectGroupV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.UpdateProjectGroupV2","title":"UpdateProjectGroupV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for updating a project group via the V2 API.</p> <p>This model is used to update a project group via the V2 API. This is not currently documented or supported in the official API docs. This is used in the <code>PostBatchProjectGroupV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a project group via the V2 API.\\n\\nThis model is used to update a project group via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used in the\\n`PostBatchProjectGroupV2` model.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Name of the project group to update\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"id\": {\n      \"description\": \"ID of the project group to update\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"list_type\": {\n      \"const\": \"group\",\n      \"default\": \"group\",\n      \"description\": \"Fixed value 'group'\",\n      \"title\": \"List Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"id\"\n  ],\n  \"title\": \"UpdateProjectGroupV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>list_type</code>                 (<code>Literal['group']</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.UpdateProjectGroupV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>ID of the project group to update</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.UpdateProjectGroupV2.list_type","title":"list_type  <code>pydantic-field</code>","text":"<pre><code>list_type: Literal['group'] = 'group'\n</code></pre> <p>Fixed value 'group'</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.UpdateProjectGroupV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Name of the project group to update</p>"},{"location":"reference/models/v2/parameters/project_group/#pyticktick.models.v2.parameters.project_group.UpdateProjectGroupV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/tag/","title":"Tag","text":""},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag","title":"pyticktick.models.v2.parameters.tag","text":"<p>Parameters for creating and update tags via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>CreateTagV2</code> <p>Model for creating a tag via the V2 API.</p> <code>DeleteTagV2</code> <p>Model for deleting a tag via the V2 API.</p> <code>PostBatchTagV2</code> <p>Model for batch tag operations via the V2 API.</p> <code>RenameTagV2</code> <p>Model for renaming a tag via the V2 API.</p> <code>UpdateTagV2</code> <p>Model for updating a tag via the V2 API.</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2","title":"CreateTagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a tag via the V2 API.</p> <p>This model is used to create a tag via the V2 API. This is not currently documented or supported in the official API docs. This is used in the <code>PostBatchTagV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a tag via the V2 API.\\n\\nThis model is used to create a tag via the V2 API. This is not currently documented\\nor supported in the official API docs. This is used in the `PostBatchTagV2` model.\",\n  \"properties\": {\n    \"label\": {\n      \"description\": \"Name of the tag to create\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n      \"title\": \"Label\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Color of the tag, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Name of the tag to create\",\n      \"title\": \"Name\"\n    },\n    \"parent\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Name of the parent tag\",\n      \"title\": \"Parent\"\n    },\n    \"sort_type\": {\n      \"default\": \"project\",\n      \"description\": \"Sort type when displaying by selected tag\",\n      \"enum\": [\n        \"project\",\n        \"title\",\n        \"tag\"\n      ],\n      \"title\": \"Sort Type\",\n      \"type\": \"string\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"label\"\n  ],\n  \"title\": \"CreateTagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>label</code>                 (<code>TagLabel</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>name</code>                 (<code>TagName | None</code>)             </li> <li> <code>parent</code>                 (<code>str | None</code>)             </li> <li> <code>sort_type</code>                 (<code>Literal['project', 'title', 'tag']</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> <li> <code>_validate_name</code> </li> </ul>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>Color of the tag, eg. '#F18181'</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.label","title":"label  <code>pydantic-field</code>","text":"<pre><code>label: TagLabel\n</code></pre> <p>Name of the tag to create</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: TagName | None = None\n</code></pre> <p>Name of the tag to create</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.parent","title":"parent  <code>pydantic-field</code>","text":"<pre><code>parent: str | None = None\n</code></pre> <p>Name of the parent tag</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.sort_type","title":"sort_type  <code>pydantic-field</code>","text":"<pre><code>sort_type: Literal['project', 'title', 'tag'] = 'project'\n</code></pre> <p>Sort type when displaying by selected tag</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.CreateTagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.DeleteTagV2","title":"DeleteTagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for deleting a tag via the V2 API.</p> <p>This model is used to delete a tag against the V2 API endpoint <code>DELETE /tag</code>. This is not currently documented or supported in the official API docs.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for deleting a tag via the V2 API.\\n\\nThis model is used to delete a tag against the V2 API endpoint `DELETE /tag`. This\\nis not currently documented or supported in the official API docs.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Identifier of the tag to delete\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"title\": \"DeleteTagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.DeleteTagV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>Identifier of the tag to delete</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.DeleteTagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.PostBatchTagV2","title":"PostBatchTagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for batch tag operations via the V2 API.</p> <p>This model is used to batch create, and update tags in bulk against the V2 API endpoint <code>POST /batch/tag</code>.</p> <p>Note</p> <p>While batch operations usually support adding, updating, and deleting, this endpoint only supports adding and updating tags. Deleting tags supported separately.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateTagV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a tag via the V2 API.\\n\\nThis model is used to create a tag via the V2 API. This is not currently documented\\nor supported in the official API docs. This is used in the `PostBatchTagV2` model.\",\n      \"properties\": {\n        \"label\": {\n          \"description\": \"Name of the tag to create\",\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n          \"title\": \"Label\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Color of the tag, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the tag to create\",\n          \"title\": \"Name\"\n        },\n        \"parent\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the parent tag\",\n          \"title\": \"Parent\"\n        },\n        \"sort_type\": {\n          \"default\": \"project\",\n          \"description\": \"Sort type when displaying by selected tag\",\n          \"enum\": [\n            \"project\",\n            \"title\",\n            \"tag\"\n          ],\n          \"title\": \"Sort Type\",\n          \"type\": \"string\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"label\"\n      ],\n      \"title\": \"CreateTagV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateTagV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a tag via the V2 API.\\n\\nThis model is used to update a tag via the V2 API. This is not currently documented\\nor supported in the official API docs. This is used in the `PostBatchTagV2` model.\",\n      \"properties\": {\n        \"label\": {\n          \"description\": \"Name of the tag to update\",\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n          \"title\": \"Label\",\n          \"type\": \"string\"\n        },\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Color of the tag, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"name\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Stand-in for the identifier of the tag, by default will be the tag label, but lowercase, it is recommended to not specify this field\",\n          \"title\": \"Name\"\n        },\n        \"parent\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the parent tag\",\n          \"title\": \"Parent\"\n        },\n        \"raw_name\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Original name of the tag, used to identify it\",\n          \"title\": \"Raw Name\"\n        },\n        \"sort_type\": {\n          \"default\": \"project\",\n          \"description\": \"Sort type when displaying by selected tag\",\n          \"enum\": [\n            \"project\",\n            \"title\",\n            \"tag\"\n          ],\n          \"title\": \"Sort Type\",\n          \"type\": \"string\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"label\"\n      ],\n      \"title\": \"UpdateTagV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for batch tag operations via the V2 API.\\n\\nThis model is used to batch create, and update tags in bulk against the V2 API\\nendpoint `POST /batch/tag`.\\n\\n!!! note\\n    While batch operations usually support adding, updating, and deleting, this\\n    endpoint only supports adding and updating tags. Deleting tags supported\\n    separately.\",\n  \"properties\": {\n    \"add\": {\n      \"default\": [],\n      \"description\": \"List of tags to add\",\n      \"items\": {\n        \"$ref\": \"#/$defs/CreateTagV2\"\n      },\n      \"title\": \"Add\",\n      \"type\": \"array\"\n    },\n    \"update\": {\n      \"default\": [],\n      \"description\": \"List of tags to update\",\n      \"items\": {\n        \"$ref\": \"#/$defs/UpdateTagV2\"\n      },\n      \"title\": \"Update\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"PostBatchTagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>add</code>                 (<code>list[CreateTagV2]</code>)             </li> <li> <code>update</code>                 (<code>list[UpdateTagV2]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.PostBatchTagV2.add","title":"add  <code>pydantic-field</code>","text":"<pre><code>add: list[CreateTagV2] = []\n</code></pre> <p>List of tags to add</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.PostBatchTagV2.update","title":"update  <code>pydantic-field</code>","text":"<pre><code>update: list[UpdateTagV2] = []\n</code></pre> <p>List of tags to update</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.PostBatchTagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.RenameTagV2","title":"RenameTagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for renaming a tag via the V2 API.</p> <p>This model is used to rename a tag via the V2 API endpoint <code>PUT /tag/rename</code>. This is not currently documented or supported in the official API docs.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for renaming a tag via the V2 API.\\n\\nThis model is used to rename a tag via the V2 API endpoint `PUT /tag/rename`. This\\nis not currently documented or supported in the official API docs.\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"Identifier of the tag to rename\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"new_name\": {\n      \"description\": \"New name for the tag\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n      \"title\": \"New Name\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"new_name\"\n  ],\n  \"title\": \"RenameTagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>TagName</code>)             </li> <li> <code>new_name</code>                 (<code>TagLabel</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.RenameTagV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: TagName\n</code></pre> <p>Identifier of the tag to rename</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.RenameTagV2.new_name","title":"new_name  <code>pydantic-field</code>","text":"<pre><code>new_name: TagLabel\n</code></pre> <p>New name for the tag</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.RenameTagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2","title":"UpdateTagV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for updating a tag via the V2 API.</p> <p>This model is used to update a tag via the V2 API. This is not currently documented or supported in the official API docs. This is used in the <code>PostBatchTagV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a tag via the V2 API.\\n\\nThis model is used to update a tag via the V2 API. This is not currently documented\\nor supported in the official API docs. This is used in the `PostBatchTagV2` model.\",\n  \"properties\": {\n    \"label\": {\n      \"description\": \"Name of the tag to update\",\n      \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n      \"title\": \"Label\",\n      \"type\": \"string\"\n    },\n    \"color\": {\n      \"anyOf\": [\n        {\n          \"format\": \"color\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Color of the tag, eg. '#F18181'\",\n      \"title\": \"Color\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Stand-in for the identifier of the tag, by default will be the tag label, but lowercase, it is recommended to not specify this field\",\n      \"title\": \"Name\"\n    },\n    \"parent\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Name of the parent tag\",\n      \"title\": \"Parent\"\n    },\n    \"raw_name\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Original name of the tag, used to identify it\",\n      \"title\": \"Raw Name\"\n    },\n    \"sort_type\": {\n      \"default\": \"project\",\n      \"description\": \"Sort type when displaying by selected tag\",\n      \"enum\": [\n        \"project\",\n        \"title\",\n        \"tag\"\n      ],\n      \"title\": \"Sort Type\",\n      \"type\": \"string\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"label\"\n  ],\n  \"title\": \"UpdateTagV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>label</code>                 (<code>TagLabel</code>)             </li> <li> <code>color</code>                 (<code>Color | None</code>)             </li> <li> <code>name</code>                 (<code>TagName | None</code>)             </li> <li> <code>parent</code>                 (<code>str | None</code>)             </li> <li> <code>raw_name</code>                 (<code>TagName | None</code>)             </li> <li> <code>sort_type</code>                 (<code>Literal['project', 'title', 'tag']</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> <li> <code>_validate_name</code> </li> </ul>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.color","title":"color  <code>pydantic-field</code>","text":"<pre><code>color: Color | None = None\n</code></pre> <p>Color of the tag, eg. '#F18181'</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.label","title":"label  <code>pydantic-field</code>","text":"<pre><code>label: TagLabel\n</code></pre> <p>Name of the tag to update</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: TagName | None = None\n</code></pre> <p>Stand-in for the identifier of the tag, by default will be the tag label, but lowercase, it is recommended to not specify this field</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.parent","title":"parent  <code>pydantic-field</code>","text":"<pre><code>parent: str | None = None\n</code></pre> <p>Name of the parent tag</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.raw_name","title":"raw_name  <code>pydantic-field</code>","text":"<pre><code>raw_name: TagName | None = None\n</code></pre> <p>Original name of the tag, used to identify it</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.sort_type","title":"sort_type  <code>pydantic-field</code>","text":"<pre><code>sort_type: Literal['project', 'title', 'tag'] = 'project'\n</code></pre> <p>Sort type when displaying by selected tag</p>"},{"location":"reference/models/v2/parameters/tag/#pyticktick.models.v2.parameters.tag.UpdateTagV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/","title":"Task","text":""},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task","title":"pyticktick.models.v2.parameters.task","text":"<p>Parameters for creating and updating tasks via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>CreateItemV2</code> <p>Model for creating a checklist item via the V2 API.</p> <code>CreateTaskReminderV2</code> <p>Model for creating a reminder for a task via the V2 API.</p> <code>CreateTaskV2</code> <p>Model for creating a task via the V2 API.</p> <code>DeleteTaskV2</code> <p>Model for deleting a task via the V2 API.</p> <code>PostBatchTaskV2</code> <p>Model for batch task operations via the V2 API.</p> <code>UpdateItemV2</code> <p>Model for updating a checklist item via the V2 API.</p> <code>UpdateTaskReminderV2</code> <p>Model for creating a reminder for a task via the V2 API.</p> <code>UpdateTaskV2</code> <p>Model for updating a task via the V2 API.</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2","title":"CreateItemV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a checklist item via the V2 API.</p> <p>This model is used to create a checklist item via the V2 API, but its identical to the <code>CreateItemV1</code> model. It directly maps to the 'items' field in the create task documentation. It is used in the <code>CreateTaskV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a checklist item via the V2 API.\\n\\nThis model is used to create a checklist item via the V2 API, but its identical to\\nthe `CreateItemV1` model. It directly maps to the 'items' field in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. It is used in the `CreateTaskV2` model.\",\n  \"properties\": {\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Completed Time\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Checklist item ID\",\n      \"title\": \"Id\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Is All Day\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The completion status of checklist item\",\n      \"title\": \"Status\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Time Zone\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Checklist item title\",\n      \"title\": \"Title\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"title\": \"CreateItemV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>completed_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: datetime | None = None\n</code></pre> <p>Completed time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>Checklist item ID</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status | None = None\n</code></pre> <p>The completion status of checklist item</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Checklist item title</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateItemV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskReminderV2","title":"CreateTaskReminderV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a reminder for a task via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n  \"properties\": {\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Reminder ID\",\n      \"title\": \"Id\"\n    },\n    \"trigger\": {\n      \"description\": \"Reminder trigger\",\n      \"title\": \"Trigger\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"trigger\"\n  ],\n  \"title\": \"CreateTaskReminderV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>trigger</code>                 (<code>ICalTrigger</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskReminderV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>Reminder ID</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskReminderV2.trigger","title":"trigger  <code>pydantic-field</code>","text":"<pre><code>trigger: ICalTrigger\n</code></pre> <p>Reminder trigger</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskReminderV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2","title":"CreateTaskV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a task via the V2 API.</p> <p>This model is used to create a task via the V2 API. It mostly maps to the 'items' field in the create task documentation. The main differences are the addition of the following fields:</p> <ul> <li><code>modified_time</code></li> <li><code>completed_time</code></li> <li><code>completed_user_id</code></li> <li><code>tags</code></li> <li><code>etag</code></li> <li><code>kind</code></li> <li><code>status</code></li> <li><code>is_floating</code></li> <li><code>creator</code></li> <li><code>assignee</code></li> <li><code>progress</code></li> </ul> <p>This is used in the <code>PostBatchTaskV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a checklist item via the V2 API.\\n\\nThis model is used to create a checklist item via the V2 API, but its identical to\\nthe `CreateItemV1` model. It directly maps to the 'items' field in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. It is used in the `CreateTaskV2` model.\",\n      \"properties\": {\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item ID\",\n          \"title\": \"Id\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"title\": \"CreateItemV2\",\n      \"type\": \"object\"\n    },\n    \"CreateTaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"trigger\"\n      ],\n      \"title\": \"CreateTaskReminderV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a task via the V2 API.\\n\\nThis model is used to create a task via the V2 API. It mostly maps to the 'items'\\nfield in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. The main differences are the addition of the following fields:\\n\\n- `modified_time`\\n- `completed_time`\\n- `completed_user_id`\\n- `tags`\\n- `etag`\\n- `kind`\\n- `status`\\n- `is_floating`\\n- `creator`\\n- `assignee`\\n- `progress`\\n\\nThis is used in the `PostBatchTaskV2` model.\",\n  \"properties\": {\n    \"project_id\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^inbox\\\\d+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"Task project id. (Note: This is missing in the API docs)\",\n      \"title\": \"Project Id\"\n    },\n    \"title\": {\n      \"description\": \"Task title\",\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Completed Time\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n      \"title\": \"Content\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n      \"title\": \"Desc\"\n    },\n    \"due_date\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Due Date\"\n    },\n    \"etag\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ETag of the task\",\n      \"title\": \"Etag\"\n    },\n    \"id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task id\",\n      \"title\": \"Id\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Is All Day\"\n    },\n    \"is_floating\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task will remain at the same time regardless of time zone\",\n      \"title\": \"Is Floating\"\n    },\n    \"items\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/CreateItemV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The list of checklist items to create\",\n      \"title\": \"Items\"\n    },\n    \"kind\": {\n      \"default\": \"TEXT\",\n      \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n      \"enum\": [\n        \"TEXT\",\n        \"NOTE\",\n        \"CHECKLIST\"\n      ],\n      \"title\": \"Kind\",\n      \"type\": \"string\"\n    },\n    \"modified_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Modified Time\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/CreateTaskReminderV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Lists of reminders specific to the task\",\n      \"title\": \"Reminders\"\n    },\n    \"repeat_flag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task\",\n      \"title\": \"Repeat Flag\"\n    },\n    \"repeat_from\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"When to start repeating the task\",\n      \"title\": \"Repeat From\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The priority of task, default is '0'\",\n      \"title\": \"Priority\"\n    },\n    \"progress\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n      \"title\": \"Progress\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Status of the task\",\n      \"title\": \"Status\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Time Zone\"\n    },\n    \"tags\": {\n      \"default\": [],\n      \"description\": \"List of tags to add\",\n      \"items\": {\n        \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n        \"type\": \"string\"\n      },\n      \"title\": \"Tags\",\n      \"type\": \"array\"\n    },\n    \"assignee\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignee\"\n    },\n    \"completed_user_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completed User Id\"\n    },\n    \"creator\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Creator\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"project_id\",\n    \"title\"\n  ],\n  \"title\": \"CreateTaskV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>project_id</code>                 (<code>Union[InboxId, ObjectId]</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>completed_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag | None</code>)             </li> <li> <code>id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>is_floating</code>                 (<code>bool | None</code>)             </li> <li> <code>items</code>                 (<code>list[CreateItemV2] | None</code>)             </li> <li> <code>kind</code>                 (<code>Kind</code>)             </li> <li> <code>modified_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>reminders</code>                 (<code>list[CreateTaskReminderV2] | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>TTRRule | None</code>)             </li> <li> <code>repeat_from</code>                 (<code>RepeatFrom | None</code>)             </li> <li> <code>priority</code>                 (<code>Priority | None</code>)             </li> <li> <code>progress</code>                 (<code>Progress | None</code>)             </li> <li> <code>start_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>tags</code>                 (<code>list[TagName]</code>)             </li> <li> <code>assignee</code>                 (<code>int | None</code>)             </li> <li> <code>completed_user_id</code>                 (<code>int | None</code>)             </li> <li> <code>creator</code>                 (<code>int | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> <li> <code>_mutually_exclusive_fields</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: datetime | None = None\n</code></pre> <p>Completed time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Content of the task, used for <code>TEXT</code> or <code>NOTE</code> tasks, otherwise <code>desc</code> is used</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Description of the task, used for <code>CHECKLIST</code> tasks, otherwise <code>content</code> is used</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: datetime | None = None\n</code></pre> <p>Due date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag | None = None\n</code></pre> <p>ETag of the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId | None = None\n</code></pre> <p>Task id</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.is_floating","title":"is_floating  <code>pydantic-field</code>","text":"<pre><code>is_floating: bool | None = None\n</code></pre> <p>The task will remain at the same time regardless of time zone</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[CreateItemV2] | None = None\n</code></pre> <p>The list of checklist items to create</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Kind = 'TEXT'\n</code></pre> <p>\"TEXT\", \"NOTE\", or \"CHECKLIST\"</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.modified_time","title":"modified_time  <code>pydantic-field</code>","text":"<pre><code>modified_time: datetime | None = None\n</code></pre> <p>Last modified time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Priority | None = None\n</code></pre> <p>The priority of task, default is '0'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.progress","title":"progress  <code>pydantic-field</code>","text":"<pre><code>progress: Progress | None = None\n</code></pre> <p>Progress of a <code>CHECKLIST</code> task, should be a number between 0 and 100</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: Union[InboxId, ObjectId]\n</code></pre> <p>Task project id. (Note: This is missing in the API docs)</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[CreateTaskReminderV2] | None = None\n</code></pre> <p>Lists of reminders specific to the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: TTRRule | None = None\n</code></pre> <p>Recurring rules of task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.repeat_from","title":"repeat_from  <code>pydantic-field</code>","text":"<pre><code>repeat_from: RepeatFrom | None = None\n</code></pre> <p>When to start repeating the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: datetime | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status | None = None\n</code></pre> <p>Status of the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.tags","title":"tags  <code>pydantic-field</code>","text":"<pre><code>tags: list[TagName] = []\n</code></pre> <p>List of tags to add</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>Task title</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.CreateTaskV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.DeleteTaskV2","title":"DeleteTaskV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for deleting a task via the V2 API.</p> <p>This model is used to delete a task via the V2 API. It mostly maps to the <code>DELETE /project/{project_id}/task/{task_id}</code> endpoint in the API docs. Since it's used in a batch operation, it must be bundled in the <code>PostBatchTaskV2</code> model, rather than being a direct call to the API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for deleting a task via the V2 API.\\n\\nThis model is used to delete a task via the V2 API. It mostly maps to the `DELETE\\n/project/{project_id}/task/{task_id}` endpoint in the API docs. Since it's used\\nin a batch operation, it must be bundled in the `PostBatchTaskV2` model, rather\\nthan being a direct call to the API.\",\n  \"properties\": {\n    \"project_id\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^inbox\\\\d+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"ID of the project the task belongs to\",\n      \"title\": \"Project Id\"\n    },\n    \"task_id\": {\n      \"description\": \"ID of the task to delete\",\n      \"title\": \"Task Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"project_id\",\n    \"task_id\"\n  ],\n  \"title\": \"DeleteTaskV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>project_id</code>                 (<code>Union[InboxId, ObjectId]</code>)             </li> <li> <code>task_id</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.DeleteTaskV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: Union[InboxId, ObjectId]\n</code></pre> <p>ID of the project the task belongs to</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.DeleteTaskV2.task_id","title":"task_id  <code>pydantic-field</code>","text":"<pre><code>task_id: str\n</code></pre> <p>ID of the task to delete</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.DeleteTaskV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.PostBatchTaskV2","title":"PostBatchTaskV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for batch task operations via the V2 API.</p> <p>This model is used to create, update, and delete tasks in bulk against the V2 API endpoint <code>POST /batch/task</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreateItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a checklist item via the V2 API.\\n\\nThis model is used to create a checklist item via the V2 API, but its identical to\\nthe `CreateItemV1` model. It directly maps to the 'items' field in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. It is used in the `CreateTaskV2` model.\",\n      \"properties\": {\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item ID\",\n          \"title\": \"Id\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"title\": \"CreateItemV2\",\n      \"type\": \"object\"\n    },\n    \"CreateTaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"trigger\"\n      ],\n      \"title\": \"CreateTaskReminderV2\",\n      \"type\": \"object\"\n    },\n    \"CreateTaskV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a task via the V2 API.\\n\\nThis model is used to create a task via the V2 API. It mostly maps to the 'items'\\nfield in the [create task](https://developer.ticktick.com/docs#/openapi?id=create-task)\\ndocumentation. The main differences are the addition of the following fields:\\n\\n- `modified_time`\\n- `completed_time`\\n- `completed_user_id`\\n- `tags`\\n- `etag`\\n- `kind`\\n- `status`\\n- `is_floating`\\n- `creator`\\n- `assignee`\\n- `progress`\\n\\nThis is used in the `PostBatchTaskV2` model.\",\n      \"properties\": {\n        \"project_id\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"Task project id. (Note: This is missing in the API docs)\",\n          \"title\": \"Project Id\"\n        },\n        \"title\": {\n          \"description\": \"Task title\",\n          \"title\": \"Title\",\n          \"type\": \"string\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n          \"title\": \"Content\"\n        },\n        \"desc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n          \"title\": \"Desc\"\n        },\n        \"due_date\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Due Date\"\n        },\n        \"etag\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[a-z0-9]{8}$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ETag of the task\",\n          \"title\": \"Etag\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task id\",\n          \"title\": \"Id\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"is_floating\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task will remain at the same time regardless of time zone\",\n          \"title\": \"Is Floating\"\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CreateItemV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The list of checklist items to create\",\n          \"title\": \"Items\"\n        },\n        \"kind\": {\n          \"default\": \"TEXT\",\n          \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n          \"enum\": [\n            \"TEXT\",\n            \"NOTE\",\n            \"CHECKLIST\"\n          ],\n          \"title\": \"Kind\",\n          \"type\": \"string\"\n        },\n        \"modified_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Modified Time\"\n        },\n        \"reminders\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/CreateTaskReminderV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Lists of reminders specific to the task\",\n          \"title\": \"Reminders\"\n        },\n        \"repeat_flag\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Recurring rules of task\",\n          \"title\": \"Repeat Flag\"\n        },\n        \"repeat_from\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"When to start repeating the task\",\n          \"title\": \"Repeat From\"\n        },\n        \"priority\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                3,\n                5\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The priority of task, default is '0'\",\n          \"title\": \"Priority\"\n        },\n        \"progress\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n          \"title\": \"Progress\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Status of the task\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"tags\": {\n          \"default\": [],\n          \"description\": \"List of tags to add\",\n          \"items\": {\n            \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n            \"type\": \"string\"\n          },\n          \"title\": \"Tags\",\n          \"type\": \"array\"\n        },\n        \"assignee\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignee\"\n        },\n        \"completed_user_id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Completed User Id\"\n        },\n        \"creator\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Creator\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"project_id\",\n        \"title\"\n      ],\n      \"title\": \"CreateTaskV2\",\n      \"type\": \"object\"\n    },\n    \"DeleteTaskV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for deleting a task via the V2 API.\\n\\nThis model is used to delete a task via the V2 API. It mostly maps to the `DELETE\\n/project/{project_id}/task/{task_id}` endpoint in the API docs. Since it's used\\nin a batch operation, it must be bundled in the `PostBatchTaskV2` model, rather\\nthan being a direct call to the API.\",\n      \"properties\": {\n        \"project_id\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"ID of the project the task belongs to\",\n          \"title\": \"Project Id\"\n        },\n        \"task_id\": {\n          \"description\": \"ID of the task to delete\",\n          \"title\": \"Task Id\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"project_id\",\n        \"task_id\"\n      ],\n      \"title\": \"DeleteTaskV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a checklist item via the V2 API.\\n\\nThis model is used to update a checklist item via the V2 API, but its identical to\\nthe `UpdateItemV1` model. It directly maps to the 'items' field in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. It is used in the `UpdateTaskV2` model.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Checklist item ID\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"UpdateItemV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateTaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"trigger\"\n      ],\n      \"title\": \"UpdateTaskReminderV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateTaskV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a task via the V2 API.\\n\\nThis model is used to update a task via the V2 API. It mostly maps to the 'items'\\nfield in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. The main differences are the addition of the following fields:\\n\\n- `modified_time`\\n- `completed_time`\\n- `completed_user_id`\\n- `tags`\\n- `etag`\\n- `kind`\\n- `status`\\n- `is_floating`\\n- `creator`\\n- `assignee`\\n- `progress`\\n\\nThis is used in the `PostBatchTaskV2` model.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Task id\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"project_id\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"Task project id\",\n          \"title\": \"Project Id\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n          \"title\": \"Content\"\n        },\n        \"desc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n          \"title\": \"Desc\"\n        },\n        \"due_date\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Due Date\"\n        },\n        \"etag\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[a-z0-9]{8}$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ETag of the task\",\n          \"title\": \"Etag\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"is_floating\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task will remain at the same time regardless of time zone\",\n          \"title\": \"Is Floating\"\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/UpdateItemV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The list of checklist items to update\",\n          \"title\": \"Items\"\n        },\n        \"kind\": {\n          \"default\": \"TEXT\",\n          \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n          \"enum\": [\n            \"TEXT\",\n            \"NOTE\",\n            \"CHECKLIST\"\n          ],\n          \"title\": \"Kind\",\n          \"type\": \"string\"\n        },\n        \"modified_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Modified Time\"\n        },\n        \"repeat_flag\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Recurring rules of task\",\n          \"title\": \"Repeat Flag\"\n        },\n        \"repeat_from\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"When to start repeating the task\",\n          \"title\": \"Repeat From\"\n        },\n        \"reminders\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/UpdateTaskReminderV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Lists of reminders specific to the task\",\n          \"title\": \"Reminders\"\n        },\n        \"priority\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                3,\n                5\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The priority of task, default is '0'\",\n          \"title\": \"Priority\"\n        },\n        \"progress\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n          \"title\": \"Progress\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Status of the task\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"tags\": {\n          \"default\": [],\n          \"description\": \"List of tags to update\",\n          \"items\": {\n            \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n            \"type\": \"string\"\n          },\n          \"title\": \"Tags\",\n          \"type\": \"array\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Task title\",\n          \"title\": \"Title\"\n        },\n        \"assignee\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignee\"\n        },\n        \"completed_user_id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Completed User Id\"\n        },\n        \"creator\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Creator\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"project_id\"\n      ],\n      \"title\": \"UpdateTaskV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for batch task operations via the V2 API.\\n\\nThis model is used to create, update, and delete tasks in bulk against the V2 API\\nendpoint `POST /batch/task`.\",\n  \"properties\": {\n    \"add\": {\n      \"default\": [],\n      \"description\": \"List of tasks to add\",\n      \"items\": {\n        \"$ref\": \"#/$defs/CreateTaskV2\"\n      },\n      \"title\": \"Add\",\n      \"type\": \"array\"\n    },\n    \"delete\": {\n      \"default\": [],\n      \"description\": \"List of task IDs to delete\",\n      \"items\": {\n        \"$ref\": \"#/$defs/DeleteTaskV2\"\n      },\n      \"title\": \"Delete\",\n      \"type\": \"array\"\n    },\n    \"update\": {\n      \"default\": [],\n      \"description\": \"List of tasks to update\",\n      \"items\": {\n        \"$ref\": \"#/$defs/UpdateTaskV2\"\n      },\n      \"title\": \"Update\",\n      \"type\": \"array\"\n    },\n    \"add_attachments\": {\n      \"default\": [],\n      \"items\": {},\n      \"title\": \"Add Attachments\",\n      \"type\": \"array\"\n    },\n    \"update_attachments\": {\n      \"default\": [],\n      \"items\": {},\n      \"title\": \"Update Attachments\",\n      \"type\": \"array\"\n    }\n  },\n  \"title\": \"PostBatchTaskV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>add</code>                 (<code>list[CreateTaskV2]</code>)             </li> <li> <code>delete</code>                 (<code>list[DeleteTaskV2]</code>)             </li> <li> <code>update</code>                 (<code>list[UpdateTaskV2]</code>)             </li> <li> <code>add_attachments</code>                 (<code>list[Any]</code>)             </li> <li> <code>update_attachments</code>                 (<code>list[Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.PostBatchTaskV2.add","title":"add  <code>pydantic-field</code>","text":"<pre><code>add: list[CreateTaskV2] = []\n</code></pre> <p>List of tasks to add</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.PostBatchTaskV2.delete","title":"delete  <code>pydantic-field</code>","text":"<pre><code>delete: list[DeleteTaskV2] = []\n</code></pre> <p>List of task IDs to delete</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.PostBatchTaskV2.update","title":"update  <code>pydantic-field</code>","text":"<pre><code>update: list[UpdateTaskV2] = []\n</code></pre> <p>List of tasks to update</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.PostBatchTaskV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2","title":"UpdateItemV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for updating a checklist item via the V2 API.</p> <p>This model is used to update a checklist item via the V2 API, but its identical to the <code>UpdateItemV1</code> model. It directly maps to the 'items' field in the update task documentation. It is used in the <code>UpdateTaskV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a checklist item via the V2 API.\\n\\nThis model is used to update a checklist item via the V2 API, but its identical to\\nthe `UpdateItemV1` model. It directly maps to the 'items' field in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. It is used in the `UpdateTaskV2` model.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Checklist item ID\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Completed Time\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Is All Day\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The completion status of checklist item\",\n      \"title\": \"Status\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Time Zone\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Checklist item title\",\n      \"title\": \"Title\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"title\": \"UpdateItemV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>completed_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>start_date</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: datetime | None = None\n</code></pre> <p>Completed time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>Checklist item ID</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: str | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status | None = None\n</code></pre> <p>The completion status of checklist item</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Checklist item title</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateItemV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskReminderV2","title":"UpdateTaskReminderV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for creating a reminder for a task via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Reminder ID\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"trigger\": {\n      \"description\": \"Reminder trigger\",\n      \"title\": \"Trigger\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"trigger\"\n  ],\n  \"title\": \"UpdateTaskReminderV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>trigger</code>                 (<code>ICalTrigger</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskReminderV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>Reminder ID</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskReminderV2.trigger","title":"trigger  <code>pydantic-field</code>","text":"<pre><code>trigger: ICalTrigger\n</code></pre> <p>Reminder trigger</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskReminderV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2","title":"UpdateTaskV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for updating a task via the V2 API.</p> <p>This model is used to update a task via the V2 API. It mostly maps to the 'items' field in the update task documentation. The main differences are the addition of the following fields:</p> <ul> <li><code>modified_time</code></li> <li><code>completed_time</code></li> <li><code>completed_user_id</code></li> <li><code>tags</code></li> <li><code>etag</code></li> <li><code>kind</code></li> <li><code>status</code></li> <li><code>is_floating</code></li> <li><code>creator</code></li> <li><code>assignee</code></li> <li><code>progress</code></li> </ul> <p>This is used in the <code>PostBatchTaskV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"UpdateItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for updating a checklist item via the V2 API.\\n\\nThis model is used to update a checklist item via the V2 API, but its identical to\\nthe `UpdateItemV1` model. It directly maps to the 'items' field in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. It is used in the `UpdateTaskV2` model.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Checklist item ID\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"completed_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completed Time\"\n        },\n        \"is_all_day\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Is All Day\"\n        },\n        \"start_date\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Start Date\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"time_zone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Time Zone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"sort_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Sort Order\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"UpdateItemV2\",\n      \"type\": \"object\"\n    },\n    \"UpdateTaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for creating a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"trigger\"\n      ],\n      \"title\": \"UpdateTaskReminderV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for updating a task via the V2 API.\\n\\nThis model is used to update a task via the V2 API. It mostly maps to the 'items'\\nfield in the [update task](https://developer.ticktick.com/docs#/openapi?id=update-task)\\ndocumentation. The main differences are the addition of the following fields:\\n\\n- `modified_time`\\n- `completed_time`\\n- `completed_user_id`\\n- `tags`\\n- `etag`\\n- `kind`\\n- `status`\\n- `is_floating`\\n- `creator`\\n- `assignee`\\n- `progress`\\n\\nThis is used in the `PostBatchTaskV2` model.\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Task id\",\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^inbox\\\\d+$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"string\"\n        }\n      ],\n      \"description\": \"Task project id\",\n      \"title\": \"Project Id\"\n    },\n    \"completed_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Completed Time\"\n    },\n    \"content\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n      \"title\": \"Content\"\n    },\n    \"desc\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n      \"title\": \"Desc\"\n    },\n    \"due_date\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Due Date\"\n    },\n    \"etag\": {\n      \"anyOf\": [\n        {\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"ETag of the task\",\n      \"title\": \"Etag\"\n    },\n    \"is_all_day\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n      \"title\": \"Is All Day\"\n    },\n    \"is_floating\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The task will remain at the same time regardless of time zone\",\n      \"title\": \"Is Floating\"\n    },\n    \"items\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UpdateItemV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The list of checklist items to update\",\n      \"title\": \"Items\"\n    },\n    \"kind\": {\n      \"default\": \"TEXT\",\n      \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n      \"enum\": [\n        \"TEXT\",\n        \"NOTE\",\n        \"CHECKLIST\"\n      ],\n      \"title\": \"Kind\",\n      \"type\": \"string\"\n    },\n    \"modified_time\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n      \"title\": \"Modified Time\"\n    },\n    \"repeat_flag\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Recurring rules of task\",\n      \"title\": \"Repeat Flag\"\n    },\n    \"repeat_from\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"When to start repeating the task\",\n      \"title\": \"Repeat From\"\n    },\n    \"reminders\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/UpdateTaskReminderV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Lists of reminders specific to the task\",\n      \"title\": \"Reminders\"\n    },\n    \"priority\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The priority of task, default is '0'\",\n      \"title\": \"Priority\"\n    },\n    \"progress\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n      \"title\": \"Progress\"\n    },\n    \"start_date\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date-time\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n      \"title\": \"Start Date\"\n    },\n    \"status\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Status of the task\",\n      \"title\": \"Status\"\n    },\n    \"time_zone\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Ciudad_Juarez\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Coyhaique\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UCT\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Kyiv\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"Factory\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT+0\",\n            \"GMT-0\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"HST\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kanton\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROC\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"localtime\"\n          ],\n          \"minLength\": 1,\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n      \"title\": \"Time Zone\"\n    },\n    \"tags\": {\n      \"default\": [],\n      \"description\": \"List of tags to update\",\n      \"items\": {\n        \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n        \"type\": \"string\"\n      },\n      \"title\": \"Tags\",\n      \"type\": \"array\"\n    },\n    \"title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"Task title\",\n      \"title\": \"Title\"\n    },\n    \"assignee\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Assignee\"\n    },\n    \"completed_user_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Completed User Id\"\n    },\n    \"creator\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Creator\"\n    },\n    \"sort_order\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Sort Order\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"project_id\"\n  ],\n  \"title\": \"UpdateTaskV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>project_id</code>                 (<code>Union[InboxId, ObjectId]</code>)             </li> <li> <code>completed_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>content</code>                 (<code>str | None</code>)             </li> <li> <code>desc</code>                 (<code>str | None</code>)             </li> <li> <code>due_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag | None</code>)             </li> <li> <code>is_all_day</code>                 (<code>bool | None</code>)             </li> <li> <code>is_floating</code>                 (<code>bool | None</code>)             </li> <li> <code>items</code>                 (<code>list[UpdateItemV2] | None</code>)             </li> <li> <code>kind</code>                 (<code>Kind</code>)             </li> <li> <code>modified_time</code>                 (<code>datetime | None</code>)             </li> <li> <code>repeat_flag</code>                 (<code>TTRRule | None</code>)             </li> <li> <code>repeat_from</code>                 (<code>RepeatFrom | None</code>)             </li> <li> <code>reminders</code>                 (<code>list[UpdateTaskReminderV2] | None</code>)             </li> <li> <code>priority</code>                 (<code>Priority | None</code>)             </li> <li> <code>progress</code>                 (<code>Progress | None</code>)             </li> <li> <code>start_date</code>                 (<code>datetime | None</code>)             </li> <li> <code>status</code>                 (<code>Status | None</code>)             </li> <li> <code>time_zone</code>                 (<code>TimeZoneName | None</code>)             </li> <li> <code>tags</code>                 (<code>list[TagName]</code>)             </li> <li> <code>title</code>                 (<code>str | None</code>)             </li> <li> <code>assignee</code>                 (<code>int | None</code>)             </li> <li> <code>completed_user_id</code>                 (<code>int | None</code>)             </li> <li> <code>creator</code>                 (<code>int | None</code>)             </li> <li> <code>sort_order</code>                 (<code>int | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> <li> <code>_mutually_exclusive_fields</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.completed_time","title":"completed_time  <code>pydantic-field</code>","text":"<pre><code>completed_time: datetime | None = None\n</code></pre> <p>Completed time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str | None = None\n</code></pre> <p>Content of the task, used for <code>TEXT</code> or <code>NOTE</code> tasks, otherwise <code>desc</code> is used</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.desc","title":"desc  <code>pydantic-field</code>","text":"<pre><code>desc: str | None = None\n</code></pre> <p>Description of the task, used for <code>CHECKLIST</code> tasks, otherwise <code>content</code> is used</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.due_date","title":"due_date  <code>pydantic-field</code>","text":"<pre><code>due_date: datetime | None = None\n</code></pre> <p>Due date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.etag","title":"etag  <code>pydantic-field</code>","text":"<pre><code>etag: ETag | None = None\n</code></pre> <p>ETag of the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.id","title":"id  <code>pydantic-field</code>","text":"<pre><code>id: ObjectId\n</code></pre> <p>Task id</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.is_all_day","title":"is_all_day  <code>pydantic-field</code>","text":"<pre><code>is_all_day: bool | None = None\n</code></pre> <p>The task is due any time on the due date, rather than at a specific time</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.is_floating","title":"is_floating  <code>pydantic-field</code>","text":"<pre><code>is_floating: bool | None = None\n</code></pre> <p>The task will remain at the same time regardless of time zone</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.items","title":"items  <code>pydantic-field</code>","text":"<pre><code>items: list[UpdateItemV2] | None = None\n</code></pre> <p>The list of checklist items to update</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.kind","title":"kind  <code>pydantic-field</code>","text":"<pre><code>kind: Kind = 'TEXT'\n</code></pre> <p>\"TEXT\", \"NOTE\", or \"CHECKLIST\"</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.modified_time","title":"modified_time  <code>pydantic-field</code>","text":"<pre><code>modified_time: datetime | None = None\n</code></pre> <p>Last modified time in <code>YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.priority","title":"priority  <code>pydantic-field</code>","text":"<pre><code>priority: Priority | None = None\n</code></pre> <p>The priority of task, default is '0'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.progress","title":"progress  <code>pydantic-field</code>","text":"<pre><code>progress: Progress | None = None\n</code></pre> <p>Progress of a <code>CHECKLIST</code> task, should be a number between 0 and 100</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: Union[InboxId, ObjectId]\n</code></pre> <p>Task project id</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.reminders","title":"reminders  <code>pydantic-field</code>","text":"<pre><code>reminders: list[UpdateTaskReminderV2] | None = None\n</code></pre> <p>Lists of reminders specific to the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.repeat_flag","title":"repeat_flag  <code>pydantic-field</code>","text":"<pre><code>repeat_flag: TTRRule | None = None\n</code></pre> <p>Recurring rules of task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.repeat_from","title":"repeat_from  <code>pydantic-field</code>","text":"<pre><code>repeat_from: RepeatFrom | None = None\n</code></pre> <p>When to start repeating the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.start_date","title":"start_date  <code>pydantic-field</code>","text":"<pre><code>start_date: datetime | None = None\n</code></pre> <p>Start date and time in <code>yyyy-MM-dd'T'HH:mm:ssZ</code> format</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: Status | None = None\n</code></pre> <p>Status of the task</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.tags","title":"tags  <code>pydantic-field</code>","text":"<pre><code>tags: list[TagName] = []\n</code></pre> <p>List of tags to update</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.time_zone","title":"time_zone  <code>pydantic-field</code>","text":"<pre><code>time_zone: TimeZoneName | None = None\n</code></pre> <p>IANA time zone. Example: 'America/Los_Angeles'</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str | None = None\n</code></pre> <p>Task title</p>"},{"location":"reference/models/v2/parameters/task/#pyticktick.models.v2.parameters.task.UpdateTaskV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task_parent/","title":"Task Parent","text":""},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent","title":"pyticktick.models.v2.parameters.task_parent","text":"<p>Parameters for setting and unsetting parent tasks via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>PostBatchTaskParentV2</code> <p>Model for setting and unsetting parent tasks via the V2 API.</p> <code>SetTaskParentV2</code> <p>Model for setting a parent task via the V2 API.</p> <code>UnSetTaskParentV2</code> <p>Model for unsetting a parent task via the V2 API.</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.PostBatchTaskParentV2","title":"PostBatchTaskParentV2","text":"<p>               Bases: <code>RootModel[list[Union[SetTaskParentV2, UnSetTaskParentV2]]]</code></p> <p>Model for setting and unsetting parent tasks via the V2 API.</p> <p>This model is used to set and unset parent tasks via the V2 API. This is not currently documented or supported in the official API docs. This is used as the payload in the <code>POST /batch/taskParent</code> endpoint. It can contain a list of both <code>SetTaskParentV2</code> and <code>UnSetTaskParentV2</code> models. The API will process the list and set or unset the parent tasks as needed.</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.SetTaskParentV2","title":"SetTaskParentV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for setting a parent task via the V2 API.</p> <p>This model is used to set a parent task via the V2 API. This is not currently documented or supported in the official API docs. This is used as the payload in the <code>POST /batch/taskParent</code> endpoint.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for setting a parent task via the V2 API.\\n\\nThis model is used to set a parent task via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used as the payload in the\\n`POST /batch/taskParent` endpoint.\",\n  \"properties\": {\n    \"parent_id\": {\n      \"description\": \"ID of the task to set as the parent\",\n      \"title\": \"Parent Id\",\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"description\": \"ID of the project for both tasks\",\n      \"title\": \"Project Id\",\n      \"type\": \"string\"\n    },\n    \"task_id\": {\n      \"description\": \"ID of the task to set the parent for\",\n      \"title\": \"Task Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"parent_id\",\n    \"project_id\",\n    \"task_id\"\n  ],\n  \"title\": \"SetTaskParentV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>parent_id</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>task_id</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.SetTaskParentV2.parent_id","title":"parent_id  <code>pydantic-field</code>","text":"<pre><code>parent_id: str\n</code></pre> <p>ID of the task to set as the parent</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.SetTaskParentV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>ID of the project for both tasks</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.SetTaskParentV2.task_id","title":"task_id  <code>pydantic-field</code>","text":"<pre><code>task_id: str\n</code></pre> <p>ID of the task to set the parent for</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.SetTaskParentV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.UnSetTaskParentV2","title":"UnSetTaskParentV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for unsetting a parent task via the V2 API.</p> <p>This model is used to unset a parent task via the V2 API. This is not currently documented or supported in the official API docs. This is used as the payload in the <code>POST /batch/taskParent</code> endpoint.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for unsetting a parent task via the V2 API.\\n\\nThis model is used to unset a parent task via the V2 API. This is not currently\\ndocumented or supported in the official API docs. This is used as the payload in the\\n`POST /batch/taskParent` endpoint.\",\n  \"properties\": {\n    \"old_parent_id\": {\n      \"description\": \"ID of the task to unset as the parent\",\n      \"title\": \"Old Parent Id\",\n      \"type\": \"string\"\n    },\n    \"project_id\": {\n      \"description\": \"ID of the project for both tasks\",\n      \"title\": \"Project Id\",\n      \"type\": \"string\"\n    },\n    \"task_id\": {\n      \"description\": \"ID of the task to unset the parent for\",\n      \"title\": \"Task Id\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"old_parent_id\",\n    \"project_id\",\n    \"task_id\"\n  ],\n  \"title\": \"UnSetTaskParentV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>old_parent_id</code>                 (<code>str</code>)             </li> <li> <code>project_id</code>                 (<code>str</code>)             </li> <li> <code>task_id</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.UnSetTaskParentV2.old_parent_id","title":"old_parent_id  <code>pydantic-field</code>","text":"<pre><code>old_parent_id: str\n</code></pre> <p>ID of the task to unset as the parent</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.UnSetTaskParentV2.project_id","title":"project_id  <code>pydantic-field</code>","text":"<pre><code>project_id: str\n</code></pre> <p>ID of the project for both tasks</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.UnSetTaskParentV2.task_id","title":"task_id  <code>pydantic-field</code>","text":"<pre><code>task_id: str\n</code></pre> <p>ID of the task to unset the parent for</p>"},{"location":"reference/models/v2/parameters/task_parent/#pyticktick.models.v2.parameters.task_parent.UnSetTaskParentV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/batch/","title":"Batch","text":""},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch","title":"pyticktick.models.v2.responses.batch","text":"<p>Responses for batch requests in the V2 API.</p> <p>This module holds both the response for general <code>POST</code> batch requests and the response for <code>GET</code> batch requests.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>BatchRespV2</code> <p>Model for the response of a generic batch request via the V2 API.</p> <code>GetBatchV2</code> <p>Model for the response of a batch object status request via the V2 API.</p> <code>SyncOrderBeanV3V2</code> <p>Unknown model for the V2 API.</p> <code>SyncTaskBeanV2</code> <p>Model for all the tasks in a batch response via the V2 API.</p> <code>SyncTaskOrderBeanV2</code> <p>Unknown model for the V2 API.</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2","title":"BatchRespV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a generic batch request via the V2 API.</p> <p>Warning</p> <p>This model is a best guess at the structure of the response. It is not clear whether the <code>id2etag</code> and <code>id2error</code> fields are from MongoDB, but they seem to fit the pattern.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a generic batch request via the V2 API.\\n\\n!!! warning\\n    This model is a best guess at the structure of the response. It is not clear\\n    whether the `id2etag` and `id2error` fields are from MongoDB, but they seem to\\n    fit the pattern.\",\n  \"properties\": {\n    \"id2error\": {\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Mapping of objects that failed to be created / updated\",\n      \"title\": \"Id2Error\",\n      \"type\": \"object\"\n    },\n    \"id2etag\": {\n      \"additionalProperties\": {\n        \"pattern\": \"^[a-z0-9]{8}$\",\n        \"type\": \"string\"\n      },\n      \"description\": \"ID to ETag mapping of objects that were successfully created / updated\",\n      \"title\": \"Id2Etag\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"id2error\",\n    \"id2etag\"\n  ],\n  \"title\": \"BatchRespV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id2error</code>                 (<code>dict[ObjectId, str]</code>)             </li> <li> <code>id2etag</code>                 (<code>dict[ObjectId, ETag]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> <li> <code>_exceeded_quota</code> </li> </ul>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2.etags","title":"etags  <code>property</code>","text":"<pre><code>etags: list[str]\n</code></pre> <p>List of all the ETags in the response.</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2.id2error","title":"id2error  <code>pydantic-field</code>","text":"<pre><code>id2error: dict[ObjectId, str]\n</code></pre> <p>Mapping of objects that failed to be created / updated</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2.id2etag","title":"id2etag  <code>pydantic-field</code>","text":"<pre><code>id2etag: dict[ObjectId, ETag]\n</code></pre> <p>ID to ETag mapping of objects that were successfully created / updated</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2.ids","title":"ids  <code>property</code>","text":"<pre><code>ids: list[str]\n</code></pre> <p>List of all the IDs in the response.</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.BatchRespV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2","title":"GetBatchV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a batch object status request via the V2 API.</p> <p>This model appears to be used like an entity bean for TickTick apps to take advantage of. It keeps track of the state of the user's projects, tasks, etc. We do not have a complete understanding of the structure of this model, nor do we have an understanding of how to use this model to publish changes to the user's account. This model is currently intended for reading the user's state.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a checklist item via the V2 API.\",\n      \"properties\": {\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Completedtime\"\n        },\n        \"id\": {\n          \"description\": \"ID of the checklist item\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Isallday\"\n        },\n        \"sortOrder\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The order of checklist item\",\n          \"title\": \"Sortorder\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"timeZone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"snoozeReminderTime\": {\n          \"default\": null,\n          \"title\": \"Snoozeremindertime\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ItemV2\",\n      \"type\": \"object\"\n    },\n    \"ProjectGroupV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a project group in the V2 API.\\n\\nThis model is used to represent a group of projects in TickTick. It contains all the\\nrelevant details, such as name, color, sort order, etc. that you see in the web app.\",\n      \"properties\": {\n        \"etag\": {\n          \"description\": \"ETag of the project group object\",\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"ID of the project group\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"Name of the project group\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"sortOption\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SortOptionV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"How to sort the tasks in the project\"\n        },\n        \"viewMode\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"list\",\n                \"kanban\",\n                \"timeline\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n          \"title\": \"Viewmode\"\n        },\n        \"deleted\": {\n          \"title\": \"Deleted\",\n          \"type\": \"integer\"\n        },\n        \"showAll\": {\n          \"title\": \"Showall\",\n          \"type\": \"boolean\"\n        },\n        \"sortOrder\": {\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"sortType\": {\n          \"title\": \"Sorttype\",\n          \"type\": \"string\"\n        },\n        \"teamId\": {\n          \"title\": \"Teamid\"\n        },\n        \"timeline\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectTimelineV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"userId\": {\n          \"title\": \"Userid\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"etag\",\n        \"id\",\n        \"name\",\n        \"sortOption\",\n        \"deleted\",\n        \"showAll\",\n        \"sortOrder\",\n        \"sortType\",\n        \"teamId\",\n        \"timeline\",\n        \"userId\"\n      ],\n      \"title\": \"ProjectGroupV2\",\n      \"type\": \"object\"\n    },\n    \"ProjectTimelineV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"range\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Range\"\n        },\n        \"sortType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Sorttype\"\n        },\n        \"sortOption\": {\n          \"$ref\": \"#/$defs/SortOptionV2\"\n        }\n      },\n      \"required\": [\n        \"range\",\n        \"sortType\",\n        \"sortOption\"\n      ],\n      \"title\": \"ProjectTimelineV2\",\n      \"type\": \"object\"\n    },\n    \"ProjectV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for all the details of a project taken from the V2 API.\\n\\nThis model is used to represent a single project in TickTick. It contains all the\\nrelevant details, such as name, color, sort order, etc. that you see in the web app.\",\n      \"properties\": {\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Color of the project profile, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"etag\": {\n          \"description\": \"ETag of the project object\",\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        },\n        \"groupId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"ID of the project group the project is in\",\n          \"title\": \"Groupid\"\n        },\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"ID of the project\",\n          \"title\": \"Id\"\n        },\n        \"inAll\": {\n          \"description\": \"Whether or not to show in Smart Lists. If False, tasks within this list won't be shown in 'All', 'Today', 'Tomorrow', 'Next 7 Days', or other smart lists, but you will still receive reminders.\",\n          \"title\": \"Inall\",\n          \"type\": \"boolean\"\n        },\n        \"kind\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"TASK\",\n                \"NOTE\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"\\\"TASK\\\" or \\\"NOTE\\\"\",\n          \"title\": \"Kind\"\n        },\n        \"modifiedTime\": {\n          \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"format\": \"date-time\",\n          \"title\": \"Modifiedtime\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"Name of the project\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"sortOption\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SortOptionV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"How to sort the tasks in the project\"\n        },\n        \"viewMode\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"list\",\n                \"kanban\",\n                \"timeline\"\n              ],\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"view mode, \\\"list\\\", \\\"kanban\\\", \\\"timeline\\\"\",\n          \"title\": \"Viewmode\"\n        },\n        \"barcodeNeedAudit\": {\n          \"title\": \"Barcodeneedaudit\",\n          \"type\": \"boolean\"\n        },\n        \"isOwner\": {\n          \"title\": \"Isowner\",\n          \"type\": \"boolean\"\n        },\n        \"sortOrder\": {\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"sortType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Sorttype\"\n        },\n        \"userCount\": {\n          \"title\": \"Usercount\",\n          \"type\": \"integer\"\n        },\n        \"closed\": {\n          \"title\": \"Closed\"\n        },\n        \"muted\": {\n          \"title\": \"Muted\",\n          \"type\": \"boolean\"\n        },\n        \"transferred\": {\n          \"title\": \"Transferred\"\n        },\n        \"notificationOptions\": {\n          \"title\": \"Notificationoptions\"\n        },\n        \"teamId\": {\n          \"title\": \"Teamid\"\n        },\n        \"permission\": {\n          \"title\": \"Permission\"\n        },\n        \"timeline\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectTimelineV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"needAudit\": {\n          \"title\": \"Needaudit\",\n          \"type\": \"boolean\"\n        },\n        \"openToTeam\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Opentoteam\"\n        },\n        \"teamMemberPermission\": {\n          \"title\": \"Teammemberpermission\"\n        },\n        \"source\": {\n          \"title\": \"Source\",\n          \"type\": \"integer\"\n        },\n        \"showType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Showtype\"\n        },\n        \"reminderType\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Remindertype\"\n        }\n      },\n      \"required\": [\n        \"etag\",\n        \"groupId\",\n        \"id\",\n        \"inAll\",\n        \"modifiedTime\",\n        \"name\",\n        \"sortOption\",\n        \"barcodeNeedAudit\",\n        \"isOwner\",\n        \"sortOrder\",\n        \"sortType\",\n        \"userCount\",\n        \"closed\",\n        \"muted\",\n        \"transferred\",\n        \"notificationOptions\",\n        \"teamId\",\n        \"permission\",\n        \"timeline\",\n        \"needAudit\",\n        \"openToTeam\",\n        \"teamMemberPermission\",\n        \"source\",\n        \"showType\",\n        \"reminderType\"\n      ],\n      \"title\": \"ProjectV2\",\n      \"type\": \"object\"\n    },\n    \"SortOptionV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the sort options of tasks within a project in the V2 API.\",\n      \"properties\": {\n        \"groupBy\": {\n          \"description\": \"How tasks are grouped within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Groupby\",\n          \"type\": \"string\"\n        },\n        \"orderBy\": {\n          \"description\": \"How tasks are ordered within a project\",\n          \"enum\": [\n            \"sortOrder\",\n            \"dueDate\",\n            \"tag\",\n            \"priority\",\n            \"project\",\n            \"none\"\n          ],\n          \"title\": \"Orderby\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"groupBy\",\n        \"orderBy\"\n      ],\n      \"title\": \"SortOptionV2\",\n      \"type\": \"object\"\n    },\n    \"SyncOrderBeanV3V2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"orderByType\": {\n          \"additionalProperties\": true,\n          \"title\": \"Orderbytype\",\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"orderByType\"\n      ],\n      \"title\": \"SyncOrderBeanV3V2\",\n      \"type\": \"object\"\n    },\n    \"SyncTaskBeanV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for all the tasks in a batch response via the V2 API.\\n\\nThis model is used to represent all the tasks in a batch response from the V2 API.\\nIt lends itself to being used as parameters for a update request, but we do not have\\na complete understanding of how. For now, the `update` field is the most important,\\nas it contains all the active tasks for the user.\",\n      \"properties\": {\n        \"update\": {\n          \"description\": \"List of all active tasks for the user\",\n          \"items\": {\n            \"$ref\": \"#/$defs/TaskV2\"\n          },\n          \"title\": \"Update\",\n          \"type\": \"array\"\n        },\n        \"add\": {\n          \"items\": {},\n          \"title\": \"Add\",\n          \"type\": \"array\"\n        },\n        \"delete\": {\n          \"items\": {},\n          \"title\": \"Delete\",\n          \"type\": \"array\"\n        },\n        \"empty\": {\n          \"title\": \"Empty\",\n          \"type\": \"boolean\"\n        },\n        \"tagUpdate\": {\n          \"items\": {},\n          \"title\": \"Tagupdate\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"update\",\n        \"add\",\n        \"delete\",\n        \"empty\",\n        \"tagUpdate\"\n      ],\n      \"title\": \"SyncTaskBeanV2\",\n      \"type\": \"object\"\n    },\n    \"SyncTaskOrderBeanV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Unknown model for the V2 API.\",\n      \"properties\": {\n        \"taskOrderByDate\": {\n          \"additionalProperties\": true,\n          \"title\": \"Taskorderbydate\",\n          \"type\": \"object\"\n        },\n        \"taskOrderByPriority\": {\n          \"additionalProperties\": true,\n          \"title\": \"Taskorderbypriority\",\n          \"type\": \"object\"\n        },\n        \"taskOrderByProject\": {\n          \"additionalProperties\": true,\n          \"title\": \"Taskorderbyproject\",\n          \"type\": \"object\"\n        }\n      },\n      \"required\": [\n        \"taskOrderByDate\",\n        \"taskOrderByPriority\",\n        \"taskOrderByProject\"\n      ],\n      \"title\": \"SyncTaskOrderBeanV2\",\n      \"type\": \"object\"\n    },\n    \"TagV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a tag in the V2 API.\\n\\nThis model is used to represent a tag in TickTick. Tags are used to categorize tasks\\nand make them easier to find. They can be assigned a color and a sort order.\\n\\nThey do not have a unique ID, but they can be identified by their raw name.\",\n      \"properties\": {\n        \"color\": {\n          \"anyOf\": [\n            {\n              \"format\": \"color\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Color of the tag, eg. '#F18181'\",\n          \"title\": \"Color\"\n        },\n        \"etag\": {\n          \"description\": \"ETag of the tag object\",\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        },\n        \"label\": {\n          \"description\": \"Name of the tag, as it appears in the UI\",\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\s]+$\",\n          \"title\": \"Label\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"description\": \"Name of the tag, similar to the label but lowercase, and not visible in the UI\",\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"parent\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Name of the parent tag, if nested.\",\n          \"title\": \"Parent\"\n        },\n        \"rawName\": {\n          \"description\": \"Original name of the tag, used to identify it\",\n          \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n          \"title\": \"Rawname\",\n          \"type\": \"string\"\n        },\n        \"sortOption\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SortOptionV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"How to sort the tasks within the tag\"\n        },\n        \"sortType\": {\n          \"default\": \"project\",\n          \"description\": \"Sort type when displaying by selected tag\",\n          \"enum\": [\n            \"project\",\n            \"title\",\n            \"tag\"\n          ],\n          \"title\": \"Sorttype\",\n          \"type\": \"string\"\n        },\n        \"sortOrder\": {\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        },\n        \"timeline\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProjectTimelineV2\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"type\": {\n          \"title\": \"Type\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"etag\",\n        \"label\",\n        \"name\",\n        \"rawName\",\n        \"sortOrder\",\n        \"type\"\n      ],\n      \"title\": \"TagV2\",\n      \"type\": \"object\"\n    },\n    \"TaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"trigger\"\n      ],\n      \"title\": \"TaskReminderV2\",\n      \"type\": \"object\"\n    },\n    \"TaskV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a task in a batch response via the V2 API.\",\n      \"properties\": {\n        \"childIds\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"List of sub-task IDs\",\n          \"title\": \"Childids\"\n        },\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completedtime\"\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n          \"title\": \"Content\"\n        },\n        \"createdTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Created time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Createdtime\"\n        },\n        \"desc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n          \"title\": \"Desc\"\n        },\n        \"dueDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Duedate\"\n        },\n        \"etag\": {\n          \"description\": \"ETag of the task object\",\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"ID of the task\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Isallday\"\n        },\n        \"isFloating\": {\n          \"description\": \"The task will remain at the same time regardless of time zone\",\n          \"title\": \"Isfloating\",\n          \"type\": \"boolean\"\n        },\n        \"items\": {\n          \"description\": \"List of checklist items\",\n          \"items\": {\n            \"$ref\": \"#/$defs/ItemV2\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"kind\": {\n          \"default\": \"TEXT\",\n          \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n          \"enum\": [\n            \"TEXT\",\n            \"NOTE\",\n            \"CHECKLIST\"\n          ],\n          \"title\": \"Kind\",\n          \"type\": \"string\"\n        },\n        \"modifiedTime\": {\n          \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"format\": \"date-time\",\n          \"title\": \"Modifiedtime\",\n          \"type\": \"string\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the parent task, if this is a subtask\",\n          \"title\": \"Parentid\"\n        },\n        \"priority\": {\n          \"description\": \"Priority of the task\",\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"title\": \"Priority\",\n          \"type\": \"integer\"\n        },\n        \"progress\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n          \"title\": \"Progress\"\n        },\n        \"projectId\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"ID of the project the task is in\",\n          \"title\": \"Projectid\"\n        },\n        \"reminder\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Unclear what this is, but it can sometimes be one of the reminder triggers in `reminders`\",\n          \"title\": \"Reminder\"\n        },\n        \"reminders\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskReminderV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"List of reminders for the task\",\n          \"title\": \"Reminders\"\n        },\n        \"repeatFirstDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"First date of the repeating task in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Repeatfirstdate\"\n        },\n        \"repeatFlag\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Recurring rules of task\",\n          \"title\": \"Repeatflag\"\n        },\n        \"repeatFrom\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"When to start repeating the task\",\n          \"title\": \"Repeatfrom\"\n        },\n        \"repeatTaskId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the repeating task if a duplicate is somehow (re)opened\",\n          \"title\": \"Repeattaskid\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"description\": \"Status of the task\",\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"title\": \"Status\",\n          \"type\": \"integer\"\n        },\n        \"tags\": {\n          \"default\": [],\n          \"description\": \"List of tag names for the task\",\n          \"items\": {\n            \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n            \"type\": \"string\"\n          },\n          \"title\": \"Tags\",\n          \"type\": \"array\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"Title of the task\",\n          \"title\": \"Title\"\n        },\n        \"timeZone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\"\n        },\n        \"assignee\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignee\"\n        },\n        \"attachments\": {\n          \"default\": [],\n          \"items\": {},\n          \"title\": \"Attachments\",\n          \"type\": \"array\"\n        },\n        \"annoyingAlert\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Annoyingalert\"\n        },\n        \"columnId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Columnid\"\n        },\n        \"commentCount\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Commentcount\"\n        },\n        \"completedUserId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Completeduserid\"\n        },\n        \"creator\": {\n          \"title\": \"Creator\",\n          \"type\": \"integer\"\n        },\n        \"deleted\": {\n          \"title\": \"Deleted\",\n          \"type\": \"integer\"\n        },\n        \"exDate\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exdate\"\n        },\n        \"focusSummaries\": {\n          \"default\": [],\n          \"items\": {},\n          \"title\": \"Focussummaries\",\n          \"type\": \"array\"\n        },\n        \"imgMode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Imgmode\"\n        },\n        \"isDirty\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Isdirty\"\n        },\n        \"local\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Local\"\n        },\n        \"remindTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Remindtime\"\n        },\n        \"sortOrder\": {\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"etag\",\n        \"id\",\n        \"isFloating\",\n        \"items\",\n        \"modifiedTime\",\n        \"priority\",\n        \"projectId\",\n        \"status\",\n        \"title\",\n        \"creator\",\n        \"deleted\",\n        \"sortOrder\"\n      ],\n      \"title\": \"TaskV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a batch object status request via the V2 API.\\n\\nThis model appears to be used like an [entity bean](https://en.wikipedia.org/wiki/Entity_Bean)\\nfor TickTick apps to take advantage of. It keeps track of the state of the user's\\nprojects, tasks, etc. We do not have a complete understanding of the structure of\\nthis model, nor do we have an understanding of how to use this model to\\npublish changes to the user's account. This model is currently intended for\\nreading the user's state.\",\n  \"properties\": {\n    \"inboxId\": {\n      \"description\": \"ID of the inbox project, a special kind of project\",\n      \"title\": \"Inboxid\",\n      \"type\": \"string\"\n    },\n    \"projectGroups\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"$ref\": \"#/$defs/ProjectGroupV2\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"List of all active project groups\",\n      \"title\": \"Projectgroups\"\n    },\n    \"projectProfiles\": {\n      \"description\": \"List of all active projects, excluding the inbox\",\n      \"items\": {\n        \"$ref\": \"#/$defs/ProjectV2\"\n      },\n      \"title\": \"Projectprofiles\",\n      \"type\": \"array\"\n    },\n    \"syncTaskBean\": {\n      \"$ref\": \"#/$defs/SyncTaskBeanV2\",\n      \"description\": \"List of all active tasks\"\n    },\n    \"tags\": {\n      \"description\": \"List of all task tags\",\n      \"items\": {\n        \"$ref\": \"#/$defs/TagV2\"\n      },\n      \"title\": \"Tags\",\n      \"type\": \"array\"\n    },\n    \"checkPoint\": {\n      \"title\": \"Checkpoint\",\n      \"type\": \"integer\"\n    },\n    \"checks\": {\n      \"title\": \"Checks\",\n      \"type\": \"null\"\n    },\n    \"filters\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"additionalProperties\": true,\n            \"type\": \"object\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Filters\"\n    },\n    \"syncOrderBean\": {\n      \"additionalProperties\": true,\n      \"title\": \"Syncorderbean\",\n      \"type\": \"object\"\n    },\n    \"syncOrderBeanV3\": {\n      \"$ref\": \"#/$defs/SyncOrderBeanV3V2\"\n    },\n    \"syncTaskOrderBean\": {\n      \"$ref\": \"#/$defs/SyncTaskOrderBeanV2\"\n    },\n    \"remindChanges\": {\n      \"items\": {},\n      \"title\": \"Remindchanges\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"inboxId\",\n    \"projectGroups\",\n    \"projectProfiles\",\n    \"syncTaskBean\",\n    \"tags\",\n    \"checkPoint\",\n    \"checks\",\n    \"filters\",\n    \"syncOrderBean\",\n    \"syncOrderBeanV3\",\n    \"syncTaskOrderBean\",\n    \"remindChanges\"\n  ],\n  \"title\": \"GetBatchV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inbox_id</code>                 (<code>str</code>)             </li> <li> <code>project_groups</code>                 (<code>list[ProjectGroupV2] | None</code>)             </li> <li> <code>project_profiles</code>                 (<code>list[ProjectV2]</code>)             </li> <li> <code>sync_task_bean</code>                 (<code>SyncTaskBeanV2</code>)             </li> <li> <code>tags</code>                 (<code>list[TagV2]</code>)             </li> <li> <code>check_point</code>                 (<code>int</code>)             </li> <li> <code>checks</code>                 (<code>None</code>)             </li> <li> <code>filters</code>                 (<code>list[dict[str, Any]] | None</code>)             </li> <li> <code>sync_order_bean</code>                 (<code>dict[str, Any]</code>)             </li> <li> <code>sync_order_bean_v3</code>                 (<code>SyncOrderBeanV3V2</code>)             </li> <li> <code>sync_task_order_bean</code>                 (<code>SyncTaskOrderBeanV2</code>)             </li> <li> <code>remind_changes</code>                 (<code>list[Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.inbox_id","title":"inbox_id  <code>pydantic-field</code>","text":"<pre><code>inbox_id: str\n</code></pre> <p>ID of the inbox project, a special kind of project</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.project_groups","title":"project_groups  <code>pydantic-field</code>","text":"<pre><code>project_groups: list[ProjectGroupV2] | None\n</code></pre> <p>List of all active project groups</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.project_profiles","title":"project_profiles  <code>pydantic-field</code>","text":"<pre><code>project_profiles: list[ProjectV2]\n</code></pre> <p>List of all active projects, excluding the inbox</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.sync_task_bean","title":"sync_task_bean  <code>pydantic-field</code>","text":"<pre><code>sync_task_bean: SyncTaskBeanV2\n</code></pre> <p>List of all active tasks</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.tags","title":"tags  <code>pydantic-field</code>","text":"<pre><code>tags: list[TagV2]\n</code></pre> <p>List of all task tags</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.GetBatchV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncOrderBeanV3V2","title":"SyncOrderBeanV3V2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Unknown model for the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Unknown model for the V2 API.\",\n  \"properties\": {\n    \"orderByType\": {\n      \"additionalProperties\": true,\n      \"title\": \"Orderbytype\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"orderByType\"\n  ],\n  \"title\": \"SyncOrderBeanV3V2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>order_by_type</code>                 (<code>dict[str, Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncOrderBeanV3V2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncTaskBeanV2","title":"SyncTaskBeanV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for all the tasks in a batch response via the V2 API.</p> <p>This model is used to represent all the tasks in a batch response from the V2 API. It lends itself to being used as parameters for a update request, but we do not have a complete understanding of how. For now, the <code>update</code> field is the most important, as it contains all the active tasks for the user.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a checklist item via the V2 API.\",\n      \"properties\": {\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Completedtime\"\n        },\n        \"id\": {\n          \"description\": \"ID of the checklist item\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Isallday\"\n        },\n        \"sortOrder\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The order of checklist item\",\n          \"title\": \"Sortorder\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                -1,\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The completion status of checklist item\",\n          \"title\": \"Status\"\n        },\n        \"timeZone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Checklist item title\",\n          \"title\": \"Title\"\n        },\n        \"snoozeReminderTime\": {\n          \"default\": null,\n          \"title\": \"Snoozeremindertime\"\n        }\n      },\n      \"required\": [\n        \"id\"\n      ],\n      \"title\": \"ItemV2\",\n      \"type\": \"object\"\n    },\n    \"TaskReminderV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a reminder for a task via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Reminder ID\",\n          \"title\": \"Id\"\n        },\n        \"trigger\": {\n          \"description\": \"Reminder trigger\",\n          \"title\": \"Trigger\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"trigger\"\n      ],\n      \"title\": \"TaskReminderV2\",\n      \"type\": \"object\"\n    },\n    \"TaskV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for a task in a batch response via the V2 API.\",\n      \"properties\": {\n        \"childIds\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"List of sub-task IDs\",\n          \"title\": \"Childids\"\n        },\n        \"completedTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Completed time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Completedtime\"\n        },\n        \"content\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Content of the task, used for `TEXT` or `NOTE` tasks, otherwise `desc` is used\",\n          \"title\": \"Content\"\n        },\n        \"createdTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Created time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"title\": \"Createdtime\"\n        },\n        \"desc\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Description of the task, used for `CHECKLIST` tasks, otherwise `content` is used\",\n          \"title\": \"Desc\"\n        },\n        \"dueDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Due date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Duedate\"\n        },\n        \"etag\": {\n          \"description\": \"ETag of the task object\",\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"description\": \"ID of the task\",\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"isAllDay\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"The task is due any time on the due date, rather than at a specific time\",\n          \"title\": \"Isallday\"\n        },\n        \"isFloating\": {\n          \"description\": \"The task will remain at the same time regardless of time zone\",\n          \"title\": \"Isfloating\",\n          \"type\": \"boolean\"\n        },\n        \"items\": {\n          \"description\": \"List of checklist items\",\n          \"items\": {\n            \"$ref\": \"#/$defs/ItemV2\"\n          },\n          \"title\": \"Items\",\n          \"type\": \"array\"\n        },\n        \"kind\": {\n          \"default\": \"TEXT\",\n          \"description\": \"\\\"TEXT\\\", \\\"NOTE\\\", or \\\"CHECKLIST\\\"\",\n          \"enum\": [\n            \"TEXT\",\n            \"NOTE\",\n            \"CHECKLIST\"\n          ],\n          \"title\": \"Kind\",\n          \"type\": \"string\"\n        },\n        \"modifiedTime\": {\n          \"description\": \"Last modified time in `YYYY-MM-DD'T'HH:MM:SS.sss'+'hhmm` format\",\n          \"format\": \"date-time\",\n          \"title\": \"Modifiedtime\",\n          \"type\": \"string\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the parent task, if this is a subtask\",\n          \"title\": \"Parentid\"\n        },\n        \"priority\": {\n          \"description\": \"Priority of the task\",\n          \"enum\": [\n            0,\n            1,\n            3,\n            5\n          ],\n          \"title\": \"Priority\",\n          \"type\": \"integer\"\n        },\n        \"progress\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Progress of a `CHECKLIST` task, should be a number between 0 and 100\",\n          \"title\": \"Progress\"\n        },\n        \"projectId\": {\n          \"anyOf\": [\n            {\n              \"pattern\": \"^inbox\\\\d+$\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"description\": \"ID of the project the task is in\",\n          \"title\": \"Projectid\"\n        },\n        \"reminder\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Unclear what this is, but it can sometimes be one of the reminder triggers in `reminders`\",\n          \"title\": \"Reminder\"\n        },\n        \"reminders\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/TaskReminderV2\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"List of reminders for the task\",\n          \"title\": \"Reminders\"\n        },\n        \"repeatFirstDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"First date of the repeating task in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Repeatfirstdate\"\n        },\n        \"repeatFlag\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Recurring rules of task\",\n          \"title\": \"Repeatflag\"\n        },\n        \"repeatFrom\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                0,\n                1,\n                2\n              ],\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"When to start repeating the task\",\n          \"title\": \"Repeatfrom\"\n        },\n        \"repeatTaskId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"ID of the repeating task if a duplicate is somehow (re)opened\",\n          \"title\": \"Repeattaskid\"\n        },\n        \"startDate\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"Start date and time in `yyyy-MM-dd'T'HH:mm:ssZ` format\",\n          \"title\": \"Startdate\"\n        },\n        \"status\": {\n          \"description\": \"Status of the task\",\n          \"enum\": [\n            -1,\n            0,\n            1,\n            2\n          ],\n          \"title\": \"Status\",\n          \"type\": \"integer\"\n        },\n        \"tags\": {\n          \"default\": [],\n          \"description\": \"List of tag names for the task\",\n          \"items\": {\n            \"pattern\": \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\",\n            \"type\": \"string\"\n          },\n          \"title\": \"Tags\",\n          \"type\": \"array\"\n        },\n        \"title\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"Title of the task\",\n          \"title\": \"Title\"\n        },\n        \"timeZone\": {\n          \"anyOf\": [\n            {\n              \"enum\": [\n                \"Africa/Abidjan\",\n                \"Africa/Accra\",\n                \"Africa/Addis_Ababa\",\n                \"Africa/Algiers\",\n                \"Africa/Asmara\",\n                \"Africa/Asmera\",\n                \"Africa/Bamako\",\n                \"Africa/Bangui\",\n                \"Africa/Banjul\",\n                \"Africa/Bissau\",\n                \"Africa/Blantyre\",\n                \"Africa/Brazzaville\",\n                \"Africa/Bujumbura\",\n                \"Africa/Cairo\",\n                \"Africa/Casablanca\",\n                \"Africa/Ceuta\",\n                \"Africa/Conakry\",\n                \"Africa/Dakar\",\n                \"Africa/Dar_es_Salaam\",\n                \"Africa/Djibouti\",\n                \"Africa/Douala\",\n                \"Africa/El_Aaiun\",\n                \"Africa/Freetown\",\n                \"Africa/Gaborone\",\n                \"Africa/Harare\",\n                \"Africa/Johannesburg\",\n                \"Africa/Juba\",\n                \"Africa/Kampala\",\n                \"Africa/Khartoum\",\n                \"Africa/Kigali\",\n                \"Africa/Kinshasa\",\n                \"Africa/Lagos\",\n                \"Africa/Libreville\",\n                \"Africa/Lome\",\n                \"Africa/Luanda\",\n                \"Africa/Lubumbashi\",\n                \"Africa/Lusaka\",\n                \"Africa/Malabo\",\n                \"Africa/Maputo\",\n                \"Africa/Maseru\",\n                \"Africa/Mbabane\",\n                \"Africa/Mogadishu\",\n                \"Africa/Monrovia\",\n                \"Africa/Nairobi\",\n                \"Africa/Ndjamena\",\n                \"Africa/Niamey\",\n                \"Africa/Nouakchott\",\n                \"Africa/Ouagadougou\",\n                \"Africa/Porto-Novo\",\n                \"Africa/Sao_Tome\",\n                \"Africa/Timbuktu\",\n                \"Africa/Tripoli\",\n                \"Africa/Tunis\",\n                \"Africa/Windhoek\",\n                \"America/Adak\",\n                \"America/Anchorage\",\n                \"America/Anguilla\",\n                \"America/Antigua\",\n                \"America/Araguaina\",\n                \"America/Argentina/Buenos_Aires\",\n                \"America/Argentina/Catamarca\",\n                \"America/Argentina/ComodRivadavia\",\n                \"America/Argentina/Cordoba\",\n                \"America/Argentina/Jujuy\",\n                \"America/Argentina/La_Rioja\",\n                \"America/Argentina/Mendoza\",\n                \"America/Argentina/Rio_Gallegos\",\n                \"America/Argentina/Salta\",\n                \"America/Argentina/San_Juan\",\n                \"America/Argentina/San_Luis\",\n                \"America/Argentina/Tucuman\",\n                \"America/Argentina/Ushuaia\",\n                \"America/Aruba\",\n                \"America/Asuncion\",\n                \"America/Atikokan\",\n                \"America/Atka\",\n                \"America/Bahia\",\n                \"America/Bahia_Banderas\",\n                \"America/Barbados\",\n                \"America/Belem\",\n                \"America/Belize\",\n                \"America/Blanc-Sablon\",\n                \"America/Boa_Vista\",\n                \"America/Bogota\",\n                \"America/Boise\",\n                \"America/Buenos_Aires\",\n                \"America/Cambridge_Bay\",\n                \"America/Campo_Grande\",\n                \"America/Cancun\",\n                \"America/Caracas\",\n                \"America/Catamarca\",\n                \"America/Cayenne\",\n                \"America/Cayman\",\n                \"America/Chicago\",\n                \"America/Chihuahua\",\n                \"America/Ciudad_Juarez\",\n                \"America/Coral_Harbour\",\n                \"America/Cordoba\",\n                \"America/Costa_Rica\",\n                \"America/Coyhaique\",\n                \"America/Creston\",\n                \"America/Cuiaba\",\n                \"America/Curacao\",\n                \"America/Danmarkshavn\",\n                \"America/Dawson\",\n                \"America/Dawson_Creek\",\n                \"America/Denver\",\n                \"America/Detroit\",\n                \"America/Dominica\",\n                \"America/Edmonton\",\n                \"America/Eirunepe\",\n                \"America/El_Salvador\",\n                \"America/Ensenada\",\n                \"America/Fort_Nelson\",\n                \"America/Fort_Wayne\",\n                \"America/Fortaleza\",\n                \"America/Glace_Bay\",\n                \"America/Godthab\",\n                \"America/Goose_Bay\",\n                \"America/Grand_Turk\",\n                \"America/Grenada\",\n                \"America/Guadeloupe\",\n                \"America/Guatemala\",\n                \"America/Guayaquil\",\n                \"America/Guyana\",\n                \"America/Halifax\",\n                \"America/Havana\",\n                \"America/Hermosillo\",\n                \"America/Indiana/Indianapolis\",\n                \"America/Indiana/Knox\",\n                \"America/Indiana/Marengo\",\n                \"America/Indiana/Petersburg\",\n                \"America/Indiana/Tell_City\",\n                \"America/Indiana/Vevay\",\n                \"America/Indiana/Vincennes\",\n                \"America/Indiana/Winamac\",\n                \"America/Indianapolis\",\n                \"America/Inuvik\",\n                \"America/Iqaluit\",\n                \"America/Jamaica\",\n                \"America/Jujuy\",\n                \"America/Juneau\",\n                \"America/Kentucky/Louisville\",\n                \"America/Kentucky/Monticello\",\n                \"America/Knox_IN\",\n                \"America/Kralendijk\",\n                \"America/La_Paz\",\n                \"America/Lima\",\n                \"America/Los_Angeles\",\n                \"America/Louisville\",\n                \"America/Lower_Princes\",\n                \"America/Maceio\",\n                \"America/Managua\",\n                \"America/Manaus\",\n                \"America/Marigot\",\n                \"America/Martinique\",\n                \"America/Matamoros\",\n                \"America/Mazatlan\",\n                \"America/Mendoza\",\n                \"America/Menominee\",\n                \"America/Merida\",\n                \"America/Metlakatla\",\n                \"America/Mexico_City\",\n                \"America/Miquelon\",\n                \"America/Moncton\",\n                \"America/Monterrey\",\n                \"America/Montevideo\",\n                \"America/Montreal\",\n                \"America/Montserrat\",\n                \"America/Nassau\",\n                \"America/New_York\",\n                \"America/Nipigon\",\n                \"America/Nome\",\n                \"America/Noronha\",\n                \"America/North_Dakota/Beulah\",\n                \"America/North_Dakota/Center\",\n                \"America/North_Dakota/New_Salem\",\n                \"America/Nuuk\",\n                \"America/Ojinaga\",\n                \"America/Panama\",\n                \"America/Pangnirtung\",\n                \"America/Paramaribo\",\n                \"America/Phoenix\",\n                \"America/Port-au-Prince\",\n                \"America/Port_of_Spain\",\n                \"America/Porto_Acre\",\n                \"America/Porto_Velho\",\n                \"America/Puerto_Rico\",\n                \"America/Punta_Arenas\",\n                \"America/Rainy_River\",\n                \"America/Rankin_Inlet\",\n                \"America/Recife\",\n                \"America/Regina\",\n                \"America/Resolute\",\n                \"America/Rio_Branco\",\n                \"America/Rosario\",\n                \"America/Santa_Isabel\",\n                \"America/Santarem\",\n                \"America/Santiago\",\n                \"America/Santo_Domingo\",\n                \"America/Sao_Paulo\",\n                \"America/Scoresbysund\",\n                \"America/Shiprock\",\n                \"America/Sitka\",\n                \"America/St_Barthelemy\",\n                \"America/St_Johns\",\n                \"America/St_Kitts\",\n                \"America/St_Lucia\",\n                \"America/St_Thomas\",\n                \"America/St_Vincent\",\n                \"America/Swift_Current\",\n                \"America/Tegucigalpa\",\n                \"America/Thule\",\n                \"America/Thunder_Bay\",\n                \"America/Tijuana\",\n                \"America/Toronto\",\n                \"America/Tortola\",\n                \"America/Vancouver\",\n                \"America/Virgin\",\n                \"America/Whitehorse\",\n                \"America/Winnipeg\",\n                \"America/Yakutat\",\n                \"America/Yellowknife\",\n                \"Antarctica/Casey\",\n                \"Antarctica/Davis\",\n                \"Antarctica/DumontDUrville\",\n                \"Antarctica/Macquarie\",\n                \"Antarctica/Mawson\",\n                \"Antarctica/McMurdo\",\n                \"Antarctica/Palmer\",\n                \"Antarctica/Rothera\",\n                \"Antarctica/South_Pole\",\n                \"Antarctica/Syowa\",\n                \"Antarctica/Troll\",\n                \"Antarctica/Vostok\",\n                \"Arctic/Longyearbyen\",\n                \"Asia/Aden\",\n                \"Asia/Almaty\",\n                \"Asia/Amman\",\n                \"Asia/Anadyr\",\n                \"Asia/Aqtau\",\n                \"Asia/Aqtobe\",\n                \"Asia/Ashgabat\",\n                \"Asia/Ashkhabad\",\n                \"Asia/Atyrau\",\n                \"Asia/Baghdad\",\n                \"Asia/Bahrain\",\n                \"Asia/Baku\",\n                \"Asia/Bangkok\",\n                \"Asia/Barnaul\",\n                \"Asia/Beirut\",\n                \"Asia/Bishkek\",\n                \"Asia/Brunei\",\n                \"Asia/Calcutta\",\n                \"Asia/Chita\",\n                \"Asia/Choibalsan\",\n                \"Asia/Chongqing\",\n                \"Asia/Chungking\",\n                \"Asia/Colombo\",\n                \"Asia/Dacca\",\n                \"Asia/Damascus\",\n                \"Asia/Dhaka\",\n                \"Asia/Dili\",\n                \"Asia/Dubai\",\n                \"Asia/Dushanbe\",\n                \"Asia/Famagusta\",\n                \"Asia/Gaza\",\n                \"Asia/Harbin\",\n                \"Asia/Hebron\",\n                \"Asia/Ho_Chi_Minh\",\n                \"Asia/Hong_Kong\",\n                \"Asia/Hovd\",\n                \"Asia/Irkutsk\",\n                \"Asia/Istanbul\",\n                \"Asia/Jakarta\",\n                \"Asia/Jayapura\",\n                \"Asia/Jerusalem\",\n                \"Asia/Kabul\",\n                \"Asia/Kamchatka\",\n                \"Asia/Karachi\",\n                \"Asia/Kashgar\",\n                \"Asia/Kathmandu\",\n                \"Asia/Katmandu\",\n                \"Asia/Khandyga\",\n                \"Asia/Kolkata\",\n                \"Asia/Krasnoyarsk\",\n                \"Asia/Kuala_Lumpur\",\n                \"Asia/Kuching\",\n                \"Asia/Kuwait\",\n                \"Asia/Macao\",\n                \"Asia/Macau\",\n                \"Asia/Magadan\",\n                \"Asia/Makassar\",\n                \"Asia/Manila\",\n                \"Asia/Muscat\",\n                \"Asia/Nicosia\",\n                \"Asia/Novokuznetsk\",\n                \"Asia/Novosibirsk\",\n                \"Asia/Omsk\",\n                \"Asia/Oral\",\n                \"Asia/Phnom_Penh\",\n                \"Asia/Pontianak\",\n                \"Asia/Pyongyang\",\n                \"Asia/Qatar\",\n                \"Asia/Qostanay\",\n                \"Asia/Qyzylorda\",\n                \"Asia/Rangoon\",\n                \"Asia/Riyadh\",\n                \"Asia/Saigon\",\n                \"Asia/Sakhalin\",\n                \"Asia/Samarkand\",\n                \"Asia/Seoul\",\n                \"Asia/Shanghai\",\n                \"Asia/Singapore\",\n                \"Asia/Srednekolymsk\",\n                \"Asia/Taipei\",\n                \"Asia/Tashkent\",\n                \"Asia/Tbilisi\",\n                \"Asia/Tehran\",\n                \"Asia/Tel_Aviv\",\n                \"Asia/Thimbu\",\n                \"Asia/Thimphu\",\n                \"Asia/Tokyo\",\n                \"Asia/Tomsk\",\n                \"Asia/Ujung_Pandang\",\n                \"Asia/Ulaanbaatar\",\n                \"Asia/Ulan_Bator\",\n                \"Asia/Urumqi\",\n                \"Asia/Ust-Nera\",\n                \"Asia/Vientiane\",\n                \"Asia/Vladivostok\",\n                \"Asia/Yakutsk\",\n                \"Asia/Yangon\",\n                \"Asia/Yekaterinburg\",\n                \"Asia/Yerevan\",\n                \"Atlantic/Azores\",\n                \"Atlantic/Bermuda\",\n                \"Atlantic/Canary\",\n                \"Atlantic/Cape_Verde\",\n                \"Atlantic/Faeroe\",\n                \"Atlantic/Faroe\",\n                \"Atlantic/Jan_Mayen\",\n                \"Atlantic/Madeira\",\n                \"Atlantic/Reykjavik\",\n                \"Atlantic/South_Georgia\",\n                \"Atlantic/St_Helena\",\n                \"Atlantic/Stanley\",\n                \"Australia/ACT\",\n                \"Australia/Adelaide\",\n                \"Australia/Brisbane\",\n                \"Australia/Broken_Hill\",\n                \"Australia/Canberra\",\n                \"Australia/Currie\",\n                \"Australia/Darwin\",\n                \"Australia/Eucla\",\n                \"Australia/Hobart\",\n                \"Australia/LHI\",\n                \"Australia/Lindeman\",\n                \"Australia/Lord_Howe\",\n                \"Australia/Melbourne\",\n                \"Australia/NSW\",\n                \"Australia/North\",\n                \"Australia/Perth\",\n                \"Australia/Queensland\",\n                \"Australia/South\",\n                \"Australia/Sydney\",\n                \"Australia/Tasmania\",\n                \"Australia/Victoria\",\n                \"Australia/West\",\n                \"Australia/Yancowinna\",\n                \"Brazil/Acre\",\n                \"Brazil/DeNoronha\",\n                \"Brazil/East\",\n                \"Brazil/West\",\n                \"CET\",\n                \"CST6CDT\",\n                \"Canada/Atlantic\",\n                \"Canada/Central\",\n                \"Canada/Eastern\",\n                \"Canada/Mountain\",\n                \"Canada/Newfoundland\",\n                \"Canada/Pacific\",\n                \"Canada/Saskatchewan\",\n                \"Canada/Yukon\",\n                \"Chile/Continental\",\n                \"Chile/EasterIsland\",\n                \"Cuba\",\n                \"EET\",\n                \"EST\",\n                \"EST5EDT\",\n                \"Egypt\",\n                \"Eire\",\n                \"Etc/GMT\",\n                \"Etc/GMT+0\",\n                \"Etc/GMT+1\",\n                \"Etc/GMT+10\",\n                \"Etc/GMT+11\",\n                \"Etc/GMT+12\",\n                \"Etc/GMT+2\",\n                \"Etc/GMT+3\",\n                \"Etc/GMT+4\",\n                \"Etc/GMT+5\",\n                \"Etc/GMT+6\",\n                \"Etc/GMT+7\",\n                \"Etc/GMT+8\",\n                \"Etc/GMT+9\",\n                \"Etc/GMT-0\",\n                \"Etc/GMT-1\",\n                \"Etc/GMT-10\",\n                \"Etc/GMT-11\",\n                \"Etc/GMT-12\",\n                \"Etc/GMT-13\",\n                \"Etc/GMT-14\",\n                \"Etc/GMT-2\",\n                \"Etc/GMT-3\",\n                \"Etc/GMT-4\",\n                \"Etc/GMT-5\",\n                \"Etc/GMT-6\",\n                \"Etc/GMT-7\",\n                \"Etc/GMT-8\",\n                \"Etc/GMT-9\",\n                \"Etc/GMT0\",\n                \"Etc/Greenwich\",\n                \"Etc/UCT\",\n                \"Etc/UTC\",\n                \"Etc/Universal\",\n                \"Etc/Zulu\",\n                \"Europe/Amsterdam\",\n                \"Europe/Andorra\",\n                \"Europe/Astrakhan\",\n                \"Europe/Athens\",\n                \"Europe/Belfast\",\n                \"Europe/Belgrade\",\n                \"Europe/Berlin\",\n                \"Europe/Bratislava\",\n                \"Europe/Brussels\",\n                \"Europe/Bucharest\",\n                \"Europe/Budapest\",\n                \"Europe/Busingen\",\n                \"Europe/Chisinau\",\n                \"Europe/Copenhagen\",\n                \"Europe/Dublin\",\n                \"Europe/Gibraltar\",\n                \"Europe/Guernsey\",\n                \"Europe/Helsinki\",\n                \"Europe/Isle_of_Man\",\n                \"Europe/Istanbul\",\n                \"Europe/Jersey\",\n                \"Europe/Kaliningrad\",\n                \"Europe/Kiev\",\n                \"Europe/Kirov\",\n                \"Europe/Kyiv\",\n                \"Europe/Lisbon\",\n                \"Europe/Ljubljana\",\n                \"Europe/London\",\n                \"Europe/Luxembourg\",\n                \"Europe/Madrid\",\n                \"Europe/Malta\",\n                \"Europe/Mariehamn\",\n                \"Europe/Minsk\",\n                \"Europe/Monaco\",\n                \"Europe/Moscow\",\n                \"Europe/Nicosia\",\n                \"Europe/Oslo\",\n                \"Europe/Paris\",\n                \"Europe/Podgorica\",\n                \"Europe/Prague\",\n                \"Europe/Riga\",\n                \"Europe/Rome\",\n                \"Europe/Samara\",\n                \"Europe/San_Marino\",\n                \"Europe/Sarajevo\",\n                \"Europe/Saratov\",\n                \"Europe/Simferopol\",\n                \"Europe/Skopje\",\n                \"Europe/Sofia\",\n                \"Europe/Stockholm\",\n                \"Europe/Tallinn\",\n                \"Europe/Tirane\",\n                \"Europe/Tiraspol\",\n                \"Europe/Ulyanovsk\",\n                \"Europe/Uzhgorod\",\n                \"Europe/Vaduz\",\n                \"Europe/Vatican\",\n                \"Europe/Vienna\",\n                \"Europe/Vilnius\",\n                \"Europe/Volgograd\",\n                \"Europe/Warsaw\",\n                \"Europe/Zagreb\",\n                \"Europe/Zaporozhye\",\n                \"Europe/Zurich\",\n                \"Factory\",\n                \"GB\",\n                \"GB-Eire\",\n                \"GMT\",\n                \"GMT+0\",\n                \"GMT-0\",\n                \"GMT0\",\n                \"Greenwich\",\n                \"HST\",\n                \"Hongkong\",\n                \"Iceland\",\n                \"Indian/Antananarivo\",\n                \"Indian/Chagos\",\n                \"Indian/Christmas\",\n                \"Indian/Cocos\",\n                \"Indian/Comoro\",\n                \"Indian/Kerguelen\",\n                \"Indian/Mahe\",\n                \"Indian/Maldives\",\n                \"Indian/Mauritius\",\n                \"Indian/Mayotte\",\n                \"Indian/Reunion\",\n                \"Iran\",\n                \"Israel\",\n                \"Jamaica\",\n                \"Japan\",\n                \"Kwajalein\",\n                \"Libya\",\n                \"MET\",\n                \"MST\",\n                \"MST7MDT\",\n                \"Mexico/BajaNorte\",\n                \"Mexico/BajaSur\",\n                \"Mexico/General\",\n                \"NZ\",\n                \"NZ-CHAT\",\n                \"Navajo\",\n                \"PRC\",\n                \"PST8PDT\",\n                \"Pacific/Apia\",\n                \"Pacific/Auckland\",\n                \"Pacific/Bougainville\",\n                \"Pacific/Chatham\",\n                \"Pacific/Chuuk\",\n                \"Pacific/Easter\",\n                \"Pacific/Efate\",\n                \"Pacific/Enderbury\",\n                \"Pacific/Fakaofo\",\n                \"Pacific/Fiji\",\n                \"Pacific/Funafuti\",\n                \"Pacific/Galapagos\",\n                \"Pacific/Gambier\",\n                \"Pacific/Guadalcanal\",\n                \"Pacific/Guam\",\n                \"Pacific/Honolulu\",\n                \"Pacific/Johnston\",\n                \"Pacific/Kanton\",\n                \"Pacific/Kiritimati\",\n                \"Pacific/Kosrae\",\n                \"Pacific/Kwajalein\",\n                \"Pacific/Majuro\",\n                \"Pacific/Marquesas\",\n                \"Pacific/Midway\",\n                \"Pacific/Nauru\",\n                \"Pacific/Niue\",\n                \"Pacific/Norfolk\",\n                \"Pacific/Noumea\",\n                \"Pacific/Pago_Pago\",\n                \"Pacific/Palau\",\n                \"Pacific/Pitcairn\",\n                \"Pacific/Pohnpei\",\n                \"Pacific/Ponape\",\n                \"Pacific/Port_Moresby\",\n                \"Pacific/Rarotonga\",\n                \"Pacific/Saipan\",\n                \"Pacific/Samoa\",\n                \"Pacific/Tahiti\",\n                \"Pacific/Tarawa\",\n                \"Pacific/Tongatapu\",\n                \"Pacific/Truk\",\n                \"Pacific/Wake\",\n                \"Pacific/Wallis\",\n                \"Pacific/Yap\",\n                \"Poland\",\n                \"Portugal\",\n                \"ROC\",\n                \"ROK\",\n                \"Singapore\",\n                \"Turkey\",\n                \"UCT\",\n                \"US/Alaska\",\n                \"US/Aleutian\",\n                \"US/Arizona\",\n                \"US/Central\",\n                \"US/East-Indiana\",\n                \"US/Eastern\",\n                \"US/Hawaii\",\n                \"US/Indiana-Starke\",\n                \"US/Michigan\",\n                \"US/Mountain\",\n                \"US/Pacific\",\n                \"US/Samoa\",\n                \"UTC\",\n                \"Universal\",\n                \"W-SU\",\n                \"WET\",\n                \"Zulu\",\n                \"localtime\"\n              ],\n              \"minLength\": 1,\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\": \"IANA time zone. Example: 'America/Los_Angeles'\",\n          \"title\": \"Timezone\"\n        },\n        \"assignee\": {\n          \"anyOf\": [\n            {},\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Assignee\"\n        },\n        \"attachments\": {\n          \"default\": [],\n          \"items\": {},\n          \"title\": \"Attachments\",\n          \"type\": \"array\"\n        },\n        \"annoyingAlert\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Annoyingalert\"\n        },\n        \"columnId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Columnid\"\n        },\n        \"commentCount\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Commentcount\"\n        },\n        \"completedUserId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Completeduserid\"\n        },\n        \"creator\": {\n          \"title\": \"Creator\",\n          \"type\": \"integer\"\n        },\n        \"deleted\": {\n          \"title\": \"Deleted\",\n          \"type\": \"integer\"\n        },\n        \"exDate\": {\n          \"anyOf\": [\n            {\n              \"items\": {},\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Exdate\"\n        },\n        \"focusSummaries\": {\n          \"default\": [],\n          \"items\": {},\n          \"title\": \"Focussummaries\",\n          \"type\": \"array\"\n        },\n        \"imgMode\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Imgmode\"\n        },\n        \"isDirty\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Isdirty\"\n        },\n        \"local\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Local\"\n        },\n        \"remindTime\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Remindtime\"\n        },\n        \"sortOrder\": {\n          \"title\": \"Sortorder\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"etag\",\n        \"id\",\n        \"isFloating\",\n        \"items\",\n        \"modifiedTime\",\n        \"priority\",\n        \"projectId\",\n        \"status\",\n        \"title\",\n        \"creator\",\n        \"deleted\",\n        \"sortOrder\"\n      ],\n      \"title\": \"TaskV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for all the tasks in a batch response via the V2 API.\\n\\nThis model is used to represent all the tasks in a batch response from the V2 API.\\nIt lends itself to being used as parameters for a update request, but we do not have\\na complete understanding of how. For now, the `update` field is the most important,\\nas it contains all the active tasks for the user.\",\n  \"properties\": {\n    \"update\": {\n      \"description\": \"List of all active tasks for the user\",\n      \"items\": {\n        \"$ref\": \"#/$defs/TaskV2\"\n      },\n      \"title\": \"Update\",\n      \"type\": \"array\"\n    },\n    \"add\": {\n      \"items\": {},\n      \"title\": \"Add\",\n      \"type\": \"array\"\n    },\n    \"delete\": {\n      \"items\": {},\n      \"title\": \"Delete\",\n      \"type\": \"array\"\n    },\n    \"empty\": {\n      \"title\": \"Empty\",\n      \"type\": \"boolean\"\n    },\n    \"tagUpdate\": {\n      \"items\": {},\n      \"title\": \"Tagupdate\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"update\",\n    \"add\",\n    \"delete\",\n    \"empty\",\n    \"tagUpdate\"\n  ],\n  \"title\": \"SyncTaskBeanV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>update</code>                 (<code>list[TaskV2]</code>)             </li> <li> <code>add</code>                 (<code>list[Any]</code>)             </li> <li> <code>delete</code>                 (<code>list[Any]</code>)             </li> <li> <code>empty</code>                 (<code>bool</code>)             </li> <li> <code>tag_update</code>                 (<code>list[Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncTaskBeanV2.update","title":"update  <code>pydantic-field</code>","text":"<pre><code>update: list[TaskV2]\n</code></pre> <p>List of all active tasks for the user</p>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncTaskBeanV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncTaskOrderBeanV2","title":"SyncTaskOrderBeanV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Unknown model for the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Unknown model for the V2 API.\",\n  \"properties\": {\n    \"taskOrderByDate\": {\n      \"additionalProperties\": true,\n      \"title\": \"Taskorderbydate\",\n      \"type\": \"object\"\n    },\n    \"taskOrderByPriority\": {\n      \"additionalProperties\": true,\n      \"title\": \"Taskorderbypriority\",\n      \"type\": \"object\"\n    },\n    \"taskOrderByProject\": {\n      \"additionalProperties\": true,\n      \"title\": \"Taskorderbyproject\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"taskOrderByDate\",\n    \"taskOrderByPriority\",\n    \"taskOrderByProject\"\n  ],\n  \"title\": \"SyncTaskOrderBeanV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>task_order_by_date</code>                 (<code>dict[str, Any]</code>)             </li> <li> <code>task_order_by_priority</code>                 (<code>dict[str, Any]</code>)             </li> <li> <code>task_order_by_project</code>                 (<code>dict[str, Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/batch/#pyticktick.models.v2.responses.batch.SyncTaskOrderBeanV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/closed/","title":"Closed","text":""},{"location":"reference/models/v2/responses/closed/#pyticktick.models.v2.responses.closed","title":"pyticktick.models.v2.responses.closed","text":"<p>Model for the response of <code>GET</code> closed tasks via the V2 API.</p> <p>Classes:</p> Name Description <code>ClosedRespV2</code> <p>Model for the response of getting closed tasks via the V2 API.</p>"},{"location":"reference/models/v2/responses/closed/#pyticktick.models.v2.responses.closed.ClosedRespV2","title":"ClosedRespV2","text":"<p>               Bases: <code>RootModel[list[TaskV2]]</code></p> <p>Model for the response of getting closed tasks via the V2 API.</p> <p>Closed tasks are tasks that have been marked as completed or abandoned. They will not show up in the normal task list.</p>"},{"location":"reference/models/v2/responses/tag/","title":"Tag","text":""},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag","title":"pyticktick.models.v2.responses.tag","text":"<p>Response for a batch tag <code>POST</code> request via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>BatchTagRespV2</code> <p>Model for the response of a batch tag request via the V2 API.</p>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2","title":"BatchTagRespV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a batch tag request via the V2 API.</p> <p>Since tags do not have an <code>id</code> field, the <code>id2etag</code> and <code>id2error</code> fields return the <code>name</code> field as the key instead. Otherwise, the structure is the same as the <code>BatchRespV2</code> model.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a batch tag request via the V2 API.\\n\\nSince tags do not have an `id` field, the `id2etag` and `id2error` fields return\\nthe `name` field as the key instead. Otherwise, the structure is the same as the\\n`BatchRespV2` model.\",\n  \"properties\": {\n    \"id2error\": {\n      \"description\": \"Tag name to error message mapping\",\n      \"patternProperties\": {\n        \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\": {\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Id2Error\",\n      \"type\": \"object\"\n    },\n    \"id2etag\": {\n      \"description\": \"Tag name to ETag mapping of objects that were successfully created / updated\",\n      \"patternProperties\": {\n        \"^[^\\\\\\\\\\\\/\\\\\\\"#:*?&lt;&gt;|\\\\sA-Z]+$\": {\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Id2Etag\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"id2error\",\n    \"id2etag\"\n  ],\n  \"title\": \"BatchTagRespV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id2error</code>                 (<code>dict[TagName, ETag]</code>)             </li> <li> <code>id2etag</code>                 (<code>dict[TagName, ETag]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2.etags","title":"etags  <code>property</code>","text":"<pre><code>etags: list[str]\n</code></pre> <p>List of all the ETags in the response.</p>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2.id2error","title":"id2error  <code>pydantic-field</code>","text":"<pre><code>id2error: dict[TagName, ETag]\n</code></pre> <p>Tag name to error message mapping</p>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2.id2etag","title":"id2etag  <code>pydantic-field</code>","text":"<pre><code>id2etag: dict[TagName, ETag]\n</code></pre> <p>Tag name to ETag mapping of objects that were successfully created / updated</p>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2.ids","title":"ids  <code>property</code>","text":"<pre><code>ids: list[str]\n</code></pre> <p>List of all the IDs in the response.</p>"},{"location":"reference/models/v2/responses/tag/#pyticktick.models.v2.responses.tag.BatchTagRespV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/task_parent/","title":"Task Parent","text":""},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent","title":"pyticktick.models.v2.responses.task_parent","text":"<p>Response for a batch task parent <code>POST</code> request via the V2 API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>BatchTaskParentRespV2</code> <p>Model for the response of a batch task parent request via the V2 API.</p> <code>BatchTaskParentRespValueV2</code> <p>Model for the nested values of a batch task parent response via the V2 API.</p>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2","title":"BatchTaskParentRespV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a batch task parent request via the V2 API.</p> <p>The <code>id2etag</code> and <code>id2error</code> fields return the <code>objectId</code> field as the key like the <code>BatchRespV2</code> model. Unlike the <code>BatchRespV2</code> model, the values provided are more complex and informative than just an <code>ETag</code>.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"BatchTaskParentRespValueV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model for the nested values of a batch task parent response via the V2 API.\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Id\",\n          \"type\": \"string\"\n        },\n        \"parentId\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Parentid\"\n        },\n        \"childIds\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Childids\"\n        },\n        \"etag\": {\n          \"pattern\": \"^[a-z0-9]{8}$\",\n          \"title\": \"Etag\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"etag\"\n      ],\n      \"title\": \"BatchTaskParentRespValueV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a batch task parent request via the V2 API.\\n\\nThe `id2etag` and `id2error` fields return the `objectId` field as the key like\\nthe `BatchRespV2` model. Unlike the `BatchRespV2` model, the values provided are\\nmore complex and informative than just an `ETag`.\",\n  \"properties\": {\n    \"id2error\": {\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Mapping of tasks that failed to be updated\",\n      \"title\": \"Id2Error\",\n      \"type\": \"object\"\n    },\n    \"id2etag\": {\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/BatchTaskParentRespValueV2\"\n      },\n      \"description\": \"Mapping of tasks that were successfully updated\",\n      \"title\": \"Id2Etag\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"id2error\",\n    \"id2etag\"\n  ],\n  \"title\": \"BatchTaskParentRespV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id2error</code>                 (<code>dict[ObjectId, str]</code>)             </li> <li> <code>id2etag</code>                 (<code>dict[ObjectId, BatchTaskParentRespValueV2]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2.etags","title":"etags  <code>property</code>","text":"<pre><code>etags: list[str]\n</code></pre> <p>List of all the ETags in the response.</p>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2.id2error","title":"id2error  <code>pydantic-field</code>","text":"<pre><code>id2error: dict[ObjectId, str]\n</code></pre> <p>Mapping of tasks that failed to be updated</p>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2.id2etag","title":"id2etag  <code>pydantic-field</code>","text":"<pre><code>id2etag: dict[ObjectId, BatchTaskParentRespValueV2]\n</code></pre> <p>Mapping of tasks that were successfully updated</p>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2.ids","title":"ids  <code>property</code>","text":"<pre><code>ids: list[str]\n</code></pre> <p>List of all the IDs in the response.</p>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespValueV2","title":"BatchTaskParentRespValueV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the nested values of a batch task parent response via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the nested values of a batch task parent response via the V2 API.\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Id\",\n      \"type\": \"string\"\n    },\n    \"parentId\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Parentid\"\n    },\n    \"childIds\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Childids\"\n    },\n    \"etag\": {\n      \"pattern\": \"^[a-z0-9]{8}$\",\n      \"title\": \"Etag\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\",\n    \"etag\"\n  ],\n  \"title\": \"BatchTaskParentRespValueV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>id</code>                 (<code>ObjectId</code>)             </li> <li> <code>parent_id</code>                 (<code>ObjectId | None</code>)             </li> <li> <code>child_ids</code>                 (<code>list[ObjectId] | None</code>)             </li> <li> <code>etag</code>                 (<code>ETag</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/task_parent/#pyticktick.models.v2.responses.task_parent.BatchTaskParentRespValueV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/","title":"User","text":""},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user","title":"pyticktick.models.v2.responses.user","text":"<p>Pydantic models for user-related data returned by the TickTick API.</p> <p>Unofficial API</p> <p>These models are part of the unofficial TickTick API. They were created by reverse engineering the API. They may be incomplete or inaccurate.</p> <p>Classes:</p> Name Description <code>ScoreByDayV2</code> <p>The user's score for each day.</p> <code>TaskByDayV2</code> <p>The number of tasks both completed and not completed for a given day.</p> <code>TaskByMonthV2</code> <p>The number of tasks both completed and not completed for a given month.</p> <code>TaskByWeekV2</code> <p>The number of tasks both completed and not completed for a given week.</p> <code>TaskCountV2</code> <p>Model that represents the current task count for a given time period.</p> <code>UserProfileV2</code> <p>Model containing the user's profile information.</p> <code>UserSignOnV2</code> <p>Model for the response of a sign-on request via the V2 API.</p> <code>UserSignOnWithTOTPV2</code> <p>Model for the response of a sign-on request via the V2 API with TOTP.</p> <code>UserStatisticsV2</code> <p>Model for the response of a user statistics request via the V2 API.</p> <code>UserStatusV2</code> <p>Model for the response of a user status request via the V2 API.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.ScoreByDayV2","title":"ScoreByDayV2","text":"<p>               Bases: <code>RootModel[dict[date, int]]</code></p> <p>The user's score for each day.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.TaskByDayV2","title":"TaskByDayV2","text":"<p>               Bases: <code>RootModel[dict[date, TaskCountV2]]</code></p> <p>The number of tasks both completed and not completed for a given day.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.TaskByMonthV2","title":"TaskByMonthV2","text":"<p>               Bases: <code>RootModel[dict[date, TaskCountV2]]</code></p> <p>The number of tasks both completed and not completed for a given month.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.TaskByWeekV2","title":"TaskByWeekV2","text":"<p>               Bases: <code>RootModel[dict[date, TaskCountV2]]</code></p> <p>The number of tasks both completed and not completed for a given week.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.TaskCountV2","title":"TaskCountV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model that represents the current task count for a given time period.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model that represents the current task count for a given time period.\",\n  \"properties\": {\n    \"completeCount\": {\n      \"title\": \"Completecount\",\n      \"type\": \"integer\"\n    },\n    \"notCompleteCount\": {\n      \"title\": \"Notcompletecount\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"completeCount\",\n    \"notCompleteCount\"\n  ],\n  \"title\": \"TaskCountV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>complete_count</code>                 (<code>int</code>)             </li> <li> <code>not_complete_count</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.TaskCountV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserProfileV2","title":"UserProfileV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model containing the user's profile information.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model containing the user's profile information.\",\n  \"properties\": {\n    \"etimestamp\": {\n      \"title\": \"Etimestamp\"\n    },\n    \"username\": {\n      \"format\": \"email\",\n      \"title\": \"Username\",\n      \"type\": \"string\"\n    },\n    \"siteDomain\": {\n      \"title\": \"Sitedomain\",\n      \"type\": \"string\"\n    },\n    \"createdCampaign\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Createdcampaign\"\n    },\n    \"createdDeviceInfo\": {\n      \"title\": \"Createddeviceinfo\"\n    },\n    \"filledPassword\": {\n      \"title\": \"Filledpassword\",\n      \"type\": \"boolean\"\n    },\n    \"accountDomain\": {\n      \"title\": \"Accountdomain\"\n    },\n    \"extenalId\": {\n      \"title\": \"Extenalid\"\n    },\n    \"email\": {\n      \"title\": \"Email\"\n    },\n    \"verifiedEmail\": {\n      \"title\": \"Verifiedemail\",\n      \"type\": \"boolean\"\n    },\n    \"fakedEmail\": {\n      \"title\": \"Fakedemail\",\n      \"type\": \"boolean\"\n    },\n    \"phone\": {\n      \"title\": \"Phone\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"givenName\": {\n      \"title\": \"Givenname\"\n    },\n    \"familyName\": {\n      \"title\": \"Familyname\"\n    },\n    \"link\": {\n      \"title\": \"Link\"\n    },\n    \"picture\": {\n      \"title\": \"Picture\",\n      \"type\": \"string\"\n    },\n    \"gender\": {\n      \"title\": \"Gender\"\n    },\n    \"locale\": {\n      \"title\": \"Locale\",\n      \"type\": \"string\"\n    },\n    \"userCode\": {\n      \"format\": \"uuid4\",\n      \"title\": \"Usercode\",\n      \"type\": \"string\"\n    },\n    \"verCode\": {\n      \"title\": \"Vercode\"\n    },\n    \"verKey\": {\n      \"title\": \"Verkey\"\n    },\n    \"externalId\": {\n      \"title\": \"Externalid\"\n    },\n    \"phoneWithoutCountryCode\": {\n      \"title\": \"Phonewithoutcountrycode\"\n    },\n    \"displayName\": {\n      \"title\": \"Displayname\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"etimestamp\",\n    \"username\",\n    \"siteDomain\",\n    \"createdCampaign\",\n    \"createdDeviceInfo\",\n    \"filledPassword\",\n    \"accountDomain\",\n    \"extenalId\",\n    \"email\",\n    \"verifiedEmail\",\n    \"fakedEmail\",\n    \"phone\",\n    \"givenName\",\n    \"familyName\",\n    \"link\",\n    \"picture\",\n    \"gender\",\n    \"locale\",\n    \"userCode\",\n    \"verCode\",\n    \"verKey\",\n    \"externalId\",\n    \"phoneWithoutCountryCode\",\n    \"displayName\"\n  ],\n  \"title\": \"UserProfileV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>etimestamp</code>                 (<code>Any</code>)             </li> <li> <code>username</code>                 (<code>EmailStr</code>)             </li> <li> <code>site_domain</code>                 (<code>str</code>)             </li> <li> <code>created_campaign</code>                 (<code>str | None</code>)             </li> <li> <code>created_device_info</code>                 (<code>Any</code>)             </li> <li> <code>filled_password</code>                 (<code>bool</code>)             </li> <li> <code>account_domain</code>                 (<code>Any</code>)             </li> <li> <code>extenal_id</code>                 (<code>Any</code>)             </li> <li> <code>email</code>                 (<code>Any</code>)             </li> <li> <code>verified_email</code>                 (<code>bool</code>)             </li> <li> <code>faked_email</code>                 (<code>bool</code>)             </li> <li> <code>phone</code>                 (<code>Any</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>given_name</code>                 (<code>Any</code>)             </li> <li> <code>family_name</code>                 (<code>Any</code>)             </li> <li> <code>link</code>                 (<code>Any</code>)             </li> <li> <code>picture</code>                 (<code>str</code>)             </li> <li> <code>gender</code>                 (<code>Any</code>)             </li> <li> <code>locale</code>                 (<code>str</code>)             </li> <li> <code>user_code</code>                 (<code>UUID4</code>)             </li> <li> <code>ver_code</code>                 (<code>Any</code>)             </li> <li> <code>ver_key</code>                 (<code>Any</code>)             </li> <li> <code>external_id</code>                 (<code>Any</code>)             </li> <li> <code>phone_without_country_code</code>                 (<code>Any</code>)             </li> <li> <code>display_name</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserProfileV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2","title":"UserSignOnV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a sign-on request via the V2 API.</p> <p>The most important field is <code>token</code>, which is used for authentication during a session.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a sign-on request via the V2 API.\\n\\nThe most important field is `token`, which is used for authentication during a\\nsession.\",\n  \"properties\": {\n    \"inboxId\": {\n      \"description\": \"The user's inbox ID.\",\n      \"title\": \"Inboxid\",\n      \"type\": \"string\"\n    },\n    \"token\": {\n      \"description\": \"The user's authentication token that is used for short-term authentication.\",\n      \"title\": \"Token\",\n      \"type\": \"string\"\n    },\n    \"userId\": {\n      \"description\": \"The user's ID.\",\n      \"title\": \"Userid\",\n      \"type\": \"string\"\n    },\n    \"username\": {\n      \"description\": \"The user's email address.\",\n      \"format\": \"email\",\n      \"title\": \"Username\",\n      \"type\": \"string\"\n    },\n    \"activeTeamUser\": {\n      \"title\": \"Activeteamuser\",\n      \"type\": \"boolean\"\n    },\n    \"ds\": {\n      \"title\": \"Ds\",\n      \"type\": \"boolean\"\n    },\n    \"freeTrial\": {\n      \"title\": \"Freetrial\",\n      \"type\": \"boolean\"\n    },\n    \"freq\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Freq\"\n    },\n    \"gracePeriod\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Graceperiod\"\n    },\n    \"needSubscribe\": {\n      \"title\": \"Needsubscribe\",\n      \"type\": \"boolean\"\n    },\n    \"pro\": {\n      \"title\": \"Pro\",\n      \"type\": \"boolean\"\n    },\n    \"proEndDate\": {\n      \"title\": \"Proenddate\",\n      \"type\": \"string\"\n    },\n    \"proStartDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Prostartdate\"\n    },\n    \"subscribeFreq\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subscribefreq\"\n    },\n    \"subscribeType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subscribetype\"\n    },\n    \"teamPro\": {\n      \"title\": \"Teampro\",\n      \"type\": \"boolean\"\n    },\n    \"teamUser\": {\n      \"title\": \"Teamuser\",\n      \"type\": \"boolean\"\n    },\n    \"userCode\": {\n      \"format\": \"uuid4\",\n      \"title\": \"Usercode\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"inboxId\",\n    \"token\",\n    \"userId\",\n    \"username\",\n    \"activeTeamUser\",\n    \"ds\",\n    \"freeTrial\",\n    \"needSubscribe\",\n    \"pro\",\n    \"proEndDate\",\n    \"teamPro\",\n    \"teamUser\",\n    \"userCode\"\n  ],\n  \"title\": \"UserSignOnV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>inbox_id</code>                 (<code>str</code>)             </li> <li> <code>token</code>                 (<code>str</code>)             </li> <li> <code>user_id</code>                 (<code>str</code>)             </li> <li> <code>username</code>                 (<code>EmailStr</code>)             </li> <li> <code>active_team_user</code>                 (<code>bool</code>)             </li> <li> <code>ds</code>                 (<code>bool</code>)             </li> <li> <code>free_trial</code>                 (<code>bool</code>)             </li> <li> <code>freq</code>                 (<code>str | None</code>)             </li> <li> <code>grace_period</code>                 (<code>bool | None</code>)             </li> <li> <code>need_subscribe</code>                 (<code>bool</code>)             </li> <li> <code>pro</code>                 (<code>bool</code>)             </li> <li> <code>pro_end_date</code>                 (<code>str</code>)             </li> <li> <code>pro_start_date</code>                 (<code>str | None</code>)             </li> <li> <code>subscribe_freq</code>                 (<code>str | None</code>)             </li> <li> <code>subscribe_type</code>                 (<code>str | None</code>)             </li> <li> <code>team_pro</code>                 (<code>bool</code>)             </li> <li> <code>team_user</code>                 (<code>bool</code>)             </li> <li> <code>user_code</code>                 (<code>UUID4</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2.inbox_id","title":"inbox_id  <code>pydantic-field</code>","text":"<pre><code>inbox_id: str\n</code></pre> <p>The user's inbox ID.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2.token","title":"token  <code>pydantic-field</code>","text":"<pre><code>token: str\n</code></pre> <p>The user's authentication token that is used for short-term authentication.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2.user_id","title":"user_id  <code>pydantic-field</code>","text":"<pre><code>user_id: str\n</code></pre> <p>The user's ID.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2.username","title":"username  <code>pydantic-field</code>","text":"<pre><code>username: EmailStr\n</code></pre> <p>The user's email address.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnWithTOTPV2","title":"UserSignOnWithTOTPV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a sign-on request via the V2 API with TOTP.</p> <p>This model is used when the user has enabled two-factor authentication (2FA) via TOTP (Time-based One-Time Password).</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a sign-on request via the V2 API with TOTP.\\n\\nThis model is used when the user has enabled two-factor authentication (2FA) via\\nTOTP (Time-based One-Time Password).\",\n  \"properties\": {\n    \"authId\": {\n      \"description\": \"The authentication ID used for the sign-on request.\",\n      \"title\": \"Authid\",\n      \"type\": \"string\"\n    },\n    \"expireTime\": {\n      \"description\": \"The expiration time of the authentication ID in seconds since the epoch.\",\n      \"title\": \"Expiretime\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"authId\",\n    \"expireTime\"\n  ],\n  \"title\": \"UserSignOnWithTOTPV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>auth_id</code>                 (<code>str</code>)             </li> <li> <code>expire_time</code>                 (<code>int</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnWithTOTPV2.auth_id","title":"auth_id  <code>pydantic-field</code>","text":"<pre><code>auth_id: str\n</code></pre> <p>The authentication ID used for the sign-on request.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnWithTOTPV2.expire_time","title":"expire_time  <code>pydantic-field</code>","text":"<pre><code>expire_time: int\n</code></pre> <p>The expiration time of the authentication ID in seconds since the epoch.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserSignOnWithTOTPV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatisticsV2","title":"UserStatisticsV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a user statistics request via the V2 API.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ScoreByDayV2\": {\n      \"additionalProperties\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"The user's score for each day.\",\n      \"propertyNames\": {\n        \"format\": \"date\"\n      },\n      \"title\": \"ScoreByDayV2\",\n      \"type\": \"object\"\n    },\n    \"TaskByDayV2\": {\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/TaskCountV2\"\n      },\n      \"description\": \"The number of tasks both completed and not completed for a given day.\",\n      \"propertyNames\": {\n        \"format\": \"date\"\n      },\n      \"title\": \"TaskByDayV2\",\n      \"type\": \"object\"\n    },\n    \"TaskByMonthV2\": {\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/TaskCountV2\"\n      },\n      \"description\": \"The number of tasks both completed and not completed for a given month.\",\n      \"propertyNames\": {\n        \"format\": \"date\"\n      },\n      \"title\": \"TaskByMonthV2\",\n      \"type\": \"object\"\n    },\n    \"TaskByWeekV2\": {\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/TaskCountV2\"\n      },\n      \"description\": \"The number of tasks both completed and not completed for a given week.\",\n      \"propertyNames\": {\n        \"format\": \"date\"\n      },\n      \"title\": \"TaskByWeekV2\",\n      \"type\": \"object\"\n    },\n    \"TaskCountV2\": {\n      \"additionalProperties\": false,\n      \"description\": \"Model that represents the current task count for a given time period.\",\n      \"properties\": {\n        \"completeCount\": {\n          \"title\": \"Completecount\",\n          \"type\": \"integer\"\n        },\n        \"notCompleteCount\": {\n          \"title\": \"Notcompletecount\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"completeCount\",\n        \"notCompleteCount\"\n      ],\n      \"title\": \"TaskCountV2\",\n      \"type\": \"object\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a user statistics request via the V2 API.\",\n  \"properties\": {\n    \"score\": {\n      \"title\": \"Score\",\n      \"type\": \"integer\"\n    },\n    \"level\": {\n      \"title\": \"Level\",\n      \"type\": \"integer\"\n    },\n    \"yesterdayCompleted\": {\n      \"title\": \"Yesterdaycompleted\",\n      \"type\": \"integer\"\n    },\n    \"todayCompleted\": {\n      \"title\": \"Todaycompleted\",\n      \"type\": \"integer\"\n    },\n    \"totalCompleted\": {\n      \"title\": \"Totalcompleted\",\n      \"type\": \"integer\"\n    },\n    \"scoreByDay\": {\n      \"$ref\": \"#/$defs/ScoreByDayV2\"\n    },\n    \"taskByDay\": {\n      \"$ref\": \"#/$defs/TaskByDayV2\"\n    },\n    \"taskByWeek\": {\n      \"$ref\": \"#/$defs/TaskByWeekV2\"\n    },\n    \"taskByMonth\": {\n      \"$ref\": \"#/$defs/TaskByMonthV2\"\n    },\n    \"todayPomoCount\": {\n      \"title\": \"Todaypomocount\",\n      \"type\": \"integer\"\n    },\n    \"yesterdayPomoCount\": {\n      \"title\": \"Yesterdaypomocount\",\n      \"type\": \"integer\"\n    },\n    \"totalPomoCount\": {\n      \"title\": \"Totalpomocount\",\n      \"type\": \"integer\"\n    },\n    \"todayPomoDuration\": {\n      \"title\": \"Todaypomoduration\",\n      \"type\": \"integer\"\n    },\n    \"yesterdayPomoDuration\": {\n      \"title\": \"Yesterdaypomoduration\",\n      \"type\": \"integer\"\n    },\n    \"totalPomoDuration\": {\n      \"title\": \"Totalpomoduration\",\n      \"type\": \"integer\"\n    },\n    \"pomoGoal\": {\n      \"title\": \"Pomogoal\",\n      \"type\": \"integer\"\n    },\n    \"pomoDurationGoal\": {\n      \"title\": \"Pomodurationgoal\",\n      \"type\": \"integer\"\n    },\n    \"pomoByDay\": {\n      \"additionalProperties\": true,\n      \"title\": \"Pomobyday\",\n      \"type\": \"object\"\n    },\n    \"pomoByWeek\": {\n      \"additionalProperties\": true,\n      \"title\": \"Pomobyweek\",\n      \"type\": \"object\"\n    },\n    \"pomoByMonth\": {\n      \"additionalProperties\": true,\n      \"title\": \"Pomobymonth\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"score\",\n    \"level\",\n    \"yesterdayCompleted\",\n    \"todayCompleted\",\n    \"totalCompleted\",\n    \"scoreByDay\",\n    \"taskByDay\",\n    \"taskByWeek\",\n    \"taskByMonth\",\n    \"todayPomoCount\",\n    \"yesterdayPomoCount\",\n    \"totalPomoCount\",\n    \"todayPomoDuration\",\n    \"yesterdayPomoDuration\",\n    \"totalPomoDuration\",\n    \"pomoGoal\",\n    \"pomoDurationGoal\",\n    \"pomoByDay\",\n    \"pomoByWeek\",\n    \"pomoByMonth\"\n  ],\n  \"title\": \"UserStatisticsV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>score</code>                 (<code>int</code>)             </li> <li> <code>level</code>                 (<code>int</code>)             </li> <li> <code>yesterday_completed</code>                 (<code>int</code>)             </li> <li> <code>today_completed</code>                 (<code>int</code>)             </li> <li> <code>total_completed</code>                 (<code>int</code>)             </li> <li> <code>score_by_day</code>                 (<code>ScoreByDayV2</code>)             </li> <li> <code>task_by_day</code>                 (<code>TaskByDayV2</code>)             </li> <li> <code>task_by_week</code>                 (<code>TaskByWeekV2</code>)             </li> <li> <code>task_by_month</code>                 (<code>TaskByMonthV2</code>)             </li> <li> <code>today_pomo_count</code>                 (<code>int</code>)             </li> <li> <code>yesterday_pomo_count</code>                 (<code>int</code>)             </li> <li> <code>total_pomo_count</code>                 (<code>int</code>)             </li> <li> <code>today_pomo_duration</code>                 (<code>int</code>)             </li> <li> <code>yesterday_pomo_duration</code>                 (<code>int</code>)             </li> <li> <code>total_pomo_duration</code>                 (<code>int</code>)             </li> <li> <code>pomo_goal</code>                 (<code>int</code>)             </li> <li> <code>pomo_duration_goal</code>                 (<code>int</code>)             </li> <li> <code>pomo_by_day</code>                 (<code>dict[str, Any]</code>)             </li> <li> <code>pomo_by_week</code>                 (<code>dict[str, Any]</code>)             </li> <li> <code>pomo_by_month</code>                 (<code>dict[str, Any]</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatisticsV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2","title":"UserStatusV2  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModelV2</code></p> <p>Model for the response of a user status request via the V2 API.</p> <p>This user \"status\" is mainly about the user's subscription status, rather than their current activity on TickTick.</p> Show JSON schema: <pre><code>{\n  \"additionalProperties\": false,\n  \"description\": \"Model for the response of a user status request via the V2 API.\\n\\nThis user \\\"status\\\" is mainly about the user's subscription status, rather than\\ntheir current activity on TickTick.\",\n  \"properties\": {\n    \"userId\": {\n      \"description\": \"The user's ID.\",\n      \"title\": \"Userid\",\n      \"type\": \"string\"\n    },\n    \"userCode\": {\n      \"format\": \"uuid4\",\n      \"title\": \"Usercode\",\n      \"type\": \"string\"\n    },\n    \"username\": {\n      \"description\": \"The user's email address.\",\n      \"format\": \"email\",\n      \"title\": \"Username\",\n      \"type\": \"string\"\n    },\n    \"teamPro\": {\n      \"title\": \"Teampro\",\n      \"type\": \"boolean\"\n    },\n    \"proStartDate\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"description\": \"The date when the user started their premium subscription.\",\n      \"title\": \"Prostartdate\"\n    },\n    \"proEndDate\": {\n      \"description\": \"The date when the user's premium subscription is slated to end.\",\n      \"title\": \"Proenddate\",\n      \"type\": \"string\"\n    },\n    \"subscribeType\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subscribetype\"\n    },\n    \"subscribeFreq\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Subscribefreq\"\n    },\n    \"needSubscribe\": {\n      \"title\": \"Needsubscribe\",\n      \"type\": \"boolean\"\n    },\n    \"freq\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Freq\"\n    },\n    \"inboxId\": {\n      \"description\": \"The user's inbox ID.\",\n      \"title\": \"Inboxid\",\n      \"type\": \"string\"\n    },\n    \"teamUser\": {\n      \"title\": \"Teamuser\",\n      \"type\": \"boolean\"\n    },\n    \"activeTeamUser\": {\n      \"title\": \"Activeteamuser\",\n      \"type\": \"boolean\"\n    },\n    \"freeTrial\": {\n      \"title\": \"Freetrial\",\n      \"type\": \"boolean\"\n    },\n    \"pro\": {\n      \"description\": \"Whether or not a user has subscribed to the premium plan.\",\n      \"title\": \"Pro\",\n      \"type\": \"boolean\"\n    },\n    \"ds\": {\n      \"title\": \"Ds\",\n      \"type\": \"boolean\"\n    },\n    \"timeStamp\": {\n      \"description\": \"Timestamp of the last update.\",\n      \"title\": \"Timestamp\",\n      \"type\": \"integer\"\n    },\n    \"gracePeriod\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Graceperiod\"\n    }\n  },\n  \"required\": [\n    \"userId\",\n    \"userCode\",\n    \"username\",\n    \"teamPro\",\n    \"proEndDate\",\n    \"needSubscribe\",\n    \"inboxId\",\n    \"teamUser\",\n    \"activeTeamUser\",\n    \"freeTrial\",\n    \"pro\",\n    \"ds\",\n    \"timeStamp\"\n  ],\n  \"title\": \"UserStatusV2\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>user_id</code>                 (<code>str</code>)             </li> <li> <code>user_code</code>                 (<code>UUID4</code>)             </li> <li> <code>username</code>                 (<code>EmailStr</code>)             </li> <li> <code>team_pro</code>                 (<code>bool</code>)             </li> <li> <code>pro_start_date</code>                 (<code>str | None</code>)             </li> <li> <code>pro_end_date</code>                 (<code>str</code>)             </li> <li> <code>subscribe_type</code>                 (<code>str | None</code>)             </li> <li> <code>subscribe_freq</code>                 (<code>str | None</code>)             </li> <li> <code>need_subscribe</code>                 (<code>bool</code>)             </li> <li> <code>freq</code>                 (<code>str | None</code>)             </li> <li> <code>inbox_id</code>                 (<code>str</code>)             </li> <li> <code>team_user</code>                 (<code>bool</code>)             </li> <li> <code>active_team_user</code>                 (<code>bool</code>)             </li> <li> <code>free_trial</code>                 (<code>bool</code>)             </li> <li> <code>pro</code>                 (<code>bool</code>)             </li> <li> <code>ds</code>                 (<code>bool</code>)             </li> <li> <code>time_stamp</code>                 (<code>int</code>)             </li> <li> <code>grace_period</code>                 (<code>bool | None</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>empty_str_to_none</code> </li> </ul>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.inbox_id","title":"inbox_id  <code>pydantic-field</code>","text":"<pre><code>inbox_id: str\n</code></pre> <p>The user's inbox ID.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.pro","title":"pro  <code>pydantic-field</code>","text":"<pre><code>pro: bool\n</code></pre> <p>Whether or not a user has subscribed to the premium plan.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.pro_end_date","title":"pro_end_date  <code>pydantic-field</code>","text":"<pre><code>pro_end_date: str\n</code></pre> <p>The date when the user's premium subscription is slated to end.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.pro_start_date","title":"pro_start_date  <code>pydantic-field</code>","text":"<pre><code>pro_start_date: str | None = None\n</code></pre> <p>The date when the user started their premium subscription.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.time_stamp","title":"time_stamp  <code>pydantic-field</code>","text":"<pre><code>time_stamp: int\n</code></pre> <p>Timestamp of the last update.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.user_id","title":"user_id  <code>pydantic-field</code>","text":"<pre><code>user_id: str\n</code></pre> <p>The user's ID.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.username","title":"username  <code>pydantic-field</code>","text":"<pre><code>username: EmailStr\n</code></pre> <p>The user's email address.</p>"},{"location":"reference/models/v2/responses/user/#pyticktick.models.v2.responses.user.UserStatusV2.empty_str_to_none","title":"empty_str_to_none  <code>pydantic-validator</code>","text":"<pre><code>empty_str_to_none(v: Any) -&gt; Any\n</code></pre> <p>Convert empty strings to None.</p> <p>TickTick API responses sometimes conflates <code>None</code> and empty strings for optional fields. This validator ensures that empty strings are converted to <code>None</code>, which then allows for more consistent handling of the data within the library.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>Any</code> <p>The value to validate.</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>The input value if it is not an empty string, otherwise <code>None</code>.</p> Source code in <code>src/pyticktick/models/v2/models.py</code> <pre><code>@field_validator(\"*\", mode=\"before\")\n@classmethod\ndef empty_str_to_none(cls, v: Any) -&gt; Any:\n    \"\"\"Convert empty strings to None.\n\n    TickTick API responses sometimes conflates `None` and empty strings for\n    optional fields. This validator ensures that empty strings are converted to\n    `None`, which then allows for more consistent handling of the data within the\n    library.\n\n    Args:\n        v (Any): The value to validate.\n\n    Returns:\n        Any: The input value if it is not an empty string, otherwise `None`.\n    \"\"\"\n    if isinstance(v, str) and len(v) == 0:\n        return None\n    return v\n</code></pre>"}]}